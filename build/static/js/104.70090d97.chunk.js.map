{"version":3,"sources":["component/UserDashBoard/UserDashboardCompontents/UserMyProfile/MyProfile.js","pages/UserDashboard/Settings/MyProfile.js","assets/files/SVG/Drop Down 4.svg","assets/files/SVG/Picture Icon.svg","assets/files/SVG/Profile Picture.svg","component/common/NormalMultiSelect/index.js"],"names":["options","label","value","name","gender","MyProfile","connect","dispatch","bindActionCreators","getUserDetail","useState","firstName","lastName","email","phoneNo","paymentProfileId","mottoPasses","signUpType","userData","setUserData","errors","setErrors","image","setImage","previewImage","setPreviewTmage","paymentMethod","setPaymentMethod","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","then","data","tempData","location","DOB","getPaymentMethods","PaymentApi","api","type","getUserPaymentDetails","handleInput","e","target","tempErrors","undefined","tempUserData","validateFields","fieldInvalidList","validate","nameValidation","format","pattern","flags","message","length","minimum","tooShort","maximum","tooLong","presence","allowEmpty","validationRules","className","src","style","objectFit","width","height","borderRadius","onClick","event","preventDefault","current","click","Profile","alt","ProfileAdd","ref","accept","onChange","file","files","substr","onSubmit","placeholder","arrow","handleChange","onKeyDown","keyCode","disableDropdown","countryCodeEditable","country","inputProps","disabled","payload","editUserData","userApi","body","Main","NormalMultiSelect","newValue","props","isMulti","forEach","array","obj","push","handleInputChange","handleinputChange","this","isReadOnly","isClearable","isSearchable","isBoldLabel","showArrow","customStyles","base","fontSize","color","fontWeight","lineHeight","display","justifyContent","alignItems","fontFamily","indicatorSeparator","valueContainer","padding","singleValue","dropdownIndicator","option","isFocused","backgroundColor","textAlign","control","border","boxShadow","outline","background","minHeight","classNamePrefix","isDisabled","styles","find","components","DropdownIndicator","logo","Component"],"mappings":"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","file":"static/js/104.70090d97.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Profile from \"../../../../assets/files/SVG/Profile Picture.svg\";\r\nimport ProfileAdd from \"../../../../assets/files/SVG/Picture Icon.svg\";\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { getUserDetail } from \"action/userAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { NormalMultiSelect } from \"component/common/NormalMultiSelect\";\r\nimport validate from \"service/validation\";\r\nimport { PaymentApi, userApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nconst options = [\r\n  { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\r\n  {\r\n    label: \"New York City\",\r\n    value: \"New York City\",\r\n    name: \"serviceableLocation\",\r\n  },\r\n  { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\r\n  { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\r\n];\r\nconst gender = [\r\n  { value: \"Male\", label: \"Male\" },\r\n  { value: \"Female\", label: \"Female\" },\r\n];\r\n\r\n// firstName\r\n// lastName\r\n// password\r\n// email\r\n// phoneNo\r\n// signUpType\r\n// mottoPasses\r\n// status\r\n// paymentProfileId\r\nconst MyProfileClass = ({ getUserDetail }) => {\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNo: \"\",\r\n    paymentProfileId: \"\",\r\n    mottoPasses: \"\",\r\n    signUpType: \"email\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [getUserData, setGetUserData] = useState();\r\n  const [image, setImage] = useState();\r\n  const [previewImage, setPreviewTmage] = useState();\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const fileInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewTmage(reader.result);\r\n      };\r\n      reader.readAsDataURL(image);\r\n    } else {\r\n      setPreviewTmage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  const getUserPaymentDetails = () => {\r\n    const { getPaymentMethods } = PaymentApi;\r\n\r\n    api({ ...getPaymentMethods }).then(({ data }) => {\r\n      const { type } = data[0] || {};\r\n\r\n      setPaymentMethod(type);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserProfileData();\r\n    getUserPaymentDetails();\r\n  }, []);\r\n\r\n  function getUserProfileData() {\r\n    getUserDetail().then((data) => {\r\n      let tempData = {\r\n        firstName: data.firstName || \"\",\r\n        lastName: data.lastName || \"\",\r\n        email: data.email || \"\",\r\n        phoneNo: data.phoneNo || \"\",\r\n        paymentProfileId: data.paymentProfileId || \"\",\r\n        mottoPasses: data.mottoPasses || \"\",\r\n        location: data.location || \"\",\r\n        gender: data.gender || \"\",\r\n        DOB: data.DOB || \"\",\r\n        signUpType: \"email\",\r\n      };\r\n\r\n      setUserData(tempData);\r\n    });\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value, label } = e.target || e || {};\r\n\r\n    let tempErrors = { ...errors };\r\n\r\n    tempErrors[name] = undefined;\r\n\r\n    let tempUserData = { ...userData };\r\n\r\n    tempUserData[name] = value;\r\n\r\n    setUserData({ ...tempUserData });\r\n\r\n    setErrors({ ...errors, ...tempErrors });\r\n  };\r\n\r\n  const validationRules = () => {\r\n    let nameValidation = {\r\n      format: {\r\n        pattern: /^[a-zA-Z ]*$/,\r\n        flags: \"i\",\r\n        message: \"must be alphabets and spaces\",\r\n      },\r\n      length: {\r\n        minimum: 3,\r\n        tooShort: \"must contain alteast 3 character\",\r\n        maximum: 35,\r\n        tooLong: \"must contain less than 35 character\",\r\n      },\r\n    };\r\n\r\n    return {\r\n      firstName: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^First name is required\",\r\n        },\r\n        ...nameValidation,\r\n      },\r\n      location: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Location is required\",\r\n        },\r\n        ...nameValidation,\r\n      },\r\n      phoneNo: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Phone number is required\",\r\n        },\r\n        format: {\r\n          pattern: /^[1-9][0-9]*$/,\r\n          flags: \"i\",\r\n          message: \"^Invalid number\",\r\n        },\r\n        length: {\r\n          minimum: 8,\r\n          tooShort: \"^Invalid number\",\r\n          maximum: 15,\r\n          tooLong: \"^Invalid number\",\r\n        },\r\n      },\r\n      email: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Email is required\",\r\n        },\r\n        email: true,\r\n      },\r\n      location: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Location is required\",\r\n        },\r\n      },\r\n      gender: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Gender is required\",\r\n        },\r\n      },\r\n      DOB: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Date of birth is required\",\r\n        },\r\n      },\r\n    };\r\n  };\r\n\r\n  const validateFields = (data) => {\r\n    let fieldInvalidList = validate(data, validationRules());\r\n\r\n    if (fieldInvalidList !== undefined) {\r\n      let errors = {\r\n        ...fieldInvalidList,\r\n      };\r\n      setErrors({ ...errors, ...fieldInvalidList });\r\n    }\r\n\r\n    return !fieldInvalidList;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let payload = {\r\n      firstName: userData.firstName,\r\n      location: userData.location,\r\n      DOB: userData.DOB,\r\n      gender: userData.gender,\r\n      email: userData.email,\r\n      phoneNo: userData.phoneNo,\r\n    };\r\n\r\n    if (!validateFields(payload)) return;\r\n\r\n    const { editUserData } = userApi;\r\n\r\n    editUserData.body = payload;\r\n\r\n    api({ ...editUserData });\r\n\r\n    // console.log(payload);\r\n  };\r\n  // const handleSaveChange = () => {\r\n  //     const { firstName } = userData;\r\n\r\n  //     let payload = {\r\n  //         firstName: firstName,\r\n  //     };\r\n\r\n  //     fetch(\"http://doodlebluelive.com:2307/v1/user/edit\", {\r\n  //         method: \"POST\",\r\n  //         headers: new Headers({\r\n  //             Authorization: localStorage.getItem(\"token\"),\r\n  //             \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  //         }),\r\n  //     })\r\n  //         .then((response) => response.json())\r\n  //         .then((data) => {\r\n  //             setUserData(data[\"data\"]);\r\n  //         });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"myprofile_outter_container\">\r\n        <div className=\"container\">\r\n          <div className=\"myprofile_inner_container\">\r\n            <div className=\"myprofile_header\">\r\n              <h2>My Profile</h2>\r\n            </div>\r\n            <div className=\"profile_wrapper\">\r\n              <div className=\"profile_grid\">\r\n                <div className=\"profile_pic_col\">\r\n                  <div className=\"profile_picture\">\r\n                    {previewImage ? (\r\n                      <img\r\n                        src={previewImage}\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          width: \"200px\",\r\n                          height: \"200px\",\r\n                          borderRadius: \"100px\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setPreviewTmage(null);\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <div className=\"combin_profile\">\r\n                        <button\r\n                          onClick={(event) => {\r\n                            event.preventDefault();\r\n                            fileInputRef.current.click();\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={Profile}\r\n                            alt=\"icon\"\r\n                            style={{\r\n                              objectFit: \"cover\",\r\n                              width: \"100px\",\r\n                              height: \"100px\",\r\n                            }}\r\n                          />\r\n                        </button>\r\n                        <img\r\n                          src={ProfileAdd}\r\n                          alt=\"icon\"\r\n                          style={{\r\n                            objectFit: \"cover\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            borderRadius: \"100px\",\r\n                          }}\r\n                          onClick={(event) => {\r\n                            event.preventDefault();\r\n                            fileInputRef.current.click();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <input\r\n                      type=\"file\"\r\n                      ref={fileInputRef}\r\n                      accept=\"image/*\"\r\n                      onChange={(event) => {\r\n                        const file = event.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                          setImage(file);\r\n                        } else {\r\n                          setImage(null);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <h5>Remove Profile Picture</h5>\r\n                  </div>\r\n                </div>\r\n                <div className=\"profile_form_col\">\r\n                  <div className=\"outter_profile_form\">\r\n                    <form onSubmit={(e) => e.preventDefault()}>\r\n                      <div className=\"inner_profile_form\">\r\n                        <div className=\"input_profile\">\r\n                          <label>Name </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={userData.firstName}\r\n                            onChange={handleInput}\r\n                            name=\"firstName\"\r\n                          />\r\n\r\n                          {errors.firstName && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.firstName[0]}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Location </label>\r\n                          <NormalMultiSelect\r\n                            placeholder=\"Select Your City\"\r\n                            value={userData.location}\r\n                            arrow={true}\r\n                            name=\"location\"\r\n                            options={options}\r\n                            handleChange={handleInput}\r\n                          />\r\n\r\n                          {errors.location && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.location[0]}\r\n                            </span>\r\n                          )}\r\n                          {/* <Dropdown\r\n                            className=\"custom_dropdown\"\r\n                            title=\"Select Location\"\r\n                            list={options}\r\n                            value={userData.location}\r\n                            onChange={(e) => {\r\n                              setUserData({\r\n                                ...userData,\r\n                                location: e.value,\r\n                              });\r\n                              console.log(e.value);\r\n                            }}\r\n                            name=\"location\"\r\n                          /> */}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Date of Birth </label>\r\n                          <input\r\n                            type=\"date\"\r\n                            value={userData.DOB}\r\n                            onKeyDown={(e) =>\r\n                              e.keyCode !== 8 ? e.preventDefault() : \"\"\r\n                            }\r\n                            name=\"DOB\"\r\n                            onChange={handleInput}\r\n                          />\r\n                          {errors.DOB && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.DOB[0]}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Gender </label>\r\n\r\n                          <NormalMultiSelect\r\n                            placeholder=\"Select Your Gender\"\r\n                            value={userData.gender}\r\n                            arrow={true}\r\n                            name=\"gender\"\r\n                            options={gender}\r\n                            handleChange={handleInput}\r\n                          />\r\n\r\n                          {errors.gender && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.gender[0]}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Email </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={userData.email}\r\n                            onChange={handleInput}\r\n                            name=\"email\"\r\n                          />\r\n\r\n                          {errors.email && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.email[0]}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Phone </label>\r\n\r\n                          <ReactPhoneInput\r\n                            type=\"phone\"\r\n                            disableDropdown\r\n                            // disableAreaCodes\r\n                            countryCodeEditable={true}\r\n                            value={userData.phoneNo}\r\n                            placeholder=\"Phone Number\"\r\n                            country=\"us\"\r\n                            inputProps={{\r\n                              name: \"phoneNo\",\r\n                            }}\r\n                            name=\"phoneNo\"\r\n                            onChange={(e) =>\r\n                              handleInput({\r\n                                target: { name: \"phoneNo\", value: e },\r\n                              })\r\n                            }\r\n                          />\r\n\r\n                          {errors.phoneNo && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.phoneNo[0]}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Payment Method </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={paymentMethod}\r\n                            disabled\r\n                            onChange={() => {}}\r\n                          />\r\n                        </div>\r\n                        {/* <div className=\"input_profile\">\r\n                          <label>Password </label>\r\n                          <input\r\n                            type=\"password\"\r\n                            onChange={handleInput}\r\n                            name=\"password\"\r\n                          />\r\n\r\n                          {errors.password && (\r\n                            <span className=\"d-block w-100 text-danger fs-14\">\r\n                              {errors.password[0]}\r\n                            </span>\r\n                          )}\r\n                        </div> */}\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button className=\"profile_save\" onClick={handleSubmit}>\r\n                SAVE CHANGES <BlueHoverButton />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getUserDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst MyProfile = connect(null, mapDispatchToProps)(MyProfileClass);\r\n\r\nexport default MyProfile;\r\n","import React from \"react\";\r\nimport MyProfile from \"component/UserDashBoard/UserDashboardCompontents/UserMyProfile/MyProfile\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div>\r\n      {/* Banner  */}\r\n      <MyProfile />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Drop Down 4.50302f8e.svg\";","export default __webpack_public_path__ + \"static/media/Picture Icon.3ba6c98d.svg\";","export default __webpack_public_path__ + \"static/media/Profile Picture.93cd6a53.svg\";","import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"./select.scss\";\r\nimport logo from \"../../../assets/files/SVG/Drop Down 4.svg\";\r\nexport class NormalMultiSelect extends Component {\r\n    //change select\r\n    handleChange = (newValue) => {\r\n        let { isMulti } = this.props;\r\n        if (!!isMulti) {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: [],\r\n                },\r\n            };\r\n            if (!!newValue && newValue.length) {\r\n                newValue.forEach((array) => {\r\n                    let obj = {\r\n                        value: array.value,\r\n                        label: array.label,\r\n                    };\r\n                    body.target.value.push(obj);\r\n                });\r\n            }\r\n            this.props.handleChange(body);\r\n        } else {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: newValue ? newValue.value : \"\",\r\n                    label: newValue ? newValue.label : \"\",\r\n                },\r\n            };\r\n\r\n            this.props.handleChange(body);\r\n        }\r\n    };\r\n\r\n    //handle Input Change\r\n    handleInputChange = (newValue) => {\r\n        let body = {\r\n            target: {\r\n                name: this.props.name,\r\n                value: newValue ? newValue : \"\",\r\n            },\r\n        };\r\n        this.props.handleinputChange && this.props.handleinputChange(body);\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            className = \"select-form-control w-100\",\r\n            options = [],\r\n            value = \"\",\r\n            name = \"\",\r\n            placeholder = \"Select\",\r\n            disabled = false,\r\n            arrow = false,\r\n            isReadOnly = false,\r\n            label = \"\",\r\n            isMulti = false,\r\n            isClearable = false,\r\n            isSearchable = false,\r\n            isBoldLabel = false,\r\n            showArrow = true,\r\n        } = this.props;\r\n\r\n        const DropdownIndicator = (props) => {\r\n            return (\r\n                components.DropdownIndicator && (\r\n                    <components.DropdownIndicator {...props}>\r\n                        <img src={logo} alt=\"dropdown\" />\r\n                    </components.DropdownIndicator>\r\n                )\r\n            );\r\n        };\r\n        const customStyles = {\r\n            placeholder: (base) => ({\r\n                ...base,\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            indicatorSeparator: (base) => ({\r\n                ...base,\r\n                display: \"none\",\r\n            }),\r\n            valueContainer: (base) => ({\r\n                ...base,\r\n                padding: \"0px 20px\",\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            singleValue: (base) => ({\r\n                ...base,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n            }),\r\n            dropdownIndicator: (base) => ({\r\n                ...base,\r\n                padding: 0,\r\n                height: \"26px\",\r\n                width: \"26px\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            option: (base, { isFocused }) => ({\r\n                ...base,\r\n                backgroundColor: isFocused ? \"#53BFD2\" : \"#fff\",\r\n                color: isFocused ? \"#fff\" : \"#000\",\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            control: (base) => ({\r\n                ...base,\r\n                borderRadius: 50,\r\n                border: \"2px solid #bcbcbc\",\r\n                boxShadow: \"0 0 !important\",\r\n                outline: \"0 \",\r\n                background: \"white\",\r\n                height: 45,\r\n                minHeight: 45,\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n        };\r\n        return (\r\n            <>\r\n                {!isReadOnly ? (\r\n                    <div\r\n                        className={`${\r\n                            arrow ? \"select-section w-100\" : \"Select\"\r\n                        } ${isBoldLabel ? \"mt-0\" : \"\"}`}\r\n                    >\r\n                        {label !== \"\" ? (\r\n                            <div>\r\n                                <label\r\n                                    className={\r\n                                        isBoldLabel\r\n                                            ? \"mb-1 text-black-22\"\r\n                                            : \"font-weight-normal mb-1\"\r\n                                    }\r\n                                >\r\n                                    {label}\r\n                                </label>\r\n                            </div>\r\n                        ) : null}\r\n                        <Select\r\n                            className={className}\r\n                            classNamePrefix=\"Select\"\r\n                            isDisabled={disabled}\r\n                            isClearable={isClearable}\r\n                            isSearchable={isSearchable}\r\n                            name={name}\r\n                            options={options}\r\n                            onChange={this.handleChange}\r\n                            isMulti={isMulti}\r\n                            showArrow={showArrow}\r\n                            placeholder={placeholder}\r\n                            styles={customStyles}\r\n                            value={\r\n                                !!options && options.length > 0\r\n                                    ? options.find(\r\n                                          (data) => data.value === value\r\n                                      )\r\n                                        ? options.find(\r\n                                              (data) => data.value === value\r\n                                          )\r\n                                        : null\r\n                                    : null\r\n                            }\r\n                            components={{ DropdownIndicator }}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <p>{value}</p>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}