{"version":3,"sources":["helpers/baseURL.js","component/TrainerDashBoard/DashboardCompontents/TrainerMyProfile/MyProfile.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Image 1.svg","assets/files/SVG/Location Icon.svg","assets/files/SVG/Youtube.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js"],"names":["COMMON_URL","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL","options","label","value","name","CyanRadio","withStyles","root","color","cyan","checked","props","ImageReander","useState","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","className","src","style","objectFit","width","height","onClick","event","preventDefault","current","click","ImageBG","alt","type","ref","accept","onChange","file","target","files","substr","MyProfile","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","motto","trainingProcessDescription","trainingLocation","serviceableLocation","location","websiteLink","instaHandle","youtubeChannel","governmentId","insurance","governmentIdNumber","coverAmount","virtualMeetingHandle","virtualMeetingLink","identityNameUS","insuranceNameUS","trainerData","setTrainerData","React","hoursPerWeek","preferedTrainingMode","trainingFacilityLocation","willingToTravel","servicableLocation","trainerAvailabilityData","setTrainerAvailabilityData","visiable","renderButton","setRenderButton","checkButton","setCheckButton","selectedValue","setSelectedValue","selectedOneValue","setSelectedOneValue","handleOneChange","handleChange","imageFields","setImageFields","certificate","year","remove","inputCertificatesFields","setInputCertificatesFields","handleChangeCertificateInput","index","values","handleInputChange","e","trainingType","tempData","isMultiSelect","Array","isArray","includes","filter","then","trainingProcess","myMotto","instagramProfile","currentExperience","certification","workLocation","storeData","map","tempCertification","certfiedYear","certificateName","catch","err","console","log","onSubmit","placeholder","maxlength","slice","input","splice","handleRemoveFields","inputCertificatesField","title","list","inputProps","Location","Instagram","Web","headers","Authorization","localStorage","getItem","axios","get","applicationStatus","res","payload","updateTrainerAvailabilityApi","TrainerApi","body","api","message","alert","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","length","funcs","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/40.70f4345b.chunk.js","sourcesContent":["export var COMMON_URL = \"http://doodlebluelive.com:2307\";\nexport var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\nexport var SESSION_URL = \"http://doodlebluelive.com:2337\";\nexport var NOTIFICATION_URL = \"\";\nexport var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.scss\";\n// import Select from \"react-select\";\n\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\nimport ImageBG from \"assets/files/SVG/Image 1.svg\";\nimport Instagram from \"assets/files/SVG/Insta Icon.svg\";\nimport Web from \"assets/files/SVG/Web Icon.svg\";\nimport Youtube from \"assets/files/SVG/Youtube.svg\";\nimport Location from \"assets/files/SVG/Location Icon.svg\";\nimport { getTrainerDetails, updateTrainerDetails } from \"action/trainerAct\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { TrainerApi } from \"service/apiVariables\";\nimport { api } from \"service/api\";\nimport axios from \"axios\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { cyan } from \"@material-ui/core/colors\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { Dropdown } from \"reactjs-dropdown-component\";\nimport \"./dropdown.scss\";\nimport { COMMON_URL } from \"helpers/baseURL\";\n\nconst options = [\n    { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\n    {\n        label: \"New York City\",\n        value: \"New York City\",\n        name: \"serviceableLocation\",\n    },\n    { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\n    { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\n];\n\nconst CyanRadio = withStyles({\n    root: {\n        \"&$checked\": {\n            color: cyan[600],\n        },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst MyProfileFC = ({\n    getTrainerDetails,\n    details,\n    updateTrainerDetails,\n    trainerPersonalData,\n}) => {\n    const data = {\n        heading: \"Build out the rest of your Profile!\",\n        describe:\n            \"Your trainer profile is what clients will see when they click on your trainer card while filtering results. The below information and training settings can be changed at any time.\",\n        motto: \"What’s your Motto?\",\n        tellUs: \"Tell us about you and describe your training process\",\n        showcase: \"Throw in some photos showcasing you & your skills\",\n        certificate: \"Certifications you’d like to display\",\n        where: \"Where will you be training\",\n        serviceable: \"Which city will you train in?\",\n        location: \"Your preferred training location\",\n        web: \"Website\",\n        insta: \"Instagram\",\n        youtube: \"Youtube\",\n    };\n\n    const [trainerData, setTrainerData] = useState({\n        motto: \"\",\n        trainingProcessDescription: \"\",\n        trainingLocation: [],\n        serviceableLocation: \"\",\n        location: \"\",\n        websiteLink: \"\",\n        instaHandle: \"\",\n        youtubeChannel: \"\",\n        governmentId: \"\",\n        insurance: \"\",\n        governmentIdNumber: \"\",\n        coverAmount: \"\",\n        virtualMeetingHandle: \"\",\n        virtualMeetingLink: \"\",\n        identityNameUS: \"\",\n        insuranceNameUS: \"\",\n    });\n    const [trainerAvailabilityData, setTrainerAvailabilityData] =\n        React.useState({\n            hoursPerWeek: \"\",\n            preferedTrainingMode: [],\n            trainingFacilityLocation: \"\",\n            willingToTravel: \"0\",\n            servicableLocation: \"\",\n        });\n\n    const [renderButton, setRenderButton] = useState({\n        visiable: false,\n    });\n\n    const [checkButton, setCheckButton] = useState(true);\n    const [checkButtonInPerson, setCheckButtonInPerson] = useState(true);\n\n    //state for radio buttons\n    const [selectedValue, setSelectedValue] = React.useState(\"a\");\n    const [selectedOneValue, setSelectedOneValue] = React.useState(\"\");\n\n    const handleOneChange = (event) => {\n        setSelectedOneValue(event.target.value);\n\n        setTrainerAvailabilityData({\n            ...trainerAvailabilityData,\n            willingToTravel: event.target.value,\n        });\n    };\n\n    //handleChange for radio\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n\n    //Image\n    const [imageFields, setImageFields] = useState([\n        {\n            image: \"\",\n        },\n    ]);\n    // const handleAddFields = () => {\n    //     setImageFields([...imageFields, { image: \"\" }]);\n    // };\n\n    // input certification\n    const [inputCertificatesFields, setInputCertificatesFields] = useState([\n        {\n            certificate: \"\",\n            year: \"\",\n            remove: \"\",\n        },\n    ]);\n    const handleAddCertificateFields = () => {\n        setInputCertificatesFields([\n            ...inputCertificatesFields,\n            { certificate: \"\", year: \"\", remove: \"\" },\n        ]);\n    };\n    const handleChangeCertificateInput = (index, event) => {\n        const values = [...inputCertificatesFields];\n        values[index][event.target.name] = event.target.value;\n        setInputCertificatesFields(values);\n    };\n\n    //adding and removing the input certificate field\n    const handleAddFields = () => {\n        setImageFields([...imageFields, { image: \"\" }]);\n        setRenderButton(false);\n    };\n    const handleRemoveFields = (index) => {\n        const values = [...imageFields];\n        values.splice(index, 1);\n        setImageFields(values);\n        setRenderButton(true);\n    };\n\n    const handleInputChange = (e, trainingType) => {\n        e.preventDefault && e.preventDefault();\n\n        const { name, value, label } = e.target || e || {};\n\n        const tempData = {\n            ...trainerData,\n        };\n        // setCheckButtonInPerson((checkButtonInPerson) => !checkButtonInPerson);\n        setCheckButton((checkButton) => !checkButton);\n\n        // if(label) value = {label , name , value};\n\n        const isMultiSelect = Array.isArray(e);\n\n        if (name === \"trainingLocation\") {\n            if (tempData[\"trainingLocation\"].includes(trainingType)) {\n                tempData[\"trainingLocation\"] = tempData[\n                    \"trainingLocation\"\n                ].filter((location) => location !== trainingType);\n            } else {\n                tempData[\"trainingLocation\"] = [\n                    ...tempData[\"trainingLocation\"],\n                    trainingType,\n                ];\n            }\n        } else {\n            tempData[`${isMultiSelect ? e[0].name : name}`] = isMultiSelect\n                ? e\n                : value;\n        }\n\n        setTrainerData(tempData);\n    };\n\n    const handleSubmit = () => {\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"token\"),\n        };\n\n        axios\n            .get(\n                COMMON_URL + \"/v1/trainer\",\n                { applicationStatus: \"setupComplete\" },\n                {\n                    headers: headers,\n                }\n            )\n            .then((res) => {\n                console.log(res);\n            });\n        const {\n            // firstName,\n            // lastName,\n            // description,\n            // individualCharge,\n            // ssTwoPeopleCharge,\n            // ssThreePeopleCharge,\n            // ssFourPeopleCharge,\n            // classFlatRate,\n            // threeSessionRate,\n            // tenSessionRate,\n            instaHandle,\n            // location,\n            motto,\n            serviceableLocation,\n            // trainingLocation,\n            trainingProcessDescription,\n            websiteLink,\n            // youtubeChannel,\n            // individualChargeTl,\n            // ssTwoPeopleChargeTl,\n            // ssThreePeopleChargeTl,\n            // ssFourPeopleChargeTl,\n            // classFlatRateTl,\n            // threeSessionRateTl,\n            // tenSessionRateTl,\n            // individualChargeVt,\n            // ssTwoPeopleChargeVt,\n            // ssThreePeopleChargeVt,\n            // ssFourPeopleChargeVt,\n            // classFlatRateVt,\n            // threeSessionRateVt,\n            // tenSessionRateVt,\n            // governmentId,\n            // insurance,\n            // governmentIdNumber,\n            // coverAmount,\n            virtualMeetingLink,\n            // identityNameUS,\n            // insuranceNameUS,\n        } = trainerData;\n\n        // console.log(trainerData, \"trainer data\");\n\n        let payload = {\n            trainingProcess: trainingProcessDescription,\n            myMotto: motto,\n            websiteLink: websiteLink,\n            instagramProfile: instaHandle,\n            certification: inputCertificatesFields?.map(\n                ({ certificate, year }) => ({\n                    certificateName: \"\",\n                    certfiedYear: year,\n                    certification: certificate,\n                })\n            ),\n            virtualMeetingLink: virtualMeetingLink,\n            servicableLocation: serviceableLocation,\n        };\n        // updateTrainerDetails();\n\n        // console.log(payload, \"payload\");\n\n        const { updateTrainerAvailabilityApi } = TrainerApi;\n\n        updateTrainerAvailabilityApi.body = payload;\n\n        api({ ...updateTrainerAvailabilityApi })\n            .then(({ data, message }) => {\n                console.log(data, message);\n                alert(\"Successfully added changes\");\n            })\n            .catch((err) => console.log(err));\n\n        // history.push(\"/trainers/dashboard/session\");\n    };\n\n    useEffect(() => {\n        getTrainerDetails()\n            .then((data) => {\n                // console.log(data, \"api data\");\n\n                const {\n                    trainingProcess = \"\",\n                    myMotto = \"\",\n                    preferedTrainingMode = \"\",\n                    websiteLink = \"\",\n                    instagramProfile = \"\",\n                    currentExperience = {},\n                    certification = [],\n                    serviceableLocation = [],\n                    virtualMeetingLink = \"\",\n                } = data || {};\n                // console.log(data, \"data\");\n                const { workLocation = \"\" } = currentExperience || {};\n\n                const storeData = {\n                    details: {\n                        ...details,\n                        motto: myMotto,\n                        trainingProcessDescription: trainingProcess,\n                        trainingLocation: preferedTrainingMode,\n                        servicableLocation: serviceableLocation.map(\n                            (location) => ({\n                                label: location,\n                                value: location,\n                                name: \"serviceableLocation\",\n                            })\n                        ),\n                        location: workLocation,\n                        websiteLink: websiteLink,\n                        instaHandle: instagramProfile,\n                        virtualMeetingLink: virtualMeetingLink,\n                        willingToTravel:\n                            trainerAvailabilityData.willingToTravel,\n                        servicableLocation:\n                            trainerAvailabilityData.servicableLocation,\n                        // youtubeChannel: youtubeLink,\n                    },\n                };\n\n                const tempCertification = certification?.map(\n                    ({ certfiedYear, certificateName }) => ({\n                        certificate: certificateName,\n                        year: certfiedYear,\n                    })\n                );\n\n                setInputCertificatesFields(tempCertification);\n                setTrainerData(storeData.details);\n                updateTrainerDetails(storeData);\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    return (\n        <>\n            <div className=\"outter_tp_container\">\n                <div className=\"container\">\n                    <div className=\"inner_trinerpro_container\">\n                        <div className=\"tp_wrapper\">\n                            <div className=\"tp_header\">\n                                <h2>My Profile</h2>\n                            </div>\n                            <div className=\"tp_outter_form container\">\n                                <form onSubmit={(e) => e.preventDefault()}>\n                                    <div className=\"setup_card1\">\n                                        <h6>{data.motto}</h6>\n                                        <textarea\n                                            type=\"text\"\n                                            placeholder=\"Share the words you live or train by in 250 characters or less\"\n                                            onChange={handleInputChange}\n                                            value={trainerData.motto}\n                                            name=\"motto\"\n                                            maxlength=\"250\"\n                                        />\n                                    </div>\n                                    <div className=\"setup_card2\">\n                                        <h6>{data.tellUs}</h6>\n                                        <textarea\n                                            type=\"text\"\n                                            name=\"comment\"\n                                            placeholder=\"Tell clients everything you think they should know! Utilize Key words as anything you write here\n                                        will be searchable through our search bar\"\n                                            onChange={handleInputChange}\n                                            value={\n                                                trainerData.trainingProcessDescription\n                                            }\n                                            name=\"trainingProcessDescription\"\n                                        />\n                                    </div>\n                                    <div className=\"setup_card3\">\n                                        <h6>{data.showcase}</h6>\n                                        <div className=\"read_image\">\n                                            {imageFields\n                                                .slice(0, 2)\n                                                .map((index, input) => {\n                                                    return (\n                                                        <div\n                                                            key={index}\n                                                            className=\"render_image\"\n                                                        >\n                                                            <ImageReander\n                                                                value={\n                                                                    input.image\n                                                                }\n                                                            />\n                                                            <ImageReander\n                                                                value={\n                                                                    input.image\n                                                                }\n                                                            />\n                                                            <ImageReander\n                                                                value={\n                                                                    input.image\n                                                                }\n                                                            />\n                                                            <ImageReander\n                                                                value={\n                                                                    input.image\n                                                                }\n                                                            />\n                                                            <ImageReander\n                                                                value={\n                                                                    input.image\n                                                                }\n                                                            />\n                                                        </div>\n                                                    );\n                                                })}\n                                            {renderButton ? (\n                                                <h5\n                                                    onClick={() =>\n                                                        handleAddFields()\n                                                    }\n                                                >\n                                                    + Add More Image's\n                                                </h5>\n                                            ) : (\n                                                <h5\n                                                    onClick={() =>\n                                                        handleRemoveFields()\n                                                    }\n                                                >\n                                                    Remove\n                                                </h5>\n                                            )}\n                                        </div>\n                                    </div>\n                                    <div className=\"setup_card4\">\n                                        <h6>{data.certificate}</h6>\n                                        {inputCertificatesFields?.map(\n                                            (inputCertificatesField, index) => (\n                                                <div\n                                                    className=\"inputs_certificate\"\n                                                    key={index}\n                                                >\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Certification Title\"\n                                                        value={\n                                                            inputCertificatesField.certificate\n                                                        }\n                                                        name=\"certificate\"\n                                                        onChange={(event) =>\n                                                            handleChangeCertificateInput(\n                                                                index,\n                                                                event\n                                                            )\n                                                        }\n                                                    />\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Year you were Certified\"\n                                                        value={\n                                                            inputCertificatesField.year\n                                                        }\n                                                        name=\"year\"\n                                                        onChange={(event) =>\n                                                            handleChangeCertificateInput(\n                                                                index,\n                                                                event\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                            )\n                                        )}\n                                        <h5\n                                            onClick={handleAddCertificateFields}\n                                        >\n                                            + Add Certification\n                                        </h5>\n                                    </div>\n                                    <div className=\"setup_card5\">\n                                        <div className=\"setupcontent_wrapper\">\n                                            <div className=\"setup_item\">\n                                                <h6>{data.where}</h6>\n                                                <div className=\"inputs_platform\">\n                                                    <button\n                                                        onClick={(e) =>\n                                                            handleInputChange(\n                                                                e,\n                                                                \"Online\"\n                                                            )\n                                                        }\n                                                        // className={`${\n                                                        //     trainerData?.trainingLocation?.includes(\n                                                        //         \"Online\"\n                                                        //     )\n                                                        //         ? \"active\"\n                                                        //         : \"\"\n                                                        // }`}\n                                                        className={\n                                                            checkButton\n                                                                ? \"buttonTrue\"\n                                                                : \"buttonFalse\"\n                                                        }\n                                                        name=\"trainingLocation\"\n                                                    >\n                                                        Virtual\n                                                    </button>\n                                                    <button\n                                                        onClick={(e) =>\n                                                            handleInputChange(\n                                                                e,\n                                                                \"inperson\"\n                                                            )\n                                                        }\n                                                        className={`${\n                                                            trainerData?.trainingLocation?.includes(\n                                                                \"inperson\"\n                                                            )\n                                                                ? \"active\"\n                                                                : \"\"\n                                                        }`}\n                                                        // className={\n                                                        //     checkButtonInPerson\n                                                        //         ? \"buttonTrue\"\n                                                        //         : \"buttonFalse\"\n                                                        // }\n                                                        name=\"trainingLocation\"\n                                                    >\n                                                        In Person\n                                                    </button>\n                                                </div>\n                                                <div className=\"social_meeting_links\">\n                                                    {trainerData?.trainingLocation?.includes(\n                                                        \"Online\"\n                                                    ) ? (\n                                                        // <div className=\"setup_ite1\">\n                                                        <>\n                                                            <h5>\n                                                                Add your Google\n                                                                or Zoom meeting\n                                                                link\n                                                            </h5>\n                                                            <div className=\"inputs_platform\">\n                                                                <div className=\"iconwrapper\">\n                                                                    <textarea\n                                                                        type=\"text\"\n                                                                        placeholder=\"Add a Google or Zoom meeting link\"\n                                                                        value={\n                                                                            trainerData.virtualMeetingLink\n                                                                        }\n                                                                        onChange={\n                                                                            handleInputChange\n                                                                        }\n                                                                        name=\"virtualMeetingLink\"\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : null}\n                                                </div>\n                                            </div>\n\n                                            <div className=\"setup_item1\">\n                                                <h6>{data.serviceable}</h6>\n                                                <div className=\"inputs_platform\">\n                                                    <div className=\"iconwrapper\">\n                                                        <Dropdown\n                                                            className=\"custom_dropdown\"\n                                                            title=\"Select Location\"\n                                                            list={options}\n                                                            value={\n                                                                trainerData.serviceableLocation\n                                                            }\n                                                            onChange={(e) => {\n                                                                setTrainerData({\n                                                                    ...trainerData,\n                                                                    serviceableLocation:\n                                                                        e.value,\n                                                                });\n                                                                // console.log(\n                                                                //     e.value\n                                                                // );\n                                                            }}\n                                                            name=\"location\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"item_3\">\n                                                <h6>\n                                                    Do you have a facility or\n                                                    location where you will\n                                                    train clients?\n                                                </h6>\n                                                <CyanRadio\n                                                    checked={\n                                                        selectedValue === \"a\"\n                                                    }\n                                                    onChange={handleChange}\n                                                    value=\"a\"\n                                                    name=\"radio-button-demo\"\n                                                    label=\"Strength & Hitt\"\n                                                    inputProps={{\n                                                        \"aria-label\": \"a\",\n                                                    }}\n                                                />\n                                                <label>Yes</label>\n                                                <CyanRadio\n                                                    checked={\n                                                        selectedValue === \"b\"\n                                                    }\n                                                    onChange={handleChange}\n                                                    value=\"b\"\n                                                    name=\"radio-button-demo\"\n                                                    label=\"Strength & Hitt\"\n                                                    inputProps={{\n                                                        \"aria-label\": \"b\",\n                                                    }}\n                                                />\n                                                <label>No</label>\n                                            </div>\n                                            <div className=\"item_4\">\n                                                <h6>\n                                                    Details of the\n                                                    facility/location\n                                                </h6>\n                                                <div className=\"inputs_platform\">\n                                                    <textarea\n                                                        type=\"text\"\n                                                        placeholder=\"Enter the Details of the location\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerPersonalData.trainingFacilityLocation\n                                                                ? trainerPersonalData.trainingFacilityLocation\n                                                                : \"\"\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"item_5\">\n                                                <h6>\n                                                    Are you willing to travel to\n                                                    clients in your city/region?\n                                                </h6>\n                                                <CyanRadio\n                                                    checked={\n                                                        selectedOneValue === \"1\"\n                                                    }\n                                                    onChange={handleOneChange}\n                                                    value=\"1\"\n                                                    label=\"Strength & Hitt\"\n                                                    inputProps={{\n                                                        \"aria-label\": \"1\",\n                                                    }}\n                                                />\n                                                <label> Yes!</label>\n                                                <CyanRadio\n                                                    checked={\n                                                        selectedOneValue === \"0\"\n                                                    }\n                                                    onChange={handleOneChange}\n                                                    value=\"0\"\n                                                    label=\"Strength & Hitt\"\n                                                    inputProps={{\n                                                        \"aria-label\": \"0\",\n                                                    }}\n                                                />\n                                                <label>No</label>\n                                            </div>\n                                            <div className=\"item_6\">\n                                                <h6>\n                                                    List the areas/neighborhoods\n                                                    you’re willing to travel to\n                                                </h6>\n                                                <div className=\"inputs_platform\">\n                                                    <textarea\n                                                        type=\"text\"\n                                                        placeholder=\"Neighborhood List\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerPersonalData.servicableLocation\n                                                                ? trainerPersonalData.servicableLocation\n                                                                : \"\"\n                                                        }\n                                                    />\n\n                                                    <img\n                                                        src={Location}\n                                                        alt=\"icon\"\n                                                        className=\"loction_img_select\"\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className=\"setup_item1\">\n                                                <h6>{data.insta}</h6>\n                                                <div className=\"inputs_platform\">\n                                                    <div className=\"iconwrapper\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"Add your Instagram Handle\"\n                                                            onChange={\n                                                                handleInputChange\n                                                            }\n                                                            value={\n                                                                trainerData.instaHandle\n                                                            }\n                                                            name=\"instaHandle\"\n                                                        />\n                                                        <img\n                                                            src={Instagram}\n                                                            alt=\"icon\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"setup_item1\">\n                                                <h6>{data.web}</h6>\n                                                <div className=\"inputs_platform\">\n                                                    <div className=\"iconwrapper\">\n                                                        <input\n                                                            type=\"text\"\n                                                            placeholder=\"Add your Web Link\"\n                                                            onChange={\n                                                                handleInputChange\n                                                            }\n                                                            value={\n                                                                trainerData.websiteLink\n                                                            }\n                                                            name=\"websiteLink\"\n                                                        />\n                                                        <img\n                                                            src={Web}\n                                                            alt=\"icon\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"tp_button_save mb-5\">\n                                        <button onClick={handleSubmit}>\n                                            Save changes <BlueHoverButton />\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nconst ImageReander = () => {\n    const [image, setImage] = useState();\n    const [previewImage, setPreviewTmage] = useState();\n    const fileInputRef = useRef();\n\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setPreviewTmage(reader.result);\n            };\n            reader.readAsDataURL(image);\n        } else {\n            setPreviewTmage(null);\n        }\n    }, [image]);\n    return (\n        <>\n            <div className=\"renderImage\">\n                {previewImage ? (\n                    <img\n                        src={previewImage}\n                        style={{\n                            objectFit: \"cover\",\n                            width: \"180px\",\n                            height: \"180px\",\n                        }}\n                        onClick={() => {\n                            setPreviewTmage(null);\n                        }}\n                    />\n                ) : (\n                    <div className=\"combin_profile\">\n                        <button\n                            onClick={(event) => {\n                                event.preventDefault();\n                                fileInputRef.current.click();\n                            }}\n                        >\n                            <img\n                                // src={Profile}\n                                src={ImageBG}\n                                alt=\"icon\"\n                                style={{\n                                    objectFit: \"cover\",\n                                    width: \"180px\",\n                                    height: \"180px\",\n                                }}\n                            />\n                        </button>\n                    </div>\n                )}\n\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    accept=\"image/*\"\n                    onChange={(event) => {\n                        const file = event.target.files[0];\n                        if (file && file.type.substr(0, 5) === \"image\") {\n                            setImage(file);\n                        } else {\n                            setImage(null);\n                        }\n                    }}\n                />\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    details: state.trainerReducer.details,\n    trainerPersonalData: state.trainerReducer.data,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            updateTrainerDetails,\n            getTrainerDetails,\n        },\n        dispatch\n    );\n};\n\nconst MyProfile = connect(mapStateToProps, mapDispatchToProps)(MyProfileFC);\n\nexport default MyProfile;\n","export default __webpack_public_path__ + \"static/media/Insta Icon.1bd62639.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.c205b1b8.svg\";","export default __webpack_public_path__ + \"static/media/Image 1.c256661a.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.c4929936.svg\";","export default __webpack_public_path__ + \"static/media/Youtube.7b4f0bda.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;"],"sourceRoot":""}