{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerSession/index.js","pages/TrainerDashboard/Session/index.js","action/trainerAct.js","assets/files/TrainerDashboard/Message/Jenny.png","assets/files/TrainerDashboard/Message/Availability Icon.svg","assets/files/TrainerDashboard/Message/Location Icon.svg"],"names":["TabOne","datas","useState","setVisible","className","length","map","data","index","date","month","heading","src","imgAva","alt","avaTime","imgLoc","loc","onClick","prevValue","to","previousImg","prevDate","TabTwo","TabThree","TabFour","TrainerSession","connect","state","sessionData","trainerReducer","trainerPersonalData","dispatch","bindActionCreators","getTrainerSessionDetails","upcomingSessions","pastSessions","onGoingSessions","trainerSessionData","setTrainerSessionData","useEffect","then","tempSessionData","Object","keys","forEach","sessionKey","title","venue","sessionDate","sessionStartTime","getFormatDate","AvailabilityIcon","LocationIcon","Jenny","prevHeading","defaultTab","onChange","tabId","console","log","tabFor","Main","updateTrainerDetails","payload","Promise","resolve","type","TrainerActionType","getTrainerDetails","getState","api","reject","getTrainerApi","TrainerApi","catch","err","getTrainerSessionApi"],"mappings":"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","file":"static/js/57.03402b4a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-web-tabs\";\r\nimport \"react-web-tabs/dist/react-web-tabs.css\";\r\nimport AvailabilityIcon from \"../../../../assets/files/TrainerDashboard/Message/Availability Icon.svg\";\r\nimport LocationIcon from \"../../../../assets/files/TrainerDashboard/Message/Location Icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlueArrowButton from \"../../../common/BlueArrowButton\";\r\nimport Jenny from \"../../../../assets/files/TrainerDashboard/Message/Jenny.png\";\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport { getTrainerSessionDetails } from \"action/trainerAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFormatDate } from \"service/helperFunctions\";\r\n\r\nconst TrainerSessionFC = ({ sessionData, getTrainerSessionDetails }) => {\r\n    const [trainerSessionData, setTrainerSessionData] = useState({\r\n        upcomingSessions: [],\r\n        pastSessions: [],\r\n        onGoingSessions: [],\r\n    });\r\n    useEffect(() => {\r\n        getTrainerSessionDetails().then((data) => {\r\n            const tempSessionData = {};\r\n            Object.keys(data).forEach((sessionKey) => {\r\n                tempSessionData[sessionKey] = data[sessionKey].map(\r\n                    ({ title, venue, sessionDate, sessionStartTime }) => ({\r\n                        date: getFormatDate(sessionDate, \"D\"),\r\n                        month: getFormatDate(sessionDate, \"MMM\"),\r\n                        heading: title,\r\n                        imgAva: AvailabilityIcon,\r\n                        avaTime: `${getFormatDate(\r\n                            sessionStartTime,\r\n                            \"LT\",\r\n                            true\r\n                        )} PST`,\r\n                        imgLoc: LocationIcon,\r\n                        loc: venue,\r\n                        previousImg: Jenny,\r\n                        prevHeading: \"Yoga with Kane\",\r\n                        prevDate: getFormatDate(sessionData, \"DD MMMM YYYY\"),\r\n                    })\r\n                );\r\n            });\r\n\r\n            setTrainerSessionData(tempSessionData);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_user_container\">\r\n                <div className=\"container\">\r\n                    <div className=\"inner_user_container \">\r\n                        <div className=\"userSession_heading\">\r\n                            <h2>My Session</h2>\r\n                        </div>\r\n                        <div className=\"US_tabs_wrapper\">\r\n                            <Tabs\r\n                                defaultTab=\"overview\"\r\n                                onChange={(tabId) => {\r\n                                    console.log(tabId);\r\n                                }}\r\n                            >\r\n                                <TabList>\r\n                                    <Tab tabFor=\"overview\">Overview</Tab>\r\n                                    <Tab tabFor=\"upcoming\">Upcoming</Tab>\r\n                                    <Tab tabFor=\"pass\">Motto pass</Tab>\r\n                                    <Tab tabFor=\"previous\">Previous</Tab>\r\n                                </TabList>\r\n                                <div className=\"tabPanel_outter\">\r\n                                    <TabPanel tabId=\"overview\">\r\n                                        <TabOne\r\n                                            datas={\r\n                                                trainerSessionData.upcomingSessions\r\n                                            }\r\n                                        />\r\n                                    </TabPanel>\r\n                                </div>\r\n                                <div className=\"tabPanel_outter\">\r\n                                    <TabPanel tabId=\"upcoming\">\r\n                                        <TabTwo\r\n                                            datas={\r\n                                                trainerSessionData.upcomingSessions\r\n                                            }\r\n                                        />\r\n                                    </TabPanel>\r\n                                </div>\r\n                                <div className=\"tabPanel_outter\">\r\n                                    <TabPanel tabId=\"pass\">\r\n                                        <TabThree />\r\n                                    </TabPanel>\r\n                                </div>\r\n                                <div className=\"tabPanel_outter\">\r\n                                    <TabPanel tabId=\"previous\">\r\n                                        <TabFour\r\n                                            datas={\r\n                                                trainerSessionData.pastSessions\r\n                                            }\r\n                                        />\r\n                                    </TabPanel>\r\n                                </div>\r\n                            </Tabs>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst TabOne = ({ datas = [] }) => {\r\n    const [visible, setVisible] = useState([3]);\r\n\r\n    const setViewMore = () => {\r\n        setVisible((prevValue) => prevValue + 1);\r\n    };\r\n    return (\r\n        <div className=\"tabPanel_overview d-flex\">\r\n            <div className=\"tabPanel_overview_left w-100\">\r\n                <div className=\"TP_overview_wrapper\">\r\n                    <h3>Upcoming Sessions</h3>\r\n                    <div className=\"TP_US_overview\">\r\n                        <div className=\"TP_US_overview_inner\">\r\n                            {datas.length > 0 ? (\r\n                                datas.map((data, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div\r\n                                                className=\"TP_upcomeSession_overview\"\r\n                                                key={index}\r\n                                            >\r\n                                                <div className=\"TP_USession_dates\">\r\n                                                    <h4>\r\n                                                        {data.date}\r\n                                                        <span>\r\n                                                            {data.month}\r\n                                                        </span>\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div className=\"TP_USession_data\">\r\n                                                    <h2 className=\"text-capitalize\">\r\n                                                        {data.heading}\r\n                                                    </h2>\r\n                                                    <div className=\"TP_USession_data_icons\">\r\n                                                        <h5>\r\n                                                            <img\r\n                                                                src={\r\n                                                                    data.imgAva\r\n                                                                }\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                            {data.avaTime}\r\n                                                        </h5>\r\n                                                        <h5 className=\"text-capitalize\">\r\n                                                            <img\r\n                                                                src={\r\n                                                                    data.imgLoc\r\n                                                                }\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                            {data.loc}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"TP_USession_data_buttons\">\r\n                                                        <button>\r\n                                                            Reschedule\r\n                                                        </button>\r\n                                                        <button>Cancel</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                        </>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <h3 className=\"my-5 py-5 text-center\">\r\n                                    No Data Found\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                        <button\r\n                            onClick={setViewMore}\r\n                            className=\"viewMoreButton\"\r\n                        >\r\n                            View all Session <BlueHoverButton />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"tabPanel_overview_right\">\r\n                <div className=\"TB_overview_right\">\r\n                    <div className=\"TB_overview_row_one\">\r\n                        <div className=\"row_one_data\">\r\n                            <h2>Want to Do More for Less?</h2>\r\n                            <p>\r\n                                Save money by purchasing multiple sessions at\r\n                                once, eligible for use within 60 days of the\r\n                                purchase date.\r\n                            </p>\r\n                            <Link to=\"/\">\r\n                                Get A pass <BlueArrowButton />{\" \"}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"TB_overview_row_two\">\r\n                        <div className=\"row_two_data\">\r\n                            <h2>PREVIOUS SESSIONS</h2>\r\n                            <div className=\"row_two_scroll\">\r\n                                {datas.length > 0 ? (\r\n                                    datas.map((data, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div\r\n                                                    className=\"row_previous_data\"\r\n                                                    key={index}\r\n                                                >\r\n                                                    <div className=\"row_previous_avater\">\r\n                                                        <img\r\n                                                            src={\r\n                                                                data.previousImg\r\n                                                            }\r\n                                                            alt=\"profile\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row_previous_header\">\r\n                                                        <h2 className=\"text-capitalize\">\r\n                                                            {data.heading}\r\n                                                        </h2>\r\n                                                        <p>{data.prevDate}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <hr />\r\n                                            </>\r\n                                        );\r\n                                    })\r\n                                ) : (\r\n                                    <h3 className=\"my-5 py-5 text-center\">\r\n                                        No Data Found\r\n                                    </h3>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TabTwo = ({ datas = [] }) => {\r\n    const [visible, setVisible] = useState([3]);\r\n\r\n    const setViewMore = () => {\r\n        setVisible((prevValue) => prevValue + 1);\r\n    };\r\n    return (\r\n        <div className=\"tabPanel_overview d-flex\">\r\n            <div className=\"tabPanel_overview_left w-100\">\r\n                <div className=\"TP_overview_wrapper\">\r\n                    <h3>Upcoming Sessions</h3>\r\n                    <div className=\"TP_US_overview\">\r\n                        <div className=\"TP_US_overview_inner\">\r\n                            {datas.length > 0 ? (\r\n                                datas.map((data, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div\r\n                                                className=\"TP_upcomeSession_overview\"\r\n                                                key={index}\r\n                                            >\r\n                                                <div className=\"TP_USession_dates\">\r\n                                                    <h4>\r\n                                                        {data.date}\r\n                                                        <span>\r\n                                                            {data.month}\r\n                                                        </span>\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div className=\"TP_USession_data\">\r\n                                                    <h2 className=\"text-capitalize\">\r\n                                                        {data.heading}\r\n                                                    </h2>\r\n                                                    <div className=\"TP_USession_data_icons\">\r\n                                                        <h5>\r\n                                                            <img\r\n                                                                src={\r\n                                                                    data.imgAva\r\n                                                                }\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                            {data.avaTime}\r\n                                                        </h5>\r\n                                                        <h5 className=\"text-capitalize\">\r\n                                                            <img\r\n                                                                src={\r\n                                                                    data.imgLoc\r\n                                                                }\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                            {data.loc}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div className=\"TP_USession_data_buttons\">\r\n                                                        <button>\r\n                                                            Reschedule\r\n                                                        </button>\r\n                                                        <button>Cancel</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                        </>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <h3 className=\"my-5 py-5 text-center\">\r\n                                    No Data Found\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                        <button\r\n                            onClick={setViewMore}\r\n                            className=\"viewMoreButton\"\r\n                        >\r\n                            View all Session <BlueHoverButton />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TabThree = () => {\r\n    return (\r\n        <div className=\"tabPanel_overview\">\r\n            <div className=\"tabPanel_overview_right\">\r\n                <div className=\"TB_overview_right\">\r\n                    <div className=\"TB_overview_row_one\">\r\n                        <div className=\"row_one_data\">\r\n                            <h2>Want to Do More for Less?</h2>\r\n                            <p>\r\n                                Save money by purchasing multiple sessions at\r\n                                once, eligible for use within 60 days of the\r\n                                purchase date.\r\n                            </p>\r\n                            <Link to=\"/\">\r\n                                Get A pass <BlueArrowButton />{\" \"}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst TabFour = ({ datas = [] }) => {\r\n    return (\r\n        <div className=\"tabPanel_overview d-flex\">\r\n            <div className=\"tabPanel_overview_right w-100\">\r\n                <div className=\"TB_overview_right\">\r\n                    <div className=\"TB_overview_row_two\">\r\n                        <div className=\"row_two_data\">\r\n                            <h2>PREVIOUS SESSIONS</h2>\r\n                            <div className=\"row_two_scroll\">\r\n                                {datas.length > 0 ? (\r\n                                    datas.map((data, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div\r\n                                                    className=\"row_previous_data\"\r\n                                                    key={index}\r\n                                                >\r\n                                                    <div className=\"row_previous_avater\">\r\n                                                        <img\r\n                                                            src={\r\n                                                                data.previousImg\r\n                                                            }\r\n                                                            alt=\"profile\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row_previous_header\">\r\n                                                        <h2 className=\"text-capitalize\">\r\n                                                            {data.heading}\r\n                                                        </h2>\r\n                                                        <p>{data.prevDate}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <hr />\r\n                                            </>\r\n                                        );\r\n                                    })\r\n                                ) : (\r\n                                    <h3 className=\"my-5 py-5 text-center\">\r\n                                        No Data Found\r\n                                    </h3>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sessionData: state.trainerReducer.sessionData,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            getTrainerSessionDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst TrainerSession = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TrainerSessionFC);\r\n\r\nexport default TrainerSession;\r\n","import React from \"react\";\r\nimport TrainerSession from \"component/TrainerDashBoard/DashboardCompontents/TrainerSession\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div>\r\n      {/* Banner  */}\r\n      <TrainerSession />\r\n    </div>\r\n  );\r\n}\r\n","import { TrainerActionType } from \"service/actionType\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\n\r\nexport const updateTrainerDetails = (payload) => (dispatch) => {\r\n  return new Promise((resolve) => {\r\n    dispatch({ type: TrainerActionType.updateTrainerDetails, payload });\r\n\r\n    resolve(true);\r\n  });\r\n};\r\n\r\nexport const getTrainerDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerApi })\r\n      .then(({ data }) => {\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getTrainerSessionDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerSessionApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerSessionApi })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { sessionData: data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Jenny.c50273b9.png\";","export default __webpack_public_path__ + \"static/media/Availability Icon.ad0517cb.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.cbb0b32d.svg\";"],"sourceRoot":""}