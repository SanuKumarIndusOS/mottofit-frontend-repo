{"version":3,"sources":["component/TrainerProfile/UserScheduler/UserScheduler.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["timeZone","label","value","UserScheduler","connect","dispatch","bindActionCreators","getCalenderDetails","props","early_bird","EarlyInActive","rise_shine","RiseInActive","mid_day","MidInActive","mid_day_2","happy_hour","HappyInActive","never_too_late","NeverTooInActive","React","useState","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","setSelectedCell","userSlots","setuserSlots","cells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","ta","keys","map","item","a","push","temp","date","column","key","row","selectedCell","start","end","now","clone","dates","isSameOrBefore","format","add","length","selectUserSlot","cellCollection","tss","newTime","ts","valueOf","find","el","parentCallback","prevTime","subtract","tableData2","startDate","endDate","id","then","json","style","height","src","width","wordWrap","lineHeight","paddingLeft","paddingRight","paddingBottom","fontFamily","fontWeight","color","margin","className","slice","l","backgroundColor","onClick","isAfter","BackIcon","cursor","disabled","opacity","NextIcon","title","list","onChange","e","name","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/98.726cf28b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\n// import BlueArrowButton from \"../../common/BlueArrowButton\";\r\nimport \"./styles.scss\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport EarlyInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg\";\r\nimport RiseInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg\";\r\nimport MidInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg\";\r\nimport HappyInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg\";\r\nimport NeverTooInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg\";\r\nimport { getCalenderDetails } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nconst timeZone = [\r\n  {\r\n    label: \"Early Bird\",\r\n    value: \"EarlyBird\",\r\n  },\r\n  {\r\n    label: \"Rise & Shine\",\r\n    value: \"RiseAndShine\",\r\n  },\r\n  {\r\n    label: \"Mid-Day Break\",\r\n    value: \"MidDayBreak1\",\r\n  },\r\n  {\r\n    label: \"Mid-Day Lunchtime\",\r\n    value: \"MidDayBreak2\",\r\n  },\r\n  {\r\n    label: \"Happy Hour\",\r\n    value: \"HappyHours\",\r\n  },\r\n  {\r\n    label: \"Never Too Late\",\r\n    value: \"NeverTooLate\",\r\n  },\r\n];\r\nfunction UserSchedulerClass(props) {\r\n  //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n  let early_bird = [\r\n    \"05:00 AM\",\r\n    \"05:30 AM\",\r\n    \"06:00 AM\",\r\n    \"06:30 AM\",\r\n    \"07:00 AM\",\r\n    \"07:30 AM\",\r\n    \"Early Bird\",\r\n    EarlyInActive,\r\n  ];\r\n\r\n  let rise_shine = [\r\n    \"08:00 AM\",\r\n    \"08:30 AM\",\r\n    \"09:00 AM\",\r\n    \"09:30 AM\",\r\n    \"10:00 AM\",\r\n    \"10:30 AM\",\r\n    \"Rise & Shine\",\r\n    RiseInActive,\r\n  ]; //1\r\n\r\n  let mid_day = [\r\n    \"11:00 AM\",\r\n    \"11:30 AM\",\r\n    \"12:00 PM\",\r\n    \"12:30 PM\",\r\n    \"01:00 PM\",\r\n    \"01:30 PM\",\r\n    \"Mid-Day Break\",\r\n    MidInActive,\r\n  ]; //230 - 4\r\n\r\n  let mid_day_2 = [\r\n    \"02:00 PM\",\r\n    \"02:30 PM\",\r\n    \"03:00 PM\",\r\n    \"03:30 PM\",\r\n    \"04:00 PM\",\r\n    \"04:30 PM\",\r\n    \"Mid-Day Lunchtime\",\r\n    MidInActive,\r\n  ];\r\n\r\n  let happy_hour = [\r\n    \"05:00 PM\",\r\n    \"05:30 PM\",\r\n    \"06:00 PM\",\r\n    \"06:30 PM\",\r\n    \"07:00 PM\",\r\n    \"07:30 PM\",\r\n    \"Happy Hour\",\r\n    HappyInActive,\r\n  ];\r\n\r\n  let never_too_late = [\r\n    \"08:00 PM\",\r\n    \"08:30 PM\",\r\n    \"09:00 PM\",\r\n    \"09:30 PM\",\r\n    \"10:00 PM\",\r\n    \"10:30 PM\",\r\n    \"Never Too Late\",\r\n    NeverTooInActive,\r\n  ];\r\n\r\n  const [time, setTime] = React.useState(early_bird);\r\n  const [TimeSlot, setTimeSlot] = React.useState(\"EarlyBird\");\r\n\r\n  const [cellData, setCellData] = React.useState([]);\r\n  const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n  const [userSlots, setuserSlots] = React.useState([]);\r\n\r\n  const [cells, setCells] = React.useState([\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n  ]);\r\n\r\n  const [cal, setCal] = React.useState([]);\r\n  const [startWeek, setstartWeek] = React.useState(moment().startOf(\"isoWeek\"));\r\n  const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n  var dt = new Object();\r\n  var lt = new Object();\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const [aslot, setAslot] = React.useState();\r\n  const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    getAvailableSlots(startWeek, endWeek);\r\n    populate(startWeek, endWeek);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setSelectedCell([]);\r\n    getAvailableSlots(startWeek, endWeek);\r\n    populate(startWeek, endWeek);\r\n  }, [time]);\r\n\r\n  React.useEffect(() => {\r\n    Object.keys(data).map((item) => {\r\n      dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n    });\r\n\r\n    var ta;\r\n    Object.keys(dt).map((item) => {\r\n      ta = [];\r\n      dt[item].map((a) => {\r\n        // ta.push(a[\"end\"]);\r\n        ta.push(a[\"start\"]);\r\n      });\r\n\r\n      lt[item] = ta;\r\n    });\r\n\r\n    setAslot(lt);\r\n    setAslotKeys(Object.keys(lt));\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    setCellData([]);\r\n    time.map((time) => {\r\n      var temp = [];\r\n      cal.map((date) => {\r\n        // temp.push(date + \" \" + time);\r\n        temp.push({ date: date, time: time });\r\n      });\r\n\r\n      setCellData((cellData) => [...cellData, temp]);\r\n    });\r\n  }, [cal]);\r\n\r\n  React.useEffect(() => {\r\n    //    (\"change\", cells, cellData);\r\n    setSelectedCell([]);\r\n    cells.map((column, key) => {\r\n      var temp = [];\r\n      if (key !== 0) {\r\n        // (key);\r\n\r\n        column.map((row, key) => {\r\n          if (row === true) {\r\n            temp.push(key - 1);\r\n          }\r\n        });\r\n\r\n        setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n      }\r\n    });\r\n  }, [cells]);\r\n\r\n  const PreviousWeek = () => {\r\n    //Reset current cells\r\n\r\n    setstartWeek(startWeek.subtract(7, \"days\"));\r\n    setendWeek(endWeek.subtract(7, \"days\"));\r\n\r\n    getAvailableSlots(startWeek, endWeek);\r\n    populate(startWeek, endWeek);\r\n  };\r\n\r\n  React.useEffect(() => {}, [startWeek]);\r\n\r\n  const NextWeek = () => {\r\n    //Reset current cells\r\n\r\n    setstartWeek(startWeek.add(7, \"days\"));\r\n    setendWeek(endWeek.add(7, \"days\"));\r\n\r\n    getAvailableSlots(startWeek, endWeek);\r\n\r\n    populate(startWeek, endWeek);\r\n\r\n    // getAvailableSlots(startWeek, endWeek)\r\n  };\r\n\r\n  const populate = (start, end) => {\r\n    setCellData([]);\r\n    var now = start.clone(),\r\n      dates = [];\r\n\r\n    while (now.isSameOrBefore(end)) {\r\n      dates.push(now.format(\"YYYY-MM-DD\"));\r\n      now.add(1, \"days\");\r\n    }\r\n    setCal(dates);\r\n\r\n    if (cellData.length === 0) {\r\n      time.map((time) => {\r\n        var temp = [];\r\n        dates.map((date) => {\r\n          // temp.push(date + \" \" + time);\r\n          temp.push({ date: date, time: time });\r\n        });\r\n\r\n        setCellData((cellData) => [...cellData, temp]);\r\n      });\r\n    } else {\r\n      //   console.log(\"pop\");\r\n    }\r\n  };\r\n\r\n  function selectUserSlot(date, time) {\r\n    // var temp = [date + time]\r\n    // setuserSlots(temp);\r\n\r\n    var cellCollection = [];\r\n    var temp = aslot[date];\r\n    cellCollection.push(time + date);\r\n\r\n    var newTime = moment(time, \"hh:mm A\").add(30, \"minutes\").format(\"hh:mm A\");\r\n    var ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\").valueOf();\r\n    var tss;\r\n    if (temp.find((el) => el === newTime)) {\r\n      cellCollection.push(newTime + date);\r\n      tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n        .add(60, \"minutes\")\r\n        .valueOf();\r\n\r\n      props.parentCallback(ts, tss, date);\r\n    } else {\r\n      var prevTime = moment(newTime, \"hh:mm A\")\r\n        .subtract(60, \"minutes\")\r\n        .format(\"hh:mm A\");\r\n      cellCollection.push(prevTime + date);\r\n      tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n        .subtract(30, \"minutes\")\r\n        .valueOf();\r\n\r\n      ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n        .add(30, \"minutes\")\r\n        .valueOf();\r\n\r\n      props.parentCallback(tss, ts, date);\r\n    }\r\n\r\n    setuserSlots(cellCollection);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    populate(startWeek, endWeek);\r\n  }, [userSlots]);\r\n\r\n  const getAvailableSlots = (start, end) => {\r\n    var startDate = start.format(\"YYYY-MM-DD\");\r\n    var endDate = end.format(\"YYYY-MM-DD\");\r\n    props\r\n      .getCalenderDetails(props.id, startDate, endDate, TimeSlot)\r\n      .then((json) => {\r\n        setData(json.data);\r\n      });\r\n  };\r\n\r\n  let tableData2;\r\n\r\n  if (cellData.length === 0) {\r\n    //console.log(\"hitu\");\r\n  } else {\r\n    tableData2 = (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ height: \"70px\" }}>\r\n              <img src={time[7]} style={{ width: \"30px\", height: \"30px\" }} />\r\n              <h6\r\n                style={{\r\n                  wordWrap: \"break-word\",\r\n                  lineHeight: \"18px\",\r\n                  paddingLeft: \"0.5em\",\r\n                  paddingRight: \"0.5em\",\r\n                  paddingBottom: \"0em\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontWeight: \"600\",\r\n                  color: \"#898989\",\r\n                  margin: 0,\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {time[6]}\r\n              </h6>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[0].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">MON</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[1].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">TUES</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[2].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">WED</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[3].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">THURS</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[4].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">FRI</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[5].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">SAT</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[6].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">SUN</div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[0]}</td>\r\n            {cellData[0].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    // console.log(item.date + item.time, userSlots, \"blah\");\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                        className=\"avaiable_slot\"\r\n                      >\r\n                        {item.time}\r\n                      </td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[1]}</td>\r\n            {cellData[1].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                        className=\"avaiable_slot\"\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[2]}</td>\r\n            {cellData[2].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[3]}</td>\r\n            {cellData[3].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[4]}</td>\r\n            {cellData[4].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[5]}</td>\r\n            {cellData[5].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"outter_table_user\">\r\n      <div className=\"table_user\">\r\n        <div className=\"table_inner_trainer\">\r\n          <div className=\"table_date\">\r\n            {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n              moment().startOf(\"isoWeek\").format(\"YYYY-MM-DD\"),\r\n              \"day\"\r\n            ) ? (\r\n              <div>\r\n                <img\r\n                  src={BackIcon}\r\n                  onClick={PreviousWeek}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />{\" \"}\r\n                &ensp;\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <img\r\n                  src={BackIcon}\r\n                  disabled=\"true\"\r\n                  style={{\r\n                    opacity: \"0.5\",\r\n                    cursor: \"not-allowed\",\r\n                  }}\r\n                />{\" \"}\r\n                &ensp;\r\n              </div>\r\n            )}\r\n            &ensp;\r\n            <div className=\"date_week\">\r\n              {startWeek.format(\"DD\")} - {endWeek.format(\"DD\")} &ensp;\r\n              {startWeek.format(\"MMMM\")} &ensp; {startWeek.format(\"yyyy\")}{\" \"}\r\n            </div>\r\n            <img\r\n              src={NextIcon}\r\n              onClick={NextWeek}\r\n              style={{ cursor: \"pointer\" }}\r\n            />{\" \"}\r\n            &ensp; &ensp;\r\n          </div>\r\n\r\n          <Dropdown\r\n            className=\"custom_dropdown\"\r\n            title=\"Select Time Zone\"\r\n            list={timeZone}\r\n            value={TimeSlot}\r\n            onChange={(e) => {\r\n              setTimeSlot(e.value);\r\n              if (e.value === \"EarlyBird\") {\r\n                setTime(early_bird);\r\n              }\r\n\r\n              if (e.value === \"RiseAndShine\") {\r\n                setTime(rise_shine);\r\n              }\r\n\r\n              if (e.value === \"MidDayBreak1\") {\r\n                setTime(mid_day);\r\n              }\r\n\r\n              if (e.value === \"MidDayBreak2\") {\r\n                setTime(mid_day_2);\r\n              }\r\n\r\n              if (e.value === \"HappyHours\") {\r\n                setTime(happy_hour);\r\n              }\r\n\r\n              if (e.value === \"NeverTooLate\") {\r\n                setTime(never_too_late);\r\n              }\r\n            }}\r\n            name=\"TimeSlot\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <br></br>\r\n\r\n      {tableData2}\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCalenderDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst UserScheduler = connect(null, mapDispatchToProps)(UserSchedulerClass);\r\n\r\nexport default UserScheduler;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";","export default __webpack_public_path__ + \"static/media/EarlyBird_Inactive.8646c23c.svg\";","export default __webpack_public_path__ + \"static/media/HappyHour_Inactive.bef73318.svg\";","export default __webpack_public_path__ + \"static/media/Mid-DayBreak_Inactive.edab2351.svg\";","export default __webpack_public_path__ + \"static/media/NeverTooLate_Inactive.0ac0364d.svg\";","export default __webpack_public_path__ + \"static/media/Rise_Shine_Inactive.fb11fce5.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}