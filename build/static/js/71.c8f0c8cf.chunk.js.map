{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerSession/index.js","assets/files/TrainerDashboard/Message/Jenny.png","assets/files/TrainerDashboard/Message/Availability Icon.svg","assets/files/TrainerDashboard/Message/Location Icon.svg"],"names":["TabOne","datas","handleSessionStatus","useState","setVisible","className","length","map","data","index","date","month","heading","src","imgAva","alt","avaTime","imgLoc","loc","sessionStatus","onClick","id","prevValue","to","Fragment","previousImg","prevDate","TabTwo","TabThree","TabFour","TrainerSession","connect","state","sessionData","trainerReducer","dispatch","bindActionCreators","getTrainerSessionDetailsApi","getTrainerSessionDetails","upcomingSessions","pastSessions","onGoingSessions","trainerSessionData","setTrainerSessionData","useEffect","getAllDetails","then","tempSessionData","Object","keys","forEach","sessionKey","title","venue","sessionDate","sessionStartTime","getFormatDate","AvailabilityIcon","LocationIcon","Jenny","prevHeading","trainerId","payload","sessionId","changeSessionStatus","TrainerApi","body","api","console","log","catch","err","Toast","type","message","defaultTab","tabFor","tabId"],"mappings":"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","file":"static/js/71.c8f0c8cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-web-tabs\";\r\nimport \"react-web-tabs/dist/react-web-tabs.css\";\r\nimport AvailabilityIcon from \"../../../../assets/files/TrainerDashboard/Message/Availability Icon.svg\";\r\nimport LocationIcon from \"../../../../assets/files/TrainerDashboard/Message/Location Icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlueArrowButton from \"../../../common/BlueArrowButton\";\r\nimport Jenny from \"../../../../assets/files/TrainerDashboard/Message/Jenny.png\";\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport { getTrainerSessionDetails } from \"action/trainerAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFormatDate } from \"service/helperFunctions\";\r\nimport { TrainerApi } from \"../../../../service/apiVariables\";\r\nimport { api } from \"../../../../service/api\";\r\nimport { Toast } from \"../../../../service/toast\";\r\n\r\nconst TrainerSessionFC = ({ sessionData, getTrainerSessionDetailsApi }) => {\r\n  const [trainerSessionData, setTrainerSessionData] = useState({\r\n    upcomingSessions: [],\r\n    pastSessions: [],\r\n    onGoingSessions: [],\r\n  });\r\n  useEffect(() => {\r\n    getAllDetails();\r\n  }, []);\r\n\r\n  const getAllDetails = () => {\r\n    getTrainerSessionDetailsApi().then((data) => {\r\n      const tempSessionData = {};\r\n      Object.keys(data).forEach((sessionKey) => {\r\n        tempSessionData[sessionKey] = data[sessionKey].map(\r\n          ({\r\n            title,\r\n            venue,\r\n            sessionDate,\r\n            sessionStartTime,\r\n            id,\r\n            sessionStatus,\r\n          }) => ({\r\n            date: getFormatDate(sessionDate, \"D\"),\r\n            month: getFormatDate(sessionDate, \"MMM\"),\r\n            heading: title,\r\n            imgAva: AvailabilityIcon,\r\n            avaTime: `${getFormatDate(sessionStartTime, \"LT\", true)} EST`,\r\n            imgLoc: LocationIcon,\r\n            loc: venue,\r\n            previousImg: Jenny,\r\n            prevHeading: \"Yoga with Kane\",\r\n            prevDate: getFormatDate(sessionData, \"DD MMMM YYYY\"),\r\n            sessionStatus,\r\n            id,\r\n          })\r\n        );\r\n      });\r\n\r\n      setTrainerSessionData(tempSessionData);\r\n    });\r\n  };\r\n\r\n  const handleSessionStatus = (trainerId, sessionStatus) => {\r\n    let payload = {\r\n      sessionId: trainerId,\r\n      sessionStatus,\r\n    };\r\n\r\n    const { changeSessionStatus } = TrainerApi;\r\n\r\n    changeSessionStatus.body = payload;\r\n\r\n    api({ ...changeSessionStatus })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        getAllDetails();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        Toast({ type: \"error\", message: err.message || \"\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"outter_user_container\">\r\n        <div className=\"container\">\r\n          <div className=\"inner_user_container \">\r\n            <div className=\"userSession_heading\">\r\n              <h2>My Session</h2>\r\n            </div>\r\n            <div className=\"US_tabs_wrapper\">\r\n              <Tabs defaultTab=\"overview\">\r\n                <TabList>\r\n                  <Tab tabFor=\"overview\">Overview</Tab>\r\n                  <Tab tabFor=\"upcoming\">Upcoming</Tab>\r\n                  <Tab tabFor=\"pass\">Motto pass</Tab>\r\n                  <Tab tabFor=\"previous\">Previous</Tab>\r\n                </TabList>\r\n                <div className=\"tabPanel_outter\">\r\n                  <TabPanel tabId=\"overview\">\r\n                    <TabOne\r\n                      datas={trainerSessionData.upcomingSessions}\r\n                      handleSessionStatus={handleSessionStatus}\r\n                    />\r\n                  </TabPanel>\r\n                </div>\r\n                <div className=\"tabPanel_outter\">\r\n                  <TabPanel tabId=\"upcoming\">\r\n                    <TabTwo\r\n                      datas={trainerSessionData.upcomingSessions}\r\n                      handleSessionStatus={handleSessionStatus}\r\n                    />\r\n                  </TabPanel>\r\n                </div>\r\n                <div className=\"tabPanel_outter\">\r\n                  <TabPanel tabId=\"pass\">\r\n                    <TabThree />\r\n                  </TabPanel>\r\n                </div>\r\n                <div className=\"tabPanel_outter\">\r\n                  <TabPanel tabId=\"previous\">\r\n                    <TabFour\r\n                      datas={trainerSessionData.pastSessions}\r\n                      handleSessionStatus={handleSessionStatus}\r\n                    />\r\n                  </TabPanel>\r\n                </div>\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TabOne = ({ datas = [], handleSessionStatus }) => {\r\n  const [visible, setVisible] = useState([3]);\r\n\r\n  const setViewMore = () => {\r\n    setVisible((prevValue) => prevValue + 1);\r\n  };\r\n  return (\r\n    <div className=\"tabPanel_overview d-flex\">\r\n      <div className=\"tabPanel_overview_left w-100\">\r\n        <div className=\"TP_overview_wrapper\">\r\n          <h3>Upcoming Sessions</h3>\r\n          <div className=\"TP_US_overview\">\r\n            <div className=\"TP_US_overview_inner\">\r\n              {datas.length > 0 ? (\r\n                datas.map((data, index) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"TP_upcomeSession_overview\" key={index}>\r\n                        <div className=\"TP_USession_dates\">\r\n                          <h4>\r\n                            {data.date}\r\n                            <span>{data.month}</span>\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"TP_USession_data\">\r\n                          <h2 className=\"text-capitalize\">{data.heading}</h2>\r\n                          <div className=\"TP_USession_data_icons\">\r\n                            <h5>\r\n                              <img src={data.imgAva} alt=\"icon\" />\r\n                              {data.avaTime}\r\n                            </h5>\r\n                            <h5 className=\"text-capitalize\">\r\n                              <img src={data.imgLoc} alt=\"icon\" />\r\n                              {data.loc}\r\n                            </h5>\r\n                          </div>\r\n                          {data.sessionStatus !== \"completed\" ? (\r\n                            <div className=\"TP_USession_data_buttons\">\r\n                              <button>Reschedule</button>\r\n                              <button>Cancel</button>\r\n                              <button\r\n                                className=\"text-primary\"\r\n                                onClick={() =>\r\n                                  handleSessionStatus(data.id, \"completed\")\r\n                                }\r\n                              >\r\n                                Completed\r\n                              </button>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              <p>Completed</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <h3 className=\"my-5 py-5 text-center\">No Data Found</h3>\r\n              )}\r\n            </div>\r\n            {datas.length > 0 ? (\r\n              <button onClick={setViewMore} className=\"viewMoreButton\">\r\n                View all Session <BlueHoverButton />\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"tabPanel_overview_right\">\r\n        <div className=\"TB_overview_right\">\r\n          <div className=\"TB_overview_row_one\">\r\n            <div className=\"row_one_data\">\r\n              <h2>Want to Do More for Less?</h2>\r\n              <p>\r\n                Save money by purchasing multiple sessions at once, eligible for\r\n                use within 60 days of the purchase date.\r\n              </p>\r\n              <Link to=\"/\">\r\n                Get A pass <BlueArrowButton />{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"TB_overview_row_two\">\r\n            <div className=\"row_two_data\">\r\n              <h2>PREVIOUS SESSIONS</h2>\r\n              <div className=\"row_two_scroll\">\r\n                {datas.length > 0 ? (\r\n                  datas.map((data, index) => {\r\n                    return (\r\n                      <React.Fragment key={index}>\r\n                        <div className=\"row_previous_data\">\r\n                          <div className=\"row_previous_avater\">\r\n                            <img src={data.previousImg} alt=\"profile\" />\r\n                          </div>\r\n                          <div className=\"row_previous_header\">\r\n                            <h2 className=\"text-capitalize\">{data.heading}</h2>\r\n                            <p>{data.prevDate}</p>\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n                      </React.Fragment>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <h3 className=\"my-5 py-5 text-center\">No Data Found</h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabTwo = ({ datas = [], handleSessionStatus }) => {\r\n  const [visible, setVisible] = useState([3]);\r\n\r\n  const setViewMore = () => {\r\n    setVisible((prevValue) => prevValue + 1);\r\n  };\r\n  return (\r\n    <div className=\"tabPanel_overview d-flex\">\r\n      <div className=\"tabPanel_overview_left w-100\">\r\n        <div className=\"TP_overview_wrapper\">\r\n          <h3>Upcoming Sessions</h3>\r\n          <div className=\"TP_US_overview\">\r\n            <div className=\"TP_US_overview_inner\">\r\n              {datas.length > 0 ? (\r\n                datas.map((data, index) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"TP_upcomeSession_overview\" key={index}>\r\n                        <div className=\"TP_USession_dates\">\r\n                          <h4>\r\n                            {data.date}\r\n                            <span>{data.month}</span>\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"TP_USession_data\">\r\n                          <h2 className=\"text-capitalize\">{data.heading}</h2>\r\n                          <div className=\"TP_USession_data_icons\">\r\n                            <h5>\r\n                              <img src={data.imgAva} alt=\"icon\" />\r\n                              {data.avaTime}\r\n                            </h5>\r\n                            <h5 className=\"text-capitalize\">\r\n                              <img src={data.imgLoc} alt=\"icon\" />\r\n                              {data.loc}\r\n                            </h5>\r\n                          </div>\r\n                          {data.sessionStatus !== \"completed\" ? (\r\n                            <div className=\"TP_USession_data_buttons\">\r\n                              <button>Reschedule</button>\r\n                              <button>Cancel</button>\r\n                              <button\r\n                                className=\"text-primary\"\r\n                                onClick={() =>\r\n                                  handleSessionStatus(data.id, \"completed\")\r\n                                }\r\n                              >\r\n                                Completed\r\n                              </button>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              <p>Completed</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <h3 className=\"my-5 py-5 text-center\">No Data Found</h3>\r\n              )}\r\n            </div>\r\n            {datas.length > 0 ? (\r\n              <button onClick={setViewMore} className=\"viewMoreButton\">\r\n                View all Session <BlueHoverButton />\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabThree = () => {\r\n  return (\r\n    <div className=\"tabPanel_overview\">\r\n      <div className=\"tabPanel_overview_right\">\r\n        <div className=\"TB_overview_right\">\r\n          <div className=\"TB_overview_row_one\">\r\n            <div className=\"row_one_data\">\r\n              <h2>Want to Do More for Less?</h2>\r\n              <p>\r\n                Save money by purchasing multiple sessions at once, eligible for\r\n                use within 60 days of the purchase date.\r\n              </p>\r\n              <Link to=\"/\">\r\n                Get A pass <BlueArrowButton />{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst TabFour = ({ datas = [] }) => {\r\n  return (\r\n    <div className=\"tabPanel_overview d-flex\">\r\n      <div className=\"tabPanel_overview_right w-100\">\r\n        <div className=\"TB_overview_right\">\r\n          <div className=\"TB_overview_row_two\">\r\n            <div className=\"row_two_data\">\r\n              <h2>PREVIOUS SESSIONS</h2>\r\n              <div className=\"row_two_scroll\">\r\n                {datas.length > 0 ? (\r\n                  datas.map((data, index) => {\r\n                    return (\r\n                      <>\r\n                        <div className=\"row_previous_data\" key={index}>\r\n                          <div className=\"row_previous_avater\">\r\n                            <img src={data.previousImg} alt=\"profile\" />\r\n                          </div>\r\n                          <div className=\"row_previous_header\">\r\n                            <h2 className=\"text-capitalize\">{data.heading}</h2>\r\n                            <p>{data.prevDate}</p>\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n                      </>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <h3 className=\"my-5 py-5 text-center\">No Data Found</h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sessionData: state.trainerReducer.sessionData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getTrainerSessionDetailsApi: getTrainerSessionDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerSession = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainerSessionFC);\r\n\r\nexport default TrainerSession;\r\n","export default __webpack_public_path__ + \"static/media/Jenny.c50273b9.png\";","export default __webpack_public_path__ + \"static/media/Availability Icon.ad0517cb.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.cbb0b32d.svg\";"],"sourceRoot":""}