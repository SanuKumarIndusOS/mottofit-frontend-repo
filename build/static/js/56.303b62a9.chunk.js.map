{"version":3,"sources":["component/TrainerOnBoard/TrainerAvailability/index.js","assets/files/SVG/Arrow Back.svg","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/colors/cyan.js"],"names":["CyanRadio","withStyles","root","color","cyan","checked","props","TrainerAvailability","connect","dispatch","bindActionCreators","updateTrainerDetailsApicall","trainerDetail","useState","selectedValue","setSelectedValue","selectedOneValue","setSelectedOneValue","checkButton","setCheckButton","checkButtonInPerson","setCheckButtonInPerson","isLoading","setisLoading","open","setOpen","myRef","useRef","hoursPerWeek","preferedTrainingMode","trainingFacilityLocation","servicableLocation","trainerAvailabilityData","setTrainerAvailabilityData","handleChange","event","target","value","handleOneChange","useEffect","then","data","tempData","serviceableNeighbourHood","trainingFacility","undefined","willingToTravel","length","filter","x","className","src","ArrowBack","alt","to","onSubmit","e","preventDefault","type","placeholder","onChange","onClick","includes","prefered","handleTrianingData","handleTrainingData","name","inputProps","disabled","parseInt","stripeId","applicationStatus","parseFloat","catch","onClose","history","push","center","closeIcon","CloseIcon","container","current","styles","boaderRadius","style","textAlign","height","width","padding","WaterMark","createChainedFunction","_len","arguments","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","RadioGroupContext","React","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","ref","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/56.303b62a9.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport \"./model.scss\";\r\nimport CloseIcon from \"../../../assets/files/FindTrainer/Cross.svg\";\r\nimport { history } from \"helpers\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTrainerDetailsApicall, trainerDetail } from \"action/trainerAct\";\r\n\r\nconst CyanRadio = withStyles({\r\n  root: {\r\n    \"&$checked\": {\r\n      color: cyan[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst TrainerAvailabilityFC = ({\r\n  updateTrainerDetailsApicall,\r\n  trainerDetail,\r\n}) => {\r\n  const [selectedValue, setSelectedValue] = useState(\"a\");\r\n  const [selectedOneValue, setSelectedOneValue] = useState(\"1\");\r\n  const [checkButton, setCheckButton] = useState(false);\r\n  const [checkButtonInPerson, setCheckButtonInPerson] = useState(false);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const myRef = useRef(null);\r\n\r\n  const [trainerAvailabilityData, setTrainerAvailabilityData] = useState({\r\n    hoursPerWeek: \"\",\r\n    preferedTrainingMode: [],\r\n    trainingFacilityLocation: \"\",\r\n    servicableLocation: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const handleOneChange = (event) => {\r\n    setSelectedOneValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = {\r\n      preferedTrainingMode: trainerAvailabilityData.preferedTrainingMode,\r\n      willingToTravel:\r\n        parseInt(selectedOneValue) === parseInt(\"1\") ? true : false,\r\n      serviceableNeighbourHood:\r\n        trainerAvailabilityData.serviceableNeighbourHood,\r\n      trainingFacilityLocation:\r\n        trainerAvailabilityData.trainingFacilityLocation,\r\n      stripeId: \"\",\r\n      // serviceableCity: trainerAvailabilityData.servicableLocation,\r\n      applicationStatus: \"submitted\",\r\n    };\r\n    if (trainerAvailabilityData.hoursPerWeek !== \"\") {\r\n      data.hoursPerWeek = parseFloat(trainerAvailabilityData.hoursPerWeek);\r\n    }\r\n    setisLoading(true);\r\n    updateTrainerDetailsApicall(data)\r\n      .then(() => {\r\n        setOpen(true);\r\n        setisLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setOpen(false);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleTrianingData = (e, type) => {\r\n    let tempData = [...trainerAvailabilityData.preferedTrainingMode];\r\n\r\n    if (tempData.includes(type)) {\r\n      tempData = tempData.filter((prefered) => prefered !== type);\r\n    } else {\r\n      tempData = [...tempData, type];\r\n    }\r\n    trainerAvailabilityData.preferedTrainingMode = [...tempData];\r\n    setTrainerAvailabilityData({\r\n      ...trainerAvailabilityData,\r\n    });\r\n\r\n    setCheckButton((checkButton) => !checkButton);\r\n  };\r\n  const handleTrainingData = (e, type) => {\r\n    let tempData = [...trainerAvailabilityData.preferedTrainingMode];\r\n\r\n    if (tempData.includes(type)) {\r\n      tempData = tempData.filter((prefered) => prefered !== type);\r\n    } else {\r\n      tempData = [...tempData, type];\r\n    }\r\n    trainerAvailabilityData.preferedTrainingMode = [...tempData];\r\n    setTrainerAvailabilityData({\r\n      ...trainerAvailabilityData,\r\n    });\r\n    setCheckButtonInPerson((checkButtonInPerson) => !checkButtonInPerson);\r\n  };\r\n\r\n  useEffect(() => {\r\n    trainerDetail().then((data) => {\r\n      if (data) {\r\n        const tempData = {\r\n          hoursPerWeek: data.hoursPerWeek ? data.hoursPerWeek : 0,\r\n          preferedTrainingMode: data.preferedTrainingMode\r\n            ? data.preferedTrainingMode\r\n            : [],\r\n          trainingFacilityLocation: data.trainingFacilityLocation\r\n            ? data.trainingFacilityLocation\r\n            : \"\",\r\n          servicableLocation: data.servicableLocation\r\n            ? data.servicableLocation\r\n            : \"\",\r\n          serviceableNeighbourHood: data.serviceableNeighbourHood\r\n            ? data.serviceableNeighbourHood\r\n            : \"\",\r\n        };\r\n        setTrainerAvailabilityData(tempData);\r\n        if (\r\n          data.trainingFacility !== null &&\r\n          data.trainingFacility !== undefined\r\n        ) {\r\n          setSelectedValue(data.trainingFacility ? \"a\" : \"b\");\r\n        }\r\n        if (\r\n          data.willingToTravel !== null &&\r\n          data.willingToTravel !== undefined\r\n        ) {\r\n          setSelectedOneValue(data.willingToTravel ? \"1\" : \"0\");\r\n        }\r\n        if (\r\n          data.preferedTrainingMode &&\r\n          data.preferedTrainingMode.length !== 0\r\n        ) {\r\n          let tempArray = [];\r\n          tempArray = data.preferedTrainingMode.filter((x) => x === \"virtual\");\r\n          if (tempArray.length !== 0) {\r\n            setCheckButton(true);\r\n          }\r\n          let tempArrayPerson = [];\r\n          tempArrayPerson = data.preferedTrainingMode.filter(\r\n            (x) => x == \"inPerson\"\r\n          );\r\n          if (tempArrayPerson.length !== 0) {\r\n            setCheckButtonInPerson(true);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"link_wrapper\">\r\n          <img src={ArrowBack} alt=\"icon\" />\r\n          <div className=\"inner_links\">\r\n            <Link to=\"/trainer/background\">Back to Trainer Background</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"main_wrappercontainer\">\r\n          <div className=\"wrapper_inneritem\">\r\n            <h1>Highlight your availability on the platform</h1>\r\n            <form className=\"container\" onSubmit={(e) => e.preventDefault()}>\r\n              <div className=\"content_wrapper\">\r\n                <div className=\"item_1\">\r\n                  <h6>How many hours will you list on Motto?</h6>\r\n                  <div className=\"inputs_platform\">\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"10 Hours/Week\"\r\n                      value={trainerAvailabilityData.hoursPerWeek}\r\n                      onChange={(e) => {\r\n                        setTrainerAvailabilityData({\r\n                          ...trainerAvailabilityData,\r\n                          hoursPerWeek: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"item_2\">\r\n                  <h6>Where are you willing to train?</h6>\r\n                  <div className=\"inputs_platform\">\r\n                    <button\r\n                      onClick={(e) => handleTrianingData(e, \"virtual\")}\r\n                      className={checkButton ? \"buttonFalse\" : \"buttonTrue\"}\r\n                    >\r\n                      Virtual\r\n                    </button>\r\n                    <button\r\n                      onClick={(e) => handleTrainingData(e, \"inPerson\")}\r\n                      className={\r\n                        checkButtonInPerson ? \"buttonFalse\" : \"buttonTrue\"\r\n                      }\r\n                    >\r\n                      In Person\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"item_3\">\r\n                  <h6>\r\n                    Do you have a facility or location where you will train\r\n                    clients?\r\n                  </h6>\r\n                  <CyanRadio\r\n                    checked={selectedValue == \"a\"}\r\n                    onChange={handleChange}\r\n                    value=\"a\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{ \"aria-label\": \"a\" }}\r\n                  />\r\n                  <label>Yes</label>\r\n                  <CyanRadio\r\n                    checked={selectedValue == \"b\"}\r\n                    onChange={handleChange}\r\n                    value=\"b\"\r\n                    name=\"radio-button-demo\"\r\n                    inputProps={{ \"aria-label\": \"b\" }}\r\n                  />\r\n                  <label>No</label>\r\n                </div>\r\n                <div className=\"item_4\">\r\n                  <h6>Details of the facility/location</h6>\r\n                  <div className=\"inputs_platform\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      placeholder=\"Enter the Details of the location\"\r\n                      value={trainerAvailabilityData.trainingFacilityLocation}\r\n                      className={`${\r\n                        selectedValue !== \"a\" ? \"disable-btn\" : \"\"\r\n                      }`}\r\n                      disabled={selectedValue !== \"a\"}\r\n                      onChange={(e) => {\r\n                        setTrainerAvailabilityData({\r\n                          ...trainerAvailabilityData,\r\n                          trainingFacilityLocation: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"item_5\">\r\n                  <h6>\r\n                    Are you willing to travel to clients in your city/region?\r\n                  </h6>\r\n                  <CyanRadio\r\n                    checked={selectedOneValue == \"1\"}\r\n                    onChange={handleOneChange}\r\n                    value=\"1\"\r\n                    inputProps={{ \"aria-label\": \"1\" }}\r\n                  />\r\n                  <label> Yes!</label>\r\n                  <CyanRadio\r\n                    checked={selectedOneValue == \"0\"}\r\n                    onChange={handleOneChange}\r\n                    value=\"0\"\r\n                    inputProps={{ \"aria-label\": \"0\" }}\r\n                  />\r\n                  <label>No</label>\r\n                </div>\r\n                <div className=\"item_6\">\r\n                  <h6>\r\n                    List the areas/neighborhoods you’re willing to travel to\r\n                  </h6>\r\n                  <div className=\"inputs_platform\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      placeholder=\"Neighborhood List\"\r\n                      value={trainerAvailabilityData.serviceableNeighbourHood}\r\n                      className={`${\r\n                        parseInt(selectedOneValue) !== 1 ? \"disable-btn\" : \"\"\r\n                      }`}\r\n                      disabled={parseInt(selectedOneValue) !== 1}\r\n                      onChange={(e) => {\r\n                        setTrainerAvailabilityData({\r\n                          ...trainerAvailabilityData,\r\n                          serviceableNeighbourHood: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"submit_button\">\r\n                <button\r\n                  type=\"submit\"\r\n                  onClick={handleSubmit}\r\n                  disabled={isLoading}\r\n                  className=\"d-flex justify-content-center\"\r\n                >\r\n                  {isLoading ? (\r\n                    \"Loading...\"\r\n                  ) : (\r\n                    <>\r\n                      Submit\r\n                      <ArrowHoverBlacked />\r\n                    </>\r\n                  )}\r\n                </button>\r\n                {open ? (\r\n                  <Modal\r\n                    open={open}\r\n                    onClose={() => {\r\n                      setOpen(false);\r\n                      history.push(\"card\");\r\n                    }}\r\n                    center\r\n                    closeIcon={<img src={CloseIcon} alt=\"close\" />}\r\n                    container={myRef.current}\r\n                    styles={{\r\n                      boaderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        height: \"300px\",\r\n                        width: \"600px\",\r\n                        padding: \"2em\",\r\n                      }}\r\n                      className=\"model_styles\"\r\n                    >\r\n                      <h2>\r\n                        Background Information collection complete. Click the\r\n                        “x” to move to next section!\r\n                      </h2>\r\n                      <p>\r\n                        Time to move on to building your public Motto profile.\r\n                        This profile will be published only after you are\r\n                        approved!\r\n                      </p>\r\n                    </div>\r\n                  </Modal>\r\n                ) : null}\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <img src={WaterMark} alt=\"icon\" className=\"ava_watermark\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateTrainerDetailsApicall,\r\n      trainerDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerAvailability = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(TrainerAvailabilityFC);\r\n\r\nexport default TrainerAvailability;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;"],"sourceRoot":""}