{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerCard/TrainerPrevModal.js"],"names":["TrainerPrevModal","open","setOpen","trainerCardData","image","myRef","useRef","closeIconModal","src","CloseIcon","alt","React","useState","price","setPrice","useEffect","tempTrainerData","totalCost","Object","keys","filter","data","map","name","parseInt","value","isNaN","reduce","prev","curr","onClose","center","closeIcon","container","current","styles","boaderRadius","className","style","alignleft","objectFit","backgroundColor","textTransform","firstName","lastName","color","fontWeight","undefined","verticals","item","margin","description"],"mappings":"yOAOaA,EAAmB,SAAC,GAM1B,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,MAGMC,EAAQC,iBAAO,MACfC,EAAiB,qBAAKC,IAAKC,UAAWC,IAAI,UA6BhD,EAA0BC,IAAMC,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OArBAH,IAAMI,WAAU,WACd,IAAIC,EAAe,eAAQb,GAUrBc,GARND,EAAkBE,OAAOC,KAAKH,GAAiBI,QAC7C,SAACC,GAAD,MACW,gBAATA,GACS,cAATA,GACS,cAATA,GACS,aAATA,MAIDC,KAAI,SAACC,GAAD,OAAUC,SAASrB,EAAgBoB,OACvCH,QAAO,SAACK,GAAD,OAAYC,MAAMD,MACzBE,QAAO,SAACC,EAAMC,GACb,OAAOD,EAAOC,IACb,GAELf,EAASG,KACR,CAAChB,IAGF,8BACGA,EACC,cAAC,IAAD,CACEA,KAAMA,EACN6B,QAAS,WACP5B,GAAQ,IAEV6B,QAAM,EACNC,UAAWzB,EACX0B,UAAW5B,EAAM6B,QACjBC,OAAQ,CACNC,aAAc,QATlB,SAYE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAUC,MAAO,CAAEC,UAAW,QAA7C,SACE,sBAAKF,UAAU,OAAf,UACE,qBACEA,UAAU,eACV7B,IACEJ,GAEI,yGAENkC,MACElC,EACI,CAAEoC,UAAW,SACb,CACEA,UAAW,QACXC,gBAAiB,UAI3B,sBAAKJ,UAAU,YAAf,UACE,qBACEC,MAAO,CACLI,cAAe,cAFnB,UAKGvC,EAAgBwC,UALnB,OAOGxC,EAAgByC,YAEnB,oBACEN,MAAO,CACLO,MAAO,UACPC,WAAY,QAHhB,cAMiCC,IAA9B5C,EAAgB6C,UACb7C,EAAgB6C,UAAU1B,KAAI,SAAC2B,GAC7B,OACE,qBACEX,MAAO,CACLY,OAAQ,eAFZ,UAKGD,EACA,UAIP,OAGN,4BAAI9C,EAAgBgD,iBAEtB,qBAAKd,UAAU,cAAf,SACE,yBACEC,MAAO,CACLG,gBAAiB,WAFrB,2BAME,sCACO,qCAAQ5B,GAAS,uBAQlC,S","file":"static/js/134.5c1e71b9.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport CloseIcon from \"../../../../assets/files/FindTrainer/Cross.svg\";\r\nimport { Modal } from \"react-responsive-modal\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./trainer.sass\";\r\n\r\nexport const TrainerPrevModal = ({\r\n  open,\r\n  setOpen,\r\n  trainerCardData,\r\n  image,\r\n  // setImage,\r\n}) => {\r\n  const myRef = useRef(null);\r\n  const closeIconModal = <img src={CloseIcon} alt=\"close\" />;\r\n\r\n  //   const TrainerCardPayload = useSelector(\r\n  //     (state) => state.trainerCaptureReducer.cardData\r\n  //   );\r\n\r\n  //   const priceArray = [\r\n  //     TrainerCardPayload.inPersonAtClient_individualCharge,\r\n  //     TrainerCardPayload.inPersonAtClient_twoPPL,\r\n  //     TrainerCardPayload.inPersonAtClient_threePPL,\r\n  //     TrainerCardPayload.inPersonAtClient_fourPPL,\r\n  //     TrainerCardPayload.inPersonAtClient_classFlatRate,\r\n  //     TrainerCardPayload.inPersonAtClient_threeSessionRate,\r\n  //     TrainerCardPayload.inPersonAtClient_tenSessionRate,\r\n  //     TrainerCardPayload.inPersonAtTrainer_individualCharge,\r\n  //     TrainerCardPayload.inPersonAtTrainer_twoPPL,\r\n  //     TrainerCardPayload.inPersonAtTrainer_threePPL,\r\n  //     TrainerCardPayload.inPersonAtTrainer_fourPPL,\r\n  //     TrainerCardPayload.inPersonAtTrainer_classFlatRate,\r\n  //     TrainerCardPayload.inPersonAtTrainer_threeSessionRate,\r\n  //     TrainerCardPayload.inPersonAtTrainer_tenSessionRate,\r\n  //     TrainerCardPayload.virtual_individualCharge,\r\n  //     TrainerCardPayload.virtual_twoPPL,\r\n  //     TrainerCardPayload.virtual_threePPL,\r\n  //     TrainerCardPayload.virtual_fourPPL,\r\n  //     TrainerCardPayload.virtual_classFlatRate,\r\n  //     TrainerCardPayload.virtual_threeSessionRate,\r\n  //     TrainerCardPayload.virtual_tenSessionRate,\r\n  //   ];\r\n  const [price, setPrice] = React.useState(0);\r\n  React.useEffect(() => {\r\n    let tempTrainerData = { ...trainerCardData };\r\n\r\n    tempTrainerData = Object.keys(tempTrainerData).filter(\r\n      (data) =>\r\n        data !== \"description\" &&\r\n        data !== \"firstName\" &&\r\n        data !== \"verticals\" &&\r\n        data !== \"lastName\"\r\n    );\r\n\r\n    const totalCost = tempTrainerData\r\n      .map((name) => parseInt(trainerCardData[name]))\r\n      .filter((value) => !isNaN(value))\r\n      .reduce((prev, curr) => {\r\n        return prev + curr;\r\n      }, 0);\r\n\r\n    setPrice(totalCost);\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      {open ? (\r\n        <Modal\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          center\r\n          closeIcon={closeIconModal}\r\n          container={myRef.current}\r\n          styles={{\r\n            boaderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row m-0\" style={{ alignleft: \"auto\" }}>\r\n              <div className=\"card\">\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={\r\n                    image\r\n                      ? image\r\n                      : \"https://www.solidbackgrounds.com/images/2048x1536/2048x1536-powder-blue-web-solid-color-background.jpg\"\r\n                  }\r\n                  style={\r\n                    image\r\n                      ? { objectFit: \"cover\" }\r\n                      : {\r\n                          objectFit: \"cover\",\r\n                          backgroundColor: \"blue\",\r\n                        }\r\n                  }\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h3\r\n                    style={{\r\n                      textTransform: \"capitalize\",\r\n                    }}\r\n                  >\r\n                    {trainerCardData.firstName}\r\n                    &nbsp;\r\n                    {trainerCardData.lastName}\r\n                  </h3>\r\n                  <h6\r\n                    style={{\r\n                      color: \"#898989\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {trainerCardData.verticals !== undefined\r\n                      ? trainerCardData.verticals.map((item) => {\r\n                          return (\r\n                            <h6\r\n                              style={{\r\n                                margin: \"0 0.3em 0 0\",\r\n                              }}\r\n                            >\r\n                              {item}\r\n                              {\",\"}\r\n                            </h6>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </h6>\r\n\r\n                  <p>{trainerCardData.description}</p>\r\n                </div>\r\n                <div className=\"card-button\">\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"#53BFD2\",\r\n                    }}\r\n                  >\r\n                    book a session\r\n                    <p>\r\n                      from <span>${price || \"\"}</span>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}