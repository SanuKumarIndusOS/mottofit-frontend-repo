{"version":3,"sources":["component/UserDashBoard/UserDashboardCompontents/UserSession/index.js","pages/UserDashboard/Session/index.js","assets/files/TrainerDashboard/Message/Jenny.png","assets/files/TrainerDashboard/Message/Availability Icon.svg","assets/files/TrainerDashboard/Message/Location Icon.svg"],"names":["TabOne","tabname","tabData","prevData","cancelSessionApi","handleChange","restProps","useState","visible","setVisible","isLoading","setisLoading","className","style","textTransform","slice","map","data","index","Fragment","sessionDate","substr","datamonth","activity","trainerDetail","firstName","src","AvailabilityIcon","alt","getFormatDate","sessionStartTime","LocationIcon","Data","loc","sessionStatus","disabled","onClick","sessionId","payload","then","catch","handleCancel","id","trainingType","sessionData","location","label","city","value","trainingVenue","venue","preferedTrainingMode","sessionType","price","reduxData","bookingData","start_slot","end_slot","sessionEndTime","date","selectedTrainerData","submittedData","updateUserDetails","history","push","pathname","handleAddFriends","ArrowNext","prevValue","Jenny","month","heading","imgAva","avaTime","imgLoc","previousImg","prevHeading","prevDate","10","11","12","UserSession","connect","dispatch","bindActionCreators","userSession","cancelSession","props","React","upcomingSessions","pastSessions","onGoingSessions","userData","setUserData","useEffect","_userSession","window","scrollTo","error","Toast","type","message","defaultTab","tabFor","tabId","Main"],"mappings":"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","file":"static/js/66.847d5608.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-web-tabs\";\r\nimport \"react-web-tabs/dist/react-web-tabs.css\";\r\nimport AvailabilityIcon from \"../../../../assets/files/TrainerDashboard/Message/Availability Icon.svg\";\r\nimport LocationIcon from \"../../../../assets/files/TrainerDashboard/Message/Location Icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlueArrowButton from \"../../../common/BlueArrowButton\";\r\nimport Jenny from \"../../../../assets/files/TrainerDashboard/Message/Jenny.png\";\r\nimport ArrowNext from \"../../../../assets/files/SVG/Arrow Next.svg\";\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport { history } from \"helpers\";\r\nimport { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { userSession, cancelSession, updateUserDetails } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFormatDate } from \"service/helperFunctions\";\r\nimport { Toast } from \"../../../../service/toast\";\r\nconst UserSessionClass = (props) => {\r\n  const [userData, setUserData] = React.useState({\r\n    upcomingSessions: [],\r\n    pastSessions: [],\r\n    onGoingSessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    _userSession();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const _userSession = () => {\r\n    props\r\n      .userSession()\r\n      .then((data) => {\r\n        setUserData(data);\r\n      })\r\n      .catch((error) => {\r\n        Toast({ type: \"error\", message: error.message || \"Error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"outter_user_container\">\r\n      <div className=\"container\">\r\n        <div className=\"inner_user_container \">\r\n          <div className=\"userSession_heading\">\r\n            <h2>My Session</h2>\r\n          </div>\r\n          <div className=\"US_tabs_wrapper\">\r\n            <Tabs defaultTab=\"upcoming\">\r\n              <TabList>\r\n                {/* <Tab tabFor=\"overview\">Overview</Tab> */}\r\n                <Tab tabFor=\"upcoming\">Upcoming</Tab>\r\n                {/* <Tab tabFor=\"pass\">Motto pass</Tab> */}\r\n                <Tab tabFor=\"previous\">Previous</Tab>\r\n              </TabList>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"overview\">\r\n                  <TabOne\r\n                    tabname={\"Overview\"}\r\n                    tabData={userData.upcomingSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                    {...props}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"upcoming\">\r\n                  <TabOne\r\n                    tabname={\"Upcoming\"}\r\n                    tabData={userData.upcomingSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                    {...props}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"pass\">\r\n                  <TabOne\r\n                    tabname={\"Moto Pass\"}\r\n                    tabData={userData.pastSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                    {...props}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"previous\">\r\n                  <TabOne\r\n                    tabname={\"Previous\"}\r\n                    tabData={userData.pastSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                    {...props}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabOne = ({\r\n  tabname,\r\n  tabData,\r\n  prevData,\r\n  cancelSessionApi,\r\n  handleChange = {},\r\n  ...restProps\r\n}) => {\r\n  const [visible, setVisible] = useState([3]);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const setViewMore = () => {\r\n    setVisible((prevValue) => prevValue + 1);\r\n  };\r\n\r\n  const handleCancel = (sessionId) => {\r\n    let payload = {\r\n      sessionId,\r\n      sessionStatus: \"cancelled\",\r\n    };\r\n    setisLoading(true);\r\n    cancelSessionApi(payload)\r\n      .then(() => {\r\n        setisLoading(false);\r\n        handleChange();\r\n      })\r\n      .catch(() => setisLoading(false));\r\n  };\r\n\r\n  const handleAddFriends = (data) => {\r\n    // console.log(data);\r\n\r\n    let trainingType = \"\";\r\n\r\n    if (data.trainingType === \"social\") {\r\n      trainingType = \"SOCIAL SESSION\";\r\n    } else if (data.trainingType === \"class\") {\r\n      trainingType = \"CREATE A CLASS\";\r\n    } else if (data.trainingType === \"1on1\") {\r\n      trainingType = \"1 ON 1 TRAINING\";\r\n    }\r\n\r\n    let sessionData = {\r\n      location: { label: data?.city || \"\", value: data?.city || \"\" },\r\n      trainingVenue: {\r\n        label:\r\n          data.venue === \"clientLocation\"\r\n            ? \"Your Location\"\r\n            : \"Trainer's Location\",\r\n        value: data?.venue || \"\",\r\n      },\r\n      preferedTrainingMode: data?.sessionType || \"\",\r\n      price: data.price || \"\",\r\n      sessionType: trainingType || \"\",\r\n      trainingType: {\r\n        label: data?.activity || \"\",\r\n        value: data?.activity || \"\",\r\n      },\r\n    };\r\n\r\n    let bookingData = {\r\n      start_slot: data.sessionStartTime,\r\n      end_slot: data.sessionEndTime,\r\n      date: data.sessionDate,\r\n    };\r\n\r\n    let selectedTrainerData = {\r\n      ...data.trainerDetail,\r\n    };\r\n    let reduxData = {\r\n      bookingData,\r\n      sessionData,\r\n      selectedTrainerData,\r\n      submittedData: { ...data },\r\n    };\r\n\r\n    restProps?.updateUserDetails(reduxData);\r\n\r\n    // console.log(reduxData);\r\n\r\n    history.push({\r\n      pathname: \"/user/with-friends\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabPanel_overview\">\r\n      <div className=\"tabPanel_overview_left\">\r\n        <div className=\"TP_overview_wrapper\">\r\n          <h3 style={{ textTransform: \"capitalize\" }}>{tabname} Sessions</h3>\r\n          <div className=\"TP_US_overview\">\r\n            <div className=\"TP_US_overview_inner\">\r\n              {tabData.slice(0, visible).map((data, index) => {\r\n                // console.log(data, \"datadata\");\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <div className=\"TP_upcomeSession_overview\">\r\n                      <div className=\"TP_USession_dates\">\r\n                        <h4>\r\n                          {data.sessionDate.substr(8, 2)}\r\n                          <span>\r\n                            {datamonth[data.sessionDate.substr(5, 2)]}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                      <div className=\"TP_USession_data\">\r\n                        <h2\r\n                          style={{\r\n                            textTransform: \"capitalize\",\r\n                          }}\r\n                        >\r\n                          {data.activity}&nbsp;\r\n                          <span\r\n                            style={{\r\n                              textTransform: \"lowerCase\",\r\n                            }}\r\n                          >\r\n                            with\r\n                          </span>{\" \"}\r\n                          &nbsp;\r\n                          <h2\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            {data.trainerDetail.firstName}\r\n                          </h2>\r\n                        </h2>\r\n                        <div className=\"TP_USession_data_icons\">\r\n                          <h5>\r\n                            <img src={AvailabilityIcon} alt=\"icon\" />\r\n                            {getFormatDate(data.sessionStartTime, \"LT\", true)}\r\n                          </h5>\r\n                          <h5>\r\n                            <img src={LocationIcon} alt=\"icon\" />\r\n                            {Data[0].loc}\r\n                          </h5>\r\n                        </div>\r\n                        <div className=\"TP_USession_data_buttons\">\r\n                          <button>Reschedule</button>\r\n                          {/* {tabname !== \"Previous\" && (\r\n                            <> */}\r\n                          {data.sessionStatus !== \"cancelled\" ? (\r\n                            <>\r\n                              {tabname !== \"Previous\" ? (\r\n                                <button\r\n                                  disabled={isLoading}\r\n                                  onClick={() => handleCancel(data.id)}\r\n                                >\r\n                                  Cancel\r\n                                </button>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <button className=\"text-danger\" disabled={true}>\r\n                              Cancelled\r\n                            </button>\r\n                          )}\r\n                          {/* </>\r\n                          )} */}\r\n\r\n                          {data.trainingType !== \"1on1\" && (\r\n                            <div className=\"button_boarder\">\r\n                              <button onClick={() => handleAddFriends(data)}>\r\n                                Add Friends{\" \"}\r\n                              </button>\r\n                              <img src={ArrowNext} alt=\"icon\" />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </div>\r\n            <button onClick={setViewMore} className=\"viewMoreButton\">\r\n              View all Session <BlueHoverButton />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"tabPanel_overview_right\">\r\n        <div className=\"TB_overview_right\">\r\n          {/* <div className=\"TB_overview_row_one\">\r\n            <div className=\"row_one_data\">\r\n              <h2>Want to Do More for Less?</h2>\r\n              <p>\r\n                Save money by purchasing multiple sessions at once, eligible for\r\n                use within 60 days of the purchase date.\r\n              </p>\r\n              <Link to=\"/\">\r\n                Get A pass <BlueArrowButton />{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div> */}\r\n          <div className=\"TB_overview_row_two\">\r\n            <div className=\"row_two_data\">\r\n              <h2>PREVIOUS SESSIONS</h2>\r\n              <div className=\"row_two_scroll\">\r\n                {prevData.map((data, index) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"row_previous_data\" key={index}>\r\n                        <div className=\"row_previous_avater\">\r\n                          <img src={Jenny} alt=\"profile\" />\r\n                        </div>\r\n                        <div className=\"row_previous_header\">\r\n                          <h2\r\n                            className=\"d-flex flex-wrap\"\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            {data.activity}&nbsp;\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"lowerCase\",\r\n                              }}\r\n                            >\r\n                              with\r\n                            </span>{\" \"}\r\n                            &nbsp;\r\n                            <h2\r\n                              className=\"d-flex flex-wrap\"\r\n                              style={{\r\n                                textTransform: \"capitalize\",\r\n                              }}\r\n                            >\r\n                              {data.trainerDetail.firstName}\r\n                            </h2>\r\n                          </h2>\r\n                          {/* <h2>{`${data.activity} with ${data.trainerDetail[\"firstName\"]}`}</h2> */}\r\n                          <p>{`${data.sessionDate.substr(8, 2)} ${\r\n                            datamonth[data.sessionDate.substr(5, 2)]\r\n                          } ${data.sessionDate.substr(0, 4)}`}</p>\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Data = [\r\n  {\r\n    date: \"14\",\r\n    month: \"Feb\",\r\n    heading: \"Strength & HIIT with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Kane\",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"25\",\r\n    month: \"May\",\r\n    heading: \"Yoga with Kane\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with John Doe\",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"20\",\r\n    month: \"Apr\",\r\n    heading: \"Boxing with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Kane \",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"20\",\r\n    month: \"Apr\",\r\n    heading: \"Boxing with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Ananaya \",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"20\",\r\n    month: \"Apr\",\r\n    heading: \"Boxing with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Kane \",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n];\r\n\r\nconst datamonth = {\r\n  \"01\": \"Jan\",\r\n  \"02\": \"Feb\",\r\n  \"03\": \"Mar\",\r\n  \"04\": \"Apr\",\r\n  \"05\": \"May\",\r\n  \"06\": \"Jun\",\r\n  \"07\": \"Jul\",\r\n  \"08\": \"Aug\",\r\n  \"09\": \"Sep\",\r\n  10: \"Oct\",\r\n  11: \"Nov\",\r\n  12: \"Dec\",\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      userSession,\r\n      cancelSession,\r\n      updateUserDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst UserSession = connect(null, mapDispatchToProps)(UserSessionClass);\r\n\r\nexport default UserSession;\r\n","import React from \"react\";\r\nimport UserSession from \"component/UserDashBoard/UserDashboardCompontents/UserSession\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div>\r\n      {/* Banner  */}\r\n      <UserSession />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Jenny.c50273b9.png\";","export default __webpack_public_path__ + \"static/media/Availability Icon.ad0517cb.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.cbb0b32d.svg\";"],"sourceRoot":""}