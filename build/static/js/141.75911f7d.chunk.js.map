{"version":3,"sources":["action/messagingAct.js"],"names":["updatePersonTyping","payload","dispatch","getState","typingMembers","messagingDetails","type","identity","participant","state","tempMembers","includes","MessagingActionType","UPDATE_MESSAGING_DETAILS","filter","person"],"mappings":"iLAEaA,EAAqB,SAACC,GAAD,OAAa,SAACC,EAAUC,GACxD,IAAQC,EAAkBD,IAAWE,iBAA7BD,cACAE,EAAsBL,EAAtBK,KACFC,EADwBN,EAAhBO,YACiBC,MAAzBF,SACFG,EAAcN,EAEL,kBAATE,EACGF,EAAcO,SAASJ,KAC1BG,EAAW,sBAAON,GAAP,CAAsBG,IAEjCL,EAAS,CACPI,KAAMM,sBAAoBC,yBAC1BZ,QAAS,CAAEG,cAAc,YAAKM,OAGhB,gBAATJ,GACLF,EAAcO,SAASJ,KACzBG,EAAc,YAAIN,GAAeU,QAAO,SAACC,GAAD,OAAYA,IAAWR,KAC/DL,EAAS,CACPI,KAAMM,sBAAoBC,yBAC1BZ,QAAS,CAAEG,cAAc,YAAKM","file":"static/js/141.75911f7d.chunk.js","sourcesContent":["import { MessagingActionType } from \"../service/actionType\";\r\n\r\nexport const updatePersonTyping = (payload) => (dispatch, getState) => {\r\n  const { typingMembers } = getState().messagingDetails;\r\n  const { type, participant } = payload;\r\n  let { identity } = participant.state;\r\n  let tempMembers = typingMembers;\r\n\r\n  if (type === \"typingStarted\") {\r\n    if (!typingMembers.includes(identity)) {\r\n      tempMembers = [...typingMembers, identity];\r\n\r\n      dispatch({\r\n        type: MessagingActionType.UPDATE_MESSAGING_DETAILS,\r\n        payload: { typingMembers: [...tempMembers] },\r\n      });\r\n    }\r\n  } else if (type === \"typingEnded\") {\r\n    if (typingMembers.includes(identity)) {\r\n      tempMembers = [...typingMembers].filter((person) => person !== identity);\r\n      dispatch({\r\n        type: MessagingActionType.UPDATE_MESSAGING_DETAILS,\r\n        payload: { typingMembers: [...tempMembers] },\r\n      });\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}