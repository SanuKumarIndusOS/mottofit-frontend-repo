{"version":3,"sources":["component/TrainerOnBoard/CommonTrackerBar/index.js","component/TrainerOnBoard/TrainerAboutYou/index.js","component/TrainerOnBoard/TrainerAvailability/index.js","pages/Trainer/Avaliability/index.js","assets/files/SVG/Arrow Back.svg","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Location Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Arrow 1.svg","assets/files/SVG/Arrow_active.svg","assets/files/SVG/Person Icon.svg","assets/files/SVG/Person_2.svg","assets/files/SVG/Schedule Slot Icon.svg","assets/files/SVG/Schedule_slot_active.svg","assets/files/SVG/Training Icon.svg","assets/files/SVG/Training_active.svg","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js"],"names":["TrainerTracker","PeopleBarIcon","TrainerBarIcon","ScheduleBarIcon","Arrow_one","Arrow_two","ABout_you_text","Training_background_text","Availability_text","console","log","window","location","pathname","includes","src","People_active","alt","Trainer_inactive","Schedule_inactive","Arrow_inactive","className","Trainer_active","Arrow_active","Schedule_active","locations","label","value","gender","AboutTrainer","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","useForm","register","errors","handleSubmit","useState","dob","email","phone","websiteURL","instagram","firstName","aboutTrainerData","setAboutTrainerData","error","useEffect","Object","keys","length","tempData","websiteLink","instaHandle","headers","Authorization","localStorage","getItem","axios","get","then","placeholder","type","name","style","textTransform","onChange","e","target","title","list","message","ref","required","disableDropdown","disableAreaCodes","countryCodeEditable","inputProps","Web","Instagram","onClick","storeData","history","push","WaterMark","CyanRadio","withStyles","root","color","cyan","checked","props","closeIcon","CloseIcon","TrainerAvailability","useLocation","React","selectedValue","setSelectedValue","selectedOneValue","setSelectedOneValue","open","setOpen","myRef","useRef","hoursPerWeek","preferedTrainingMode","trainingFacilityLocation","willingToTravel","servicableLocation","trainerAvailabilityData","setTrainerAvailabilityData","handleChange","event","handleOneChange","handleTrianingData","filter","prefered","trainingFacility","ArrowBack","to","onSubmit","preventDefault","DOB","instagramProfile","facebookProfile","linkedInProfile","referalCode","areaOfExpertise","trainingAvailability","currentExperience","previousExperience","map","job","orgnization","years","workMode","jobTitle","yearsOfExperience","trainingProcess","profilePicture","interestInMotto","clientAssessment","description","myMotto","images","identityInfromation","identityType","identityNumber","identityImg","insuranceInformation","stripeId","serviceableCity","youtubeLink","certification","certificate","certificateName","certfiedYear","year","oneOnOnePricing","inPersonAtClientLocation","inPersonAtTrainerLocation","virtualSession","passRatefor3Session","passRatefor10Session","socialSessionPricing","inPeronAtClientLocationfor2People","inPeronAtClientLocationfor3People","inPeronAtClientLocationfor4People","inPeronAtTrainerLocationfor2People","inPeronAtTrainerLocationfor3People","inPeronAtTrainerLocationfor4People","virtualSessionfor2People","virtualSessionfor3People","virtualSessionfor4People","classSessionPricing","inPersonAtclientLocationfor15People","inPersonAttrainerLocationfor15People","virtualAtclientLocationfor15People","virtualAttrainerLocationfor15People","virtualSessionfor15People","updateTrainerAvailabilityApi","TrainerApi","body","api","catch","onClose","center","container","current","styles","boaderRadius","textAlign","height","width","padding","TrainerAvaliabilitySection","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/28.b13ebc41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport People_active from \"../../../assets/files/SVG/Person Icon.svg\";\r\nimport People_inactive from \"../../../assets/files/SVG/Person_2.svg\";\r\nimport Trainer_active from \"../../../assets/files/SVG/Training_active.svg\";\r\nimport Trainer_inactive from \"../../../assets/files/SVG/Training Icon.svg\";\r\n\r\nimport Schedule_active from \"../../../assets/files/SVG/Schedule_slot_active.svg\";\r\nimport Schedule_inactive from \"../../../assets/files/SVG/Schedule Slot Icon.svg\";\r\nimport Arrow_inactive from \"../../../assets/files/SVG/Arrow_active.svg\";\r\nimport Arrow_active from \"../../../assets/files/SVG/Arrow 1.svg\";\r\n\r\nconst TrainerTracker = () => {\r\n    // console.log(this.props.location)\r\n\r\n    const log = () => {\r\n        console.log(\"hihi\", window.location.pathname);\r\n    };\r\n\r\n    log();\r\n\r\n    let PeopleBarIcon;\r\n    let TrainerBarIcon;\r\n    let ScheduleBarIcon;\r\n    let Arrow_one;\r\n    let Arrow_two;\r\n    let ABout_you_text;\r\n    let Training_background_text;\r\n    let Availability_text;\r\n\r\n    //PeopleBarIcon\r\n    if (window.location.pathname.includes(\"/about\")) {\r\n        PeopleBarIcon = <img src={People_active} alt=\"icon\" />;\r\n        TrainerBarIcon = <img src={Trainer_inactive} alt=\"icon\" />;\r\n        ScheduleBarIcon = <img src={Schedule_inactive} alt=\"icon\" />;\r\n        Arrow_one = <img src={Arrow_inactive} alt=\"icon\" />;\r\n        Arrow_two = <img src={Arrow_inactive} alt=\"icon\" />;\r\n        ABout_you_text = <p className=\"active\">About you</p>;\r\n        Training_background_text = (\r\n            <p className=\"inactive\">Training background</p>\r\n        );\r\n        Availability_text = <p className=\"inactive\">Availability</p>;\r\n    }\r\n\r\n    //TrainerBarIcon\r\n    if (window.location.pathname.includes(\"/background\")) {\r\n        PeopleBarIcon = <img src={People_active} alt=\"icon\" />;\r\n        TrainerBarIcon = <img src={Trainer_active} alt=\"icon\" />;\r\n        ScheduleBarIcon = <img src={Schedule_inactive} alt=\"icon\" />;\r\n        Arrow_one = <img src={Arrow_active} alt=\"icon\" />;\r\n        Arrow_two = <img src={Arrow_inactive} alt=\"icon\" />;\r\n        ABout_you_text = <p className=\"completed\">About you</p>;\r\n        Training_background_text = (\r\n            <p className=\"active\">Training background</p>\r\n        );\r\n        Availability_text = <p className=\"inactive\">Availability</p>;\r\n    }\r\n\r\n    //ScheduleBarIcon\r\n    if (window.location.pathname.includes(\"/availability\")) {\r\n        PeopleBarIcon = <img src={People_active} alt=\"icon\" />;\r\n        TrainerBarIcon = <img src={Trainer_active} alt=\"icon\" />;\r\n        ScheduleBarIcon = <img src={Schedule_active} alt=\"icon\" />;\r\n        Arrow_one = <img src={Arrow_active} alt=\"icon\" />;\r\n        Arrow_two = <img src={Arrow_active} alt=\"icon\" />;\r\n        ABout_you_text = <p className=\"completed\">About you</p>;\r\n        Training_background_text = (\r\n            <p className=\"completed\">Training background</p>\r\n        );\r\n        Availability_text = <p className=\"active\">Availability</p>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tracker_main\">\r\n                <div className=\"wrapper_item container\">\r\n                    <div className=\"items\">\r\n                        {PeopleBarIcon}\r\n                        {ABout_you_text}\r\n                    </div>\r\n                    {Arrow_one}\r\n                    <div className=\"items\">\r\n                        {TrainerBarIcon}\r\n                        {Training_background_text}\r\n                    </div>\r\n                    {Arrow_two}\r\n                    <div className=\"items\">\r\n                        {ScheduleBarIcon}\r\n                        {Availability_text}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TrainerTracker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Instagram from \"../../../assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"../../../assets/files/SVG/Web Icon.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import validation from \"../Validation/validation\";\r\n// import 'react-phone-number-input/style.css'\r\n// import PhoneInput from 'react-phone-number-input'\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"helpers\";\r\nimport axios from \"axios\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import useForm from \"./useForm\";\r\n// import validateInfo from \"./validation\";\r\n\r\n// import { Multiselect } from \"multiselect-react-dropdown\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import Select from \"react-select\";\r\nconst locations = [\r\n    {\r\n        label: \"New York City\",\r\n        value: \"New York City\",\r\n    },\r\n    {\r\n        label: \"Miami\",\r\n        value: \"Miami\",\r\n    },\r\n    {\r\n        label: \"Hamptons\",\r\n        value: \"Hamptons\",\r\n    },\r\n    {\r\n        label: \"Palm Beach\",\r\n        value: \"Palm Beach\",\r\n    },\r\n];\r\n\r\nconst gender = [\r\n    {\r\n        label: \"Male\",\r\n        value: \"male\",\r\n    },\r\n    {\r\n        label: \"Female\",\r\n        value: \"female\",\r\n    },\r\n];\r\nconst AboutTrainerFC = ({\r\n    updateTrainerDetails,\r\n    details,\r\n    trainerPersonalData,\r\n    // submitForm,\r\n}) => {\r\n    //   const [location, setLocation] = useState(\"\");\r\n    //   const [dob, setDob] = useState(0 - 0 - 0);\r\n    //   const [email, setEmail] = useState(\"\");\r\n    //   const [gender, setGender] = useState(\"\");\r\n    //   const [phone, setPhone] = useState(\"\");\r\n    //   const [websiteURL, setWebsiteURL] = useState(\"\");\r\n    //   const [instagram, setInstagram] = useState(\"\");\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n    // const {\r\n    //     aboutTrainerData,\r\n    //     handleFormSubmit,\r\n    //     error,\r\n    //     setAboutTrainerData,\r\n    //     // dataSubmit,\r\n    // } = useForm(validateInfo, submitForm);\r\n    const [aboutTrainerData, setAboutTrainerData] = useState({\r\n        location: \"\",\r\n        dob: \"\",\r\n        email: \"\",\r\n        gender: \"\",\r\n        phone: \"\",\r\n        websiteURL: \"\",\r\n        instagram: \"\",\r\n        firstName: \"\",\r\n    });\r\n    const [error, setError] = useState({});\r\n\r\n    // const history = useHistory();\r\n\r\n    const handleTrainerBackground = () => {\r\n        // history.push(\"/trainer/background\");\r\n        // console.log(aboutTrainerData);\r\n\r\n        const storeData = {\r\n            details: {\r\n                ...details,\r\n                firstName: aboutTrainerData.firstName,\r\n                dob: aboutTrainerData.dob,\r\n                email: aboutTrainerData.email,\r\n                gender: aboutTrainerData.gender,\r\n                phone: aboutTrainerData.phone,\r\n                location: aboutTrainerData.location,\r\n                websiteLink: aboutTrainerData.websiteURL,\r\n                instaHandle: aboutTrainerData.instagram,\r\n            },\r\n        };\r\n        console.log(storeData);\r\n\r\n        history.push(`/trainer/background`);\r\n        updateTrainerDetails(storeData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(details).length > 3) {\r\n            let tempData = {\r\n                location: details.location,\r\n                dob: details.dob,\r\n                email: details.email,\r\n                gender: details.gender,\r\n                phone: details.phone,\r\n                websiteURL: details.websiteLink,\r\n                instagram: details.instaHandle,\r\n                firstName: details.firstName,\r\n            };\r\n            setAboutTrainerData(tempData);\r\n        }\r\n\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"token\"),\r\n        };\r\n\r\n        axios\r\n            .get(\"http://doodlebluelive.com:2307/v1/trainer\", { headers })\r\n            .then((data) => {\r\n                console.log(data[\"data\"][\"data\"][\"phoneNumber\"]);\r\n\r\n                // prepopulate\r\n                setAboutTrainerData({\r\n                    ...aboutTrainerData,\r\n                    phone: data[\"data\"][\"data\"][\"phoneNumber\"],\r\n                    email: data[\"data\"][\"data\"][\"email\"],\r\n                    firstName: data[\"data\"][\"data\"][\"firstName\"],\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container main\">\r\n                <div className=\"wrapper_about\">\r\n                    <h2>Tell us a little bit about you</h2>\r\n                    {/* <p>\r\n                        *Lorem Ipsum is simply dummy text of the printing and\r\n                        typesetting industry. Lorem ipsum has been the. *All\r\n                        these fields are mandatory.{\" \"}\r\n                    </p> */}\r\n                    <br></br>\r\n                    <div className=\"outter_form\">\r\n                        <form\r\n                            className=\"wrapper_inputs\"\r\n                            // onSubmit={handleFormSubmit}\r\n                        >\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Name*</label>\r\n                                <input\r\n                                    placeholder=\"Name\"\r\n                                    type=\"name\"\r\n                                    name=\"name\"\r\n                                    style={{ textTransform: \"capitalize\" }}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            firstName: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    value={aboutTrainerData.firstName}\r\n                                    name=\"firstName\"\r\n                                />\r\n                                {error.firstName && (\r\n                                    <span>{error.firstName}</span>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label className=\"bg_down\">Location*</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <Dropdown\r\n                                        className=\"custom_dropdown\"\r\n                                        title=\"Select Location\"\r\n                                        list={locations}\r\n                                        value={aboutTrainerData.location}\r\n                                        onChange={(e) => {\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                location: e.value,\r\n                                            });\r\n                                        }}\r\n                                        name=\"location\"\r\n                                    />\r\n                                </div>\r\n                                {errors.dob && (\r\n                                    <span>{errors.dob.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Date of Birth*</label>\r\n                                {/* <DatePicker\r\n                                    value={aboutTrainerData.dob}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            dob: e.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"dob\"\r\n                                    ref={register({\r\n                                        required:\r\n                                            \"Mandatory fields cannot be empty\",\r\n                                    })}\r\n                                /> */}\r\n                                <input\r\n                                    placeholder=\"MM/DD/YYYY\"\r\n                                    type=\"date\"\r\n                                    value={aboutTrainerData.dob}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            dob: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"dob\"\r\n                                    ref={register({\r\n                                        required:\r\n                                            \"Mandatory fields cannot be empty\",\r\n                                    })}\r\n                                />\r\n                                {errors.dob && (\r\n                                    <span>{errors.dob.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Gender*</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <Dropdown\r\n                                        className=\"custom_dropdown\"\r\n                                        title=\"Select Gender\"\r\n                                        list={gender}\r\n                                        value={aboutTrainerData.gender}\r\n                                        onChange={(e) => {\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                gender: e.value,\r\n                                            });\r\n                                        }}\r\n                                        name=\"gender\"\r\n                                        ref={register({\r\n                                            required:\r\n                                                \"Mandatory fields cannot be empty\",\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                {/* {error.gender && (\r\n                                    <span>{error.gender.message}</span>\r\n                                )} */}\r\n                                {errors.dob && (\r\n                                    <span>{errors.dob.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Email*</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    value={aboutTrainerData.email}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            email: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"email\"\r\n                                />\r\n                                {/* {error.email && (<span>{error.email}</span>)} */}\r\n\r\n                                {/* {errors.email?.type === \"required\" && (\r\n                                    <span>This input is required</span>\r\n                                )}\r\n                                {errors.email?.type === \"minLength\" && (\r\n                                    <span>\r\n                                        This field should contain greater then 8\r\n                                        charater\r\n                                    </span>\r\n                                )}\r\n                                {errors.email?.type === \"pattern\" && (\r\n                                    <span>\r\n                                        Please enter a valid email address\r\n                                    </span>\r\n                                )} */}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Phone*</label>\r\n                                {/* <input\r\n                                    placeholder=\"Phone Number\"\r\n                                    type=\"phone\"\r\n                                    value={aboutTrainerData.phone}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            phone: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"phone\"\r\n                                    ref={register({\r\n                                        pattern: /^[0-9]*$/i,\r\n                                        required: true,\r\n                                        minLength: 10,\r\n                                    })}\r\n                                /> */}\r\n                                <ReactPhoneInput\r\n                                    type=\"phone\"\r\n                                    disableDropdown\r\n                                    disableAreaCodes\r\n                                    countryCodeEditable={false}\r\n                                    value={aboutTrainerData.phone}\r\n                                    placeholder=\"Phone Number\"\r\n                                    // country=\"us\"\r\n                                    inputProps={{\r\n                                        name: \"phone\",\r\n                                    }}\r\n                                    name=\"phoneNumber\"\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            phone: e,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                {/* {!aboutTrainerData.phone && (\r\n                  <span>This input is required</span>\r\n                )} */}\r\n                                {aboutTrainerData.phone &&\r\n                                    aboutTrainerData.phone.length < 11 && (\r\n                                        <span>\r\n                                            Phone Number should contain 10\r\n                                            digits\r\n                                        </span>\r\n                                    )}\r\n                                {/* {errors.phone?.type === \"required\" && (\r\n                                    <span>This input is required</span>\r\n                                )}\r\n                                {errors.phone?.type === \"minLength\" && (\r\n                                    <span>\r\n                                        Phone Number should contain 10 digits\r\n                                    </span>\r\n                                )}\r\n                                {errors.phone?.type === \"pattern\" && (\r\n                                    <span>\r\n                                        Please enter a valid phone number\r\n                                    </span>\r\n                                )} */}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Website</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <input\r\n                                        placeholder=\"Add your website\"\r\n                                        type=\"text\"\r\n                                        value={aboutTrainerData.websiteURL}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                websiteURL: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <img src={Web} alt=\"icon\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Instagram</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <input\r\n                                        placeholder=\"Add your Instagram Handle\"\r\n                                        type=\"text\"\r\n                                        value={aboutTrainerData.instagram}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                instagram: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <img src={Instagram} alt=\"icon\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"submit_button\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    // to={{\r\n                                    //     pathname: \"/trainer/background\",\r\n                                    //     state: aboutTrainerData,\r\n                                    // }}\r\n                                    // onClick={handleTrainerBackground}\r\n\r\n                                    //react hook form\r\n                                    onClick={handleSubmit(\r\n                                        handleTrainerBackground\r\n                                    )}\r\n                                >\r\n                                    Continue\r\n                                    <ArrowHoverBlacked />\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <img\r\n                        src={WaterMark}\r\n                        alt=\"icon\"\r\n                        className=\"about_watermark\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst AboutTrainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AboutTrainerFC);\r\n\r\nexport default AboutTrainer;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport \"./model.scss\";\r\nimport CloseIcon from \"../../../assets/files/FindTrainer/Cross.svg\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { history } from \"helpers\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport Location from \"../../../assets/files/SVG/Location Icon.svg\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTrainerDetails } from \"action/trainerAct\";\r\n\r\n// hoursPerWeek\r\n// preferedTrainingMode\r\n// serviceableCity\r\n// servicableLocation\r\n// trainingFacilityLocation\r\n// willingToTravel\r\n\r\nconst CyanRadio = withStyles({\r\n    root: {\r\n        \"&$checked\": {\r\n            color: cyan[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst TrainerAvailabilityFC = ({ updateTrainerDetails, details }) => {\r\n    const location = useLocation();\r\n    const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n    const [selectedOneValue, setSelectedOneValue] = React.useState(\"\");\r\n\r\n    const [trainerAbout, setTrainerAbout] = React.useState({});\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const myRef = useRef(null);\r\n    // const [openClassModel, setOpenClassModel] = useState(false);\r\n\r\n    const [trainerAvailabilityData, setTrainerAvailabilityData] =\r\n        React.useState({\r\n            hoursPerWeek: \"\",\r\n            preferedTrainingMode: [],\r\n            trainingFacilityLocation: \"\",\r\n            willingToTravel: \"0\",\r\n            servicableLocation: \"\",\r\n        });\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleOneChange = (event) => {\r\n        setSelectedOneValue(event.target.value);\r\n\r\n        setTrainerAvailabilityData({\r\n            ...trainerAvailabilityData,\r\n            willingToTravel: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(JSON.parse(localStorage.getItem(\"user-info\"))[\"token\"]);\r\n\r\n        const storeData = {\r\n            details: {\r\n                ...details,\r\n                hoursPerWeek: trainerAvailabilityData.hoursPerWeek,\r\n                preferedTrainingMode:\r\n                    trainerAvailabilityData.preferedTrainingMode,\r\n                trainingFacilityLocation:\r\n                    trainerAvailabilityData.trainingFacilityLocation,\r\n                willingToTravel: trainerAvailabilityData.willingToTravel,\r\n                servicableLocation: trainerAvailabilityData.servicableLocation,\r\n            },\r\n        };\r\n\r\n        updateTrainerDetails(storeData);\r\n\r\n        let data = {\r\n            location: details.location,\r\n            DOB: details.dob,\r\n            gender: details.gender,\r\n            instagramProfile: details.instaHandle,\r\n            facebookProfile: \"https://facebook.com/kljdhpersonaltrainer\",\r\n            linkedInProfile: \"https://linkedin.com/kljdhpersonaltrainer\",\r\n            referalCode: \"gh678lJJ\",\r\n            areaOfExpertise: details.areaOfExpertise,\r\n            trainingAvailability: \"Fulltime\",\r\n            preferedTrainingMode: trainerAvailabilityData.preferedTrainingMode,\r\n            willingToTravel: trainerAvailabilityData.willingToTravel,\r\n            servicableLocation: trainerAvailabilityData.servicableLocation,\r\n            currentExperience: details.currentExperience,\r\n            previousExperience: details.previousExperience.map(\r\n                ({ job, orgnization, years }) => ({\r\n                    workMode: orgnization,\r\n                    jobTitle: job,\r\n                    yearsOfExperience: `${years}`,\r\n                })\r\n            ),\r\n            trainingProcess: details.trainingProcess,\r\n            profilePicture: \"img location\",\r\n            interestInMotto: details.interestInMotto,\r\n            clientAssessment: details.clientAssessment,\r\n            trainingFacility: selectedValue === \"a\",\r\n            trainingFacilityLocation: [\r\n                trainerAvailabilityData.trainingFacilityLocation,\r\n            ],\r\n            description: \"\",\r\n            myMotto: \"\",\r\n            images: [\"img Location\"],\r\n            identityInfromation: {\r\n                identityType: \"\",\r\n                identityNumber: \"\",\r\n                identityImg: \"S3 location\",\r\n            },\r\n            insuranceInformation: {},\r\n            stripeId: \"\",\r\n            hoursPerWeek: trainerAvailabilityData.hoursPerWeek,\r\n            serviceableCity: trainerAvailabilityData.servicableLocation,\r\n            websiteLink: details.websiteLink,\r\n            youtubeLink: \"jfjdld\",\r\n            certification: details.certification.map(\r\n                ({ certificate, year }) => ({\r\n                    certificateName: certificate,\r\n                    certfiedYear: year,\r\n                    certification: certificate,\r\n                })\r\n            ),\r\n            oneOnOnePricing: {\r\n                inPersonAtClientLocation: \"125$\",\r\n                inPersonAtTrainerLocation: \"130$\",\r\n                virtualSession: \"120$\",\r\n                passRatefor3Session: \"100$\",\r\n                passRatefor10Session: \"150$\",\r\n            },\r\n            socialSessionPricing: {\r\n                inPeronAtClientLocationfor2People: \"$123\",\r\n                inPeronAtClientLocationfor3People: \"$123\",\r\n                inPeronAtClientLocationfor4People: \"$123\",\r\n                inPeronAtTrainerLocationfor2People: \"$123\",\r\n                inPeronAtTrainerLocationfor3People: \"$123\",\r\n                inPeronAtTrainerLocationfor4People: \"$123\",\r\n                virtualSessionfor2People: \"$130\",\r\n                virtualSessionfor3People: \"$130\",\r\n                virtualSessionfor4People: \"$130\",\r\n            },\r\n            classSessionPricing: {\r\n                inPersonAtclientLocationfor15People: \"$300\",\r\n                inPersonAttrainerLocationfor15People: \"$290\",\r\n                virtualAtclientLocationfor15People: \"$300\",\r\n                virtualAttrainerLocationfor15People: \"$290\",\r\n                virtualSessionfor15People: \"$130\",\r\n            },\r\n        };\r\n\r\n        const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n        updateTrainerAvailabilityApi.body = data;\r\n\r\n        api({ ...updateTrainerAvailabilityApi })\r\n            .then(() => {\r\n                setOpen(true);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n                setOpen(false);\r\n            });\r\n\r\n        // fetch(\"http://doodlebluelive.com:2307/v1/trainer\", {\r\n        //   method: \"PUT\", // or 'PUT'\r\n        //   headers: {\r\n        //     \"Content-Type\": \"application/json\",\r\n        //     token: JSON.parse(localStorage.getItem(\"user-info\"))[\"token\"],\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n        //   .then((response) => response.json())\r\n        //   .then((data) => {\r\n        //     console.log(\"Success:\", data);\r\n        //     if (data === \"200\") {\r\n        //       setOpen(true);\r\n        //     } else {\r\n        //       console.log(\"errro\");\r\n        //     }\r\n        //   })\r\n    };\r\n\r\n    const handleTrianingData = (e, type) => {\r\n        let tempData = [...trainerAvailabilityData.preferedTrainingMode];\r\n\r\n        if (tempData.includes(type)) {\r\n            tempData = tempData.filter((prefered) => prefered !== type);\r\n        } else {\r\n            tempData = [...tempData, type];\r\n        }\r\n        setTrainerAvailabilityData({\r\n            ...trainerAvailabilityData,\r\n            preferedTrainingMode: tempData,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(details).length > 3) {\r\n            const tempData = {\r\n                hoursPerWeek: details.hoursPerWeek,\r\n                preferedTrainingMode: details.preferedTrainingMode,\r\n                trainingFacilityLocation: details.trainingFacilityLocation,\r\n                willingToTravel: details.willingToTravel,\r\n                servicableLocation: details.servicableLocation,\r\n            };\r\n\r\n            details.trainingFacility &&\r\n                setSelectedValue(details.trainingFacility ? \"a\" : \"b\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"link_wrapper\">\r\n                    <img src={ArrowBack} alt=\"icon\" />\r\n                    <div className=\"inner_links\">\r\n                        <Link to=\"/trainer/background\">\r\n                            Back to Trainer Background\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main_wrappercontainer\">\r\n                    <div className=\"wrapper_inneritem\">\r\n                        <h1>Highlight your availability on the platform</h1>\r\n                        <p>\r\n                            {/* Lorem Ipsum is simply dummy text of the printing and\r\n                            typesetting industry. Lorem ipsum has been the\r\n                            industry’s standard dummy text. */}\r\n                        </p>\r\n                        {/* <br></br> */}\r\n                        <form\r\n                            className=\"container\"\r\n                            onSubmit={(e) => e.preventDefault()}\r\n                        >\r\n                            <div className=\"content_wrapper\">\r\n                                <div className=\"item_1\">\r\n                                    <h6>\r\n                                        How many hours will you list on Motto?\r\n                                    </h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"10 Hours/Week\"\r\n                                            value={\r\n                                                trainerAvailabilityData.hoursPerWeek\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    hoursPerWeek:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item_2\">\r\n                                    <h6>Where are you willing to train?</h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <button\r\n                                            onClick={(e) =>\r\n                                                handleTrianingData(e, \"Online\")\r\n                                            }\r\n                                            className={`${\r\n                                                trainerAvailabilityData?.preferedTrainingMode?.includes(\r\n                                                    \"Online\"\r\n                                                )\r\n                                                    ? \"active\"\r\n                                                    : \"\"\r\n                                            }`}\r\n                                            name=\"trainingLocation\"\r\n                                        >\r\n                                            Virtual\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={(e) =>\r\n                                                handleTrianingData(\r\n                                                    e,\r\n                                                    \"inperson\"\r\n                                                )\r\n                                            }\r\n                                            className={`${\r\n                                                trainerAvailabilityData?.preferedTrainingMode?.includes(\r\n                                                    \"inperson\"\r\n                                                )\r\n                                                    ? \"active\"\r\n                                                    : \"\"\r\n                                            }`}\r\n                                            name=\"trainingLocation\"\r\n                                        >\r\n                                            In Person\r\n                                        </button>\r\n                                        {/* <button>Outdoors</button> */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item_3\">\r\n                                    <h6>\r\n                                        Do you have a facility or location where\r\n                                        you will train clients?\r\n                                    </h6>\r\n                                    <CyanRadio\r\n                                        checked={selectedValue === \"a\"}\r\n                                        onChange={handleChange}\r\n                                        value=\"a\"\r\n                                        name=\"radio-button-demo\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"a\" }}\r\n                                    />\r\n                                    <label>Yes</label>\r\n                                    <CyanRadio\r\n                                        checked={selectedValue === \"b\"}\r\n                                        onChange={handleChange}\r\n                                        value=\"b\"\r\n                                        name=\"radio-button-demo\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"b\" }}\r\n                                    />\r\n                                    <label>No</label>\r\n                                </div>\r\n                                <div className=\"item_4\">\r\n                                    <h6>Details of the facility/location</h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter the Details of the location\"\r\n                                            value={\r\n                                                trainerAvailabilityData.trainingFacilityLocation\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    trainingFacilityLocation:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item_5\">\r\n                                    <h6>\r\n                                        Are you willing to travel to clients in\r\n                                        your city/region?\r\n                                    </h6>\r\n                                    <CyanRadio\r\n                                        checked={selectedOneValue === \"1\"}\r\n                                        onChange={handleOneChange}\r\n                                        value=\"1\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"1\" }}\r\n                                    />\r\n                                    <label> Yes!</label>\r\n                                    <CyanRadio\r\n                                        checked={selectedOneValue === \"0\"}\r\n                                        onChange={handleOneChange}\r\n                                        value=\"0\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"0\" }}\r\n                                    />\r\n                                    <label>No</label>\r\n                                </div>\r\n                                <div className=\"item_6\">\r\n                                    <h6>\r\n                                        List the areas/neighborhoods you’re\r\n                                        willing to travel to\r\n                                    </h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            placeholder=\"Neighborhood List\"\r\n                                            value={\r\n                                                trainerAvailabilityData.servicableLocation\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    servicableLocation:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n\r\n                                        {/* <img\r\n                                            src={Location}\r\n                                            alt=\"icon\"\r\n                                            className=\"loction_img_select\"\r\n                                        /> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"submit_button\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    //   onClick={(e) => {\r\n                                    //     console.log(selectedOneValue, trainerAvailabilityData);\r\n                                    //     e.preventDefault();\r\n                                    //   }}\r\n\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Submit\r\n                                    <ArrowHoverBlacked />\r\n                                </button>\r\n                                {open ? (\r\n                                    <Modal\r\n                                        open={open}\r\n                                        onClose={() => {\r\n                                            setOpen(false);\r\n                                            history.push(\"card\");\r\n                                        }}\r\n                                        center\r\n                                        closeIcon={closeIcon}\r\n                                        container={myRef.current}\r\n                                        styles={{\r\n                                            boaderRadius: \"10px\",\r\n                                        }}\r\n                                    >\r\n                                        <div\r\n                                            style={{\r\n                                                textAlign: \"center\",\r\n                                                height: \"300px\",\r\n                                                width: \"600px\",\r\n                                                padding: \"2em\",\r\n                                            }}\r\n                                            className=\"model_styles\"\r\n                                        >\r\n                                            <h2>\r\n                                                Background Information\r\n                                                collection complete. Click the\r\n                                                “x” to move to next section!\r\n                                            </h2>\r\n                                            <p>\r\n                                                Time to move on to building your\r\n                                                public Motto profile. This\r\n                                                profile will be published only\r\n                                                after you are approved!\r\n                                            </p>\r\n                                        </div>\r\n                                    </Modal>\r\n                                ) : null}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <img src={WaterMark} alt=\"icon\" className=\"ava_watermark\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst closeIcon = <img src={CloseIcon} alt=\"close\" />;\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst TrainerAvailability = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TrainerAvailabilityFC);\r\n\r\nexport default TrainerAvailability;\r\n","import React from \"react\";\r\nimport TrainerTracker from \"component/TrainerOnBoard/CommonTrackerBar\";\r\nimport AboutTrainer from \"component/TrainerOnBoard/TrainerAboutYou\";\r\nimport TrainerAvailability from \"component/TrainerOnBoard/TrainerAvailability\";\r\n\r\nconst TrainerAvaliabilitySection = () => {\r\n  return (\r\n    <div>\r\n      <TrainerTracker />\r\n      <TrainerAvailability />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainerAvaliabilitySection;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Arrow 1.2a75d61e.svg\";","export default __webpack_public_path__ + \"static/media/Arrow_active.75efc204.svg\";","export default __webpack_public_path__ + \"static/media/Person Icon.aa227953.svg\";","export default __webpack_public_path__ + \"static/media/Person_2.8bf64c18.svg\";","export default __webpack_public_path__ + \"static/media/Schedule Slot Icon.21459896.svg\";","export default __webpack_public_path__ + \"static/media/Schedule_slot_active.29ee488e.svg\";","export default __webpack_public_path__ + \"static/media/Training Icon.d725d1c5.svg\";","export default __webpack_public_path__ + \"static/media/Training_active.ab622bf2.svg\";","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;"],"sourceRoot":""}