{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerSchedule/Tfc.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg"],"names":["ButtonSection","className","Tfc","tempcells","time","React","useState","cellData","setCellData","selectedCell","setSelectedCell","cells","setCells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","token","localStorage","getItem","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","ta","keys","map","item","console","log","a","push","temp","date","column","key","row","sortDate","columnkey","length","rowkey","sort","b","Date","alert","startDate","endDate","availabilitySlot","availableMode","availableSlots","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","catch","error","tableData","start","end","now","clone","dates","isSameOrBefore","format","add","value","onChange","disabled","slice","find","el","l","src","BackIcon","onClick","subtract","NextIcon"],"mappings":"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","file":"static/js/91.9af05780.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TableDragSelect from \"react-table-drag-select\";\r\nimport \"react-table-drag-select/style.css\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\nimport BlueHoverButton from \"component/common/BlueArrowButton\";\r\n\r\nfunction Tfc() {\r\n    const tempcells = [\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ];\r\n    //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    let time = [\r\n        \"05:00 AM\",\r\n        \"05:30 AM\",\r\n        \"06:00 AM\",\r\n        \"06:30 AM\",\r\n        \"07:00 AM\",\r\n        \"07:30 AM\",\r\n    ];\r\n\r\n    const [cellData, setCellData] = React.useState([]);\r\n    const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n    const [cells, setCells] = React.useState([\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ]);\r\n\r\n    const [cal, setCal] = React.useState([]);\r\n    const [startWeek, setstartWeek] = React.useState(\r\n        moment().startOf(\"isoWeek\")\r\n    );\r\n    const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var dt = new Object();\r\n    var lt = new Object();\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const [aslot, setAslot] = React.useState();\r\n    const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        populate(startWeek, endWeek);\r\n    }, [aslotKeys]);\r\n\r\n    React.useEffect(() => {\r\n        Object.keys(data).map((item) => {\r\n            // console.log(data[item][\"slotDate\"], data[item][\"availabileTimes\"]);\r\n            dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n        });\r\n        console.log(dt);\r\n\r\n        var ta;\r\n        Object.keys(dt).map((item) => {\r\n            ta = [];\r\n            dt[item].map((a) => {\r\n                ta.push(a[\"end\"]);\r\n                ta.push(a[\"start\"]);\r\n                // console.log(ta, item);\r\n            });\r\n\r\n            lt[item] = ta;\r\n        });\r\n\r\n        setAslot(lt);\r\n        setAslotKeys(Object.keys(lt));\r\n        console.log(Object.keys(lt));\r\n    }, [data]);\r\n\r\n    React.useEffect(() => {\r\n        console.log(cal);\r\n        setCellData([]);\r\n        time.map((time) => {\r\n            var temp = [];\r\n            cal.map((date) => {\r\n                // temp.push(date + \" \" + time);\r\n                temp.push({ date: date, time: time });\r\n            });\r\n\r\n            setCellData((cellData) => [...cellData, temp]);\r\n        });\r\n    }, [cal]);\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"change\", cells, cellData);\r\n        setSelectedCell([]);\r\n        cells.map((column, key) => {\r\n            var temp = [];\r\n            if (key !== 0) {\r\n                // console.log(key);\r\n\r\n                column.map((row, key) => {\r\n                    if (row === true) {\r\n                        temp.push(key - 1);\r\n                    }\r\n                });\r\n\r\n                //   console.log(temp);\r\n                setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n            }\r\n        });\r\n    }, [cells]);\r\n\r\n    React.useEffect(() => {\r\n        console.log(selectedCell);\r\n        var temp = [];\r\n        var sortDate = [];\r\n\r\n        selectedCell.map((column, columnkey) => {\r\n            if (column.length !== 0) {\r\n                column.map((row, rowkey) => {\r\n                    console.log(cellData[columnkey][row]);\r\n\r\n                    temp.push(cellData[columnkey][row]);\r\n                });\r\n            }\r\n        });\r\n\r\n        // NOTE \"date\" is sorted reverse and \"time\" is sorted normally within the same object\r\n\r\n        if (temp.length !== 0) {\r\n            sortDate = temp.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n            console.log(sortDate);\r\n        }\r\n\r\n        if (temp.length === 1) {\r\n            alert(\"Select more than Half an hour\");\r\n            setCells(tempcells);\r\n        } else {\r\n            if (sortDate.length !== 0) {\r\n                console.log(\r\n                    sortDate[0].time + \"-\" + sortDate[sortDate.length - 1].time\r\n                );\r\n                var data = {\r\n                    startDate: sortDate[sortDate.length - 1].date,\r\n                    endDate: sortDate[0].date,\r\n                    availabilitySlot: [\r\n                        {\r\n                            availableMode: \"EarlyBird\",\r\n                            availableSlots: [\r\n                                sortDate[0].time +\r\n                                    \"-\" +\r\n                                    sortDate[sortDate.length - 1].time,\r\n                            ],\r\n                        },\r\n                    ],\r\n                };\r\n\r\n                fetch(\"http://doodlebluelive.com:2307/v1/addTrainerSlot\", {\r\n                    method: \"POST\", // or 'PUT'\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: token,\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log(\"Success:\", data);\r\n                        alert(\"Slot Added\");\r\n                        getAvailableSlots(startWeek, endWeek);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error:\", error);\r\n                    });\r\n            }\r\n        }\r\n    }, [selectedCell]);\r\n\r\n    const PreviousWeek = () => {\r\n        //Reset current cells\r\n\r\n        setCells(tempcells);\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.subtract(7, \"days\"));\r\n        setendWeek(endWeek.subtract(7, \"days\"));\r\n        console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    };\r\n\r\n    React.useEffect(() => {}, [startWeek]);\r\n\r\n    const NextWeek = () => {\r\n        //Reset current cells\r\n\r\n        setCells(tempcells);\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.add(7, \"days\"));\r\n        setendWeek(endWeek.add(7, \"days\"));\r\n        console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n\r\n        populate(startWeek, endWeek);\r\n\r\n        // getAvailableSlots(startWeek, endWeek)\r\n    };\r\n\r\n    const populate = (start, end) => {\r\n        setCellData([]);\r\n        var now = start.clone(),\r\n            dates = [];\r\n\r\n        while (now.isSameOrBefore(end)) {\r\n            dates.push(now.format(\"YYYY-MM-DD\"));\r\n            now.add(1, \"days\");\r\n        }\r\n        setCal(dates);\r\n\r\n        if (cellData.length === 0) {\r\n            console.log(\"0\");\r\n            time.map((time) => {\r\n                var temp = [];\r\n                dates.map((date) => {\r\n                    // temp.push(date + \" \" + time);\r\n                    temp.push({ date: date, time: time });\r\n                });\r\n\r\n                setCellData((cellData) => [...cellData, temp]);\r\n            });\r\n        } else {\r\n            //   console.log(\"pop\");\r\n        }\r\n    };\r\n\r\n    const getAvailableSlots = (start, end) => {\r\n        var startDate = start.format(\"YYYY-MM-DD\");\r\n        var endDate = end.format(\"YYYY-MM-DD\");\r\n        console.log(startDate, endDate);\r\n        fetch(\r\n            \"http://doodlebluelive.com:2307/v1/trainer/calenderView?startDate=\" +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=EarlyBird\",\r\n            {\r\n                method: \"GET\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setData(json.data);\r\n            });\r\n    };\r\n\r\n    let tableData;\r\n\r\n    if (cellData.length === 0) {\r\n        console.log(\"hitu\");\r\n    } else {\r\n        tableData = (\r\n            <TableDragSelect\r\n                value={cells}\r\n                onChange={(cells) => setCells(cells)}\r\n            >\r\n                <th>\r\n                    <td disabled></td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[0].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">MON</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[1].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">TUES</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[2].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">WED</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[3].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">THURS</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[4].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">FRI</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[5].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">SAT</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[6].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">SUN</div>\r\n                    </td>\r\n                </th>\r\n                <tr>\r\n                    <td disabled className=\"time_show\">\r\n                        5:00 AM\r\n                    </td>\r\n                    {cellData[0].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    console.log(item.time);\r\n                                    return <td disabled>{item.time}</td>;\r\n                                } else {\r\n                                    return <td>{item.date}</td>;\r\n                                }\r\n                            } else {\r\n                                return <td>{item.date}</td>;\r\n                            }\r\n                        } else {\r\n                            return <td>{item.date}</td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"time_show\">\r\n                        5:30 AM\r\n                    </td>\r\n                    {cellData[1].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return <td disabled>{item.time}</td>;\r\n                                } else {\r\n                                    return <td>{item.date}</td>;\r\n                                }\r\n                            } else {\r\n                                return <td>{item.date}</td>;\r\n                            }\r\n                        } else {\r\n                            return <td>{item.date}</td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"time_show\">\r\n                        6:00 AM\r\n                    </td>\r\n                    {cellData[2].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return <td disabled>{item.time}</td>;\r\n                                } else {\r\n                                    return <td>{item.date}</td>;\r\n                                }\r\n                            } else {\r\n                                return <td>{item.date}</td>;\r\n                            }\r\n                        } else {\r\n                            return <td>{item.date}</td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"time_show\">\r\n                        6:30 AM\r\n                    </td>\r\n                    {cellData[3].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return <td disabled>{item.time}</td>;\r\n                                } else {\r\n                                    return <td>{item.date}</td>;\r\n                                }\r\n                            } else {\r\n                                return <td>{item.date}</td>;\r\n                            }\r\n                        } else {\r\n                            return <td>{item.date}</td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"time_show\">\r\n                        7:00 AM\r\n                    </td>\r\n                    {cellData[4].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return <td disabled>{item.time}</td>;\r\n                                } else {\r\n                                    return <td>{item.date}</td>;\r\n                                }\r\n                            } else {\r\n                                return <td>{item.date}</td>;\r\n                            }\r\n                        } else {\r\n                            return <td>{item.date}</td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"time_show\">\r\n                        7:30 AM\r\n                    </td>\r\n                    {cellData[5].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return <td disabled>{item.time}</td>;\r\n                                } else {\r\n                                    return <td>{item.date}</td>;\r\n                                }\r\n                            } else {\r\n                                return <td>{item.date}</td>;\r\n                            }\r\n                        } else {\r\n                            return <td>{item.date}</td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n            </TableDragSelect>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"table_trainer\">\r\n            <div className=\"table_inner_trainer\">\r\n                <img src={BackIcon} onClick={PreviousWeek} /> &ensp;\r\n                <div className=\"date_week\">\r\n                    {startWeek.format(\"DD\")} - {endWeek.format(\"DD\")} &ensp;\r\n                    {startWeek.format(\"MMMM\")}, {startWeek.format(\"yyyy\")}\r\n                </div>\r\n                <img src={NextIcon} onClick={NextWeek} /> &ensp; &ensp;\r\n            </div>\r\n            {tableData}\r\n            <ButtonSection />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ButtonSection = () => {\r\n    return (\r\n        <div className=\"schedular_slots\">\r\n            <div className=\"items_slots\">\r\n                <div className=\"item_slot1\">\r\n                    <div className=\"indicator\"></div>\r\n                    <h5>AVAILABLE</h5>\r\n                </div>\r\n                <div className=\"item_slot2\">\r\n                    <div className=\"indicator2\"></div>\r\n                    <h5>UNAVAILABLE</h5>{\" \"}\r\n                </div>\r\n                <div className=\"item_slot3\">\r\n                    <div className=\"indicator3\"></div>\r\n                    <h5>YOUR SLOT</h5>{\" \"}\r\n                </div>\r\n            </div>\r\n            <div className=\"items_slot_button\">\r\n                <button>\r\n                    BOOK A SESSION <BlueHoverButton />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tfc;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";"],"sourceRoot":""}