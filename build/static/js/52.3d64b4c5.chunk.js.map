{"version":3,"sources":["component/FindYourTrainer/TrainersDetails/index.js","assets/files/FindTrainer/onHover.svg","assets/files/SignUp/Arrow.svg","assets/files/SignUp/ArrowSecondary.svg"],"names":["HeadingTrainer","className","TrainerCards","props","useState","bestMatchData","setbestMatchData","console","log","useEffect","content","Object","keys","map","item","value","setValue","ref","useRef","handleMouseOver","handleMouseOut","node","current","addEventListener","removeEventListener","useHover","hoverRef","isHovered","visible","setVisible","no_match","length","style","alignleft","data","index","src","objectFit","role","describe","to","backgroundColor","onClick","history","push","pathname","state","trainerId","trainerData","onImage","alt","showCard","Arrow"],"mappings":"kMAoCA,IA4GMA,EAAiB,WACnB,OACI,mCACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oDACA,sLAWLC,UA7HM,SAACC,GAClB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACAC,QAAQC,IAAIH,EAAe,YAE3BI,qBAAU,WACNH,EAAiBH,EAAMO,SAEvBC,OAAOC,KAAKP,GAAeQ,KAAI,SAACC,GAC5BP,QAAQC,IAAIH,EAAcS,GAAO,cAGzC,MAtCJ,WACI,MAA0BV,oBAAS,GAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAEMC,EAAMC,iBAAO,MAEbC,EAAkB,kBAAMH,GAAS,IACjCI,EAAiB,kBAAMJ,GAAS,IAkBtC,OAhBAP,qBACI,WACI,IAAMY,EAAOJ,EAAIK,QACjB,GAAID,EAIA,OAHAA,EAAKE,iBAAiB,YAAaJ,GACnCE,EAAKE,iBAAiB,WAAYH,GAE3B,WACHC,EAAKG,oBAAoB,YAAaL,GACtCE,EAAKG,oBAAoB,WAAYJ,MAIjD,CAACH,IAGE,CAACA,EAAKF,GAciBU,GAA9B,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BvB,mBAAS,GAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KAKIC,EAAW,wBAKf,OAJ6B,IAAzBzB,EAAc0B,SACdD,EAAW,oBAAI7B,UAAU,WAAd,+BAIX,mCACI,sBAAKA,UAAU,YAAf,UACI,cAACD,EAAD,IACC8B,EACD,qBAAK7B,UAAU,MAAM+B,MAAO,CAAEC,UAAW,QAAzC,SAGKtB,OAAOC,KAAKP,GAAeQ,KAAI,SAACqB,EAAMC,GACnC,OACI,sBAAKlC,UAAU,OAAf,UACI,qBACIA,UAAU,eACVmC,IAAI,wKACJJ,MAAO,CAAEK,UAAW,WAExB,sBAAKpC,UAAU,YAAf,UACI,+BACKI,EAAc6B,GAAd,UADL,SAEK7B,EAAc6B,GAAd,YAEL,6BAAKA,EAAKI,OACV,8BACKJ,EAAKK,SACN,cAAC,IAAD,CAAMC,GAAG,UAAT,6BAGR,qBAAKvC,UAAU,cAAf,SACI,yBACIgB,IAAKS,EACLM,MAAO,CACHS,gBAAiBd,EACX,MACA,WAEVe,QAAS,WACLnC,QAAQC,IAAIH,EAAc6B,IAC1BS,UAAQC,KAAK,CACTC,SAAU,kBACVC,MAAO,CACHC,UACI1C,EAAc6B,GAAd,GAGJc,YACI3C,EAAc6B,OAjBlC,2BAuBI,qBAAKE,IAAKa,UAASC,IAAI,SAMvB,qCACS,IACL,+BAEQ7C,EAAc6B,GAAd,qDAnDGC,QAiEvC,qBAAKlC,UAAU,WAAf,SACI,yBAAQA,UAAU,eAAeyC,QArF3B,WAClBb,GAAW,SAACsB,GAAD,OAAcA,EAAW,MAoFxB,UACKvB,EAAU,sBAAwB,KACnC,qBAAKQ,IAAKgB,UAAOF,IAAI,qB,iCCxI7C,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,4C","file":"static/js/52.3d64b4c5.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n// import { TrainerData } from \"./TrainerData\";\r\nimport \"./trainer.sass\";\r\nimport onHoverImage from \"../../../assets/files/FindTrainer/onHover.svg\";\r\nimport onImage from \"../../../assets/files/SignUp/Arrow.svg\";\r\nimport Arrow from \"../../../assets/files/SignUp/ArrowSecondary.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction useHover() {\r\n    const [value, setValue] = useState(false);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            const node = ref.current;\r\n            if (node) {\r\n                node.addEventListener(\"mouseover\", handleMouseOver);\r\n                node.addEventListener(\"mouseout\", handleMouseOut);\r\n\r\n                return () => {\r\n                    node.removeEventListener(\"mouseover\", handleMouseOver);\r\n                    node.removeEventListener(\"mouseout\", handleMouseOut);\r\n                };\r\n            }\r\n        },\r\n        [ref] // Recall only if ref changes\r\n    );\r\n\r\n    return [ref, value];\r\n}\r\n\r\nconst TrainerCards = (props) => {\r\n    const [bestMatchData, setbestMatchData] = useState([]);\r\n    console.log(bestMatchData, \"bestmtch\");\r\n\r\n    useEffect(() => {\r\n        setbestMatchData(props.content);\r\n\r\n        Object.keys(bestMatchData).map((item) => {\r\n            console.log(bestMatchData[item], \"best\");\r\n        });\r\n    });\r\n    const [hoverRef, isHovered] = useHover();\r\n    const [visible, setVisible] = useState(3);\r\n    const showMoreItems = () => {\r\n        setVisible((showCard) => showCard + 3);\r\n    };\r\n\r\n    let no_match = <div></div>;\r\n    if (bestMatchData.length === 0) {\r\n        no_match = <h1 className=\"no_match\">No Matches found</h1>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <HeadingTrainer />\r\n                {no_match}\r\n                <div className=\"row\" style={{ alignleft: \"auto\" }}>\r\n                    {/* {console.log(\"dd\", bestMatchData[0][\"firstName\"])} */}\r\n\r\n                    {Object.keys(bestMatchData).map((data, index) => {\r\n                        return (\r\n                            <div className=\"card\" key={index}>\r\n                                <img\r\n                                    className=\"card-img-top\"\r\n                                    src=\"https://images.unsplash.com/photo-1484515991647-c5760fcecfc7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTR8fG1lbnxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                                    style={{ objectFit: \"cover\" }}\r\n                                />\r\n                                <div className=\"card-body\">\r\n                                    <h3>\r\n                                        {bestMatchData[data][\"firstName\"]}&ensp;\r\n                                        {bestMatchData[data][\"lastName\"]}\r\n                                    </h3>\r\n                                    <h6>{data.role}</h6>\r\n                                    <p>\r\n                                        {data.describe}\r\n                                        <Link to=\"profile\">Read More</Link>\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"card-button\">\r\n                                    <button\r\n                                        ref={hoverRef}\r\n                                        style={{\r\n                                            backgroundColor: isHovered\r\n                                                ? \"red\"\r\n                                                : \"#53BFD2\",\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            console.log(bestMatchData[data]);\r\n                                            history.push({\r\n                                                pathname: \"/user/scheduler\",\r\n                                                state: {\r\n                                                    trainerId:\r\n                                                        bestMatchData[data][\r\n                                                            \"id\"\r\n                                                        ],\r\n                                                    trainerData:\r\n                                                        bestMatchData[data],\r\n                                                },\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        book a session\r\n                                        <img src={onImage} alt=\"icon\" />\r\n                                        {/* {isHovered ? (\r\n                      <img src={onHoverImage} alt=\"icon\" />\r\n                    ) : (\r\n                      <img src={onImage} alt=\"icon\" />\r\n                    )} */}\r\n                                        <p>\r\n                                            from{\" \"}\r\n                                            <span>\r\n                                                {\r\n                                                    bestMatchData[data][\r\n                                                        \"oneOnOnePricing\"\r\n                                                    ][\r\n                                                        \"inPersonAtClientLocation\"\r\n                                                    ]\r\n                                                }\r\n                                            </span>\r\n                                        </p>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"showmore\">\r\n                    <button className=\"showmore_btn\" onClick={showMoreItems}>\r\n                        {visible ? \"View More Trainers \" : null}\r\n                        <img src={Arrow} alt=\"icon\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst HeadingTrainer = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"wrapper_heading\">\r\n                    <h2>Your Motto Matches</h2>\r\n                    <p>\r\n                        These matches are the perfect fit based on your filters.\r\n                        The prices shown are for 1:1 sessions. Click on the\r\n                        trainer profile for group rates!\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TrainerCards;\r\n","export default __webpack_public_path__ + \"static/media/onHover.de7bc9ac.svg\";","export default __webpack_public_path__ + \"static/media/Arrow.43fbbb90.svg\";","export default __webpack_public_path__ + \"static/media/ArrowSecondary.2dfb6299.svg\";"],"sourceRoot":""}