{"version":3,"sources":["component/SignUp/Banner/index.js","component/common/ButtonIcon/ArrowHover.jsx","component/SignUp/Banner/useForm.js","component/SignUp/Banner/validation.js","assets/files/SignUp/Phone Icon.svg"],"names":["SignUp","connect","dispatch","bindActionCreators","loginOrSignupAct","loginOrSignUp","submitForm","useForm","validateInfo","data","handleFormSubmit","error","setData","useState","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","apiError","setApiError","onChangeValue","e","persist","target","name","value","history","useHistory","a","payload","firstName","lastName","email","phoneNo","password","cpassword","location","signUpType","userSignUp","AuthApi","Object","keys","length","then","push","catch","message","className","onSubmit","placeholder","type","onChange","src","Person","alt","Mail","Phone","Password","onClick","Facebook","Google","signUp","to","ArrowHover","focusable","imageRendering","baseProfile","version","preserveAspectRatio","viewBox","x","y","width","height","transform","stroke","d","validate","callback","setError","preventDefault","errorData","console","log","validation","values","errors","test"],"mappings":"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","file":"static/js/50.19b44fa2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Person from \"../../../assets/files/SignUp/Person Icon.svg\";\nimport Mail from \"../../../assets/files/SignUp/Email Icon.svg\";\nimport Phone from \"../../../assets/files/SignUp/Phone Icon.svg\";\nimport Password from \"../../../assets/files/SignUp/Password Icon.svg\";\nimport Facebook from \"../../../assets/files/SignUp/Fb Logo.svg\";\nimport Google from \"../../../assets/files/SignUp/Google Logo.svg\";\nimport \"./styles.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ArrowHover from \"../../common/ButtonIcon/ArrowHover\";\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\n// import { api } from \"service/api\";\nimport { AuthApi } from \"service/apiVariables\";\nimport { loginOrSignUp } from \"action/authAct\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport useForm from \"./useForm\";\nimport validateInfo from \"./validation\";\n\nconst SignUpFC = ({ loginOrSignupAct, submitForm }) => {\n    const { data, handleFormSubmit, error, setData } = useForm(\n        validateInfo,\n        submitForm\n    );\n\n    const [passwordShown, setPasswordShown] = useState(false);\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\n    const [apiError, setApiError] = useState(\"\");\n    const onChangeValue = (e) => {\n        e.persist();\n        setData({ ...data, [e.target.name]: e.target.value });\n    };\n\n    const history = useHistory();\n\n    async function signUp() {\n        const payload = {\n            firstName: data.firstName,\n            lastName: data.lastName,\n            email: data.email,\n            phoneNo: data.phoneNo,\n            password: data.password,\n            cpassword: data.cpassword,\n            location: data.location,\n            signUpType: data.signUpType,\n        };\n\n        const { userSignUp } = AuthApi;\n\n        if (Object.keys(error).length === 0) {\n            loginOrSignupAct(userSignUp, payload)\n                .then(() => {\n                    history.push(\"/trainer/find\");\n                })\n                .catch((error) => {\n                    setApiError(\"Sorry, something went wrong.\", error.message);\n                });\n        }\n    }\n\n    const showPassword = () => {\n        setPasswordShown(passwordShown ? false : true);\n    };\n    const showConfirmPassword = () => {\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\n    };\n\n    return (\n        <>\n            <div className=\"main_container\">\n                <div className=\"wrapper\">\n                    <div className=\"inner_wrapper\">\n                        <div className=\"inner_items\">\n                            <h2>Sign Up with Motto!</h2>\n                            <p>\n                                Fill up the following details to create your\n                                account\n                            </p>\n                            <div className=\"form_items\">\n                                <form onSubmit={handleFormSubmit}>\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"Name\"\n                                            type=\"text\"\n                                            value={data.firstName}\n                                            name=\"firstName\"\n                                            onChange={onChangeValue}\n                                        />\n                                        <img src={Person} alt=\"icon\" />\n\n                                        {error.firstName && (\n                                            <span>{error.firstName}</span>\n                                        )}\n                                    </div>\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"LastName\"\n                                            type=\"text\"\n                                            value={data.lastName}\n                                            name=\"lastName\"\n                                            onChange={onChangeValue}\n                                        />\n                                        <img src={Person} alt=\"icon\" />\n                                        {error.lastName && (\n                                            <span>{error.lastName}</span>\n                                        )}\n                                    </div>\n\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"Location\"\n                                            type=\"text\"\n                                            value={data.location}\n                                            name=\"location\"\n                                            onChange={onChangeValue}\n                                        />\n                                        <img src={Person} alt=\"icon\" />\n                                        {error.location && (\n                                            <span>{error.location}</span>\n                                        )}\n                                    </div>\n\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"Email\"\n                                            type=\"email\"\n                                            value={data.email}\n                                            name=\"email\"\n                                            onChange={onChangeValue}\n                                        />\n                                        <img src={Mail} alt=\"icon\" />\n\n                                        {error.email && (\n                                            <span>{error.email}</span>\n                                        )}\n                                    </div>\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"Phone\"\n                                            type=\"text\"\n                                            value={data.phoneNo}\n                                            name=\"phoneNo\"\n                                            onChange={onChangeValue}\n                                        />\n                                        <img src={Phone} alt=\"icon\" />\n                                        {error.phoneNo && (\n                                            <span>{error.phoneNo}</span>\n                                        )}\n                                    </div>\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"Create Password\"\n                                            type={\n                                                passwordShown\n                                                    ? \"text\"\n                                                    : \"password\"\n                                            }\n                                            value={data.password}\n                                            name=\"password\"\n                                            onChange={onChangeValue}\n                                        />\n                                        <img\n                                            src={Password}\n                                            alt=\"icon\"\n                                            onClick={showPassword}\n                                        />\n                                        {error.password && (\n                                            <span>{error.password}</span>\n                                        )}\n                                    </div>\n                                    <div className=\"input_items\">\n                                        <input\n                                            placeholder=\"Confirm Password\"\n                                            type={\n                                                confirmPasswordShown\n                                                    ? \"text\"\n                                                    : \"password\"\n                                            }\n                                            name=\"cpassword\"\n                                            value={data.cpassword}\n                                            onChange={onChangeValue}\n                                        />\n                                        <img\n                                            src={Password}\n                                            alt=\"icon\"\n                                            onClick={showConfirmPassword}\n                                        />\n\n                                        {error.cpassword && (\n                                            <span>{error.cpassword}</span>\n                                        )}\n                                    </div>\n                                    {apiError && (\n                                        <span className=\"errorMessage\">\n                                            {apiError}\n                                        </span>\n                                    )}\n\n                                    <div className=\"or_items\">\n                                        <div className=\"hr_line\"></div>\n                                        <div>\n                                            <p>or</p>\n                                        </div>\n                                        <div className=\"hr_line\"></div>\n                                    </div>\n                                    <div className=\"social_buttons\">\n                                        <button className=\"facebook-auth\">\n                                            <img src={Facebook} alt=\"icon\" />\n                                            Sign Up with Facebook\n                                        </button>\n\n                                        <button className=\"google-auth\">\n                                            <img src={Google} alt=\"icon\" />\n                                            Sign up with Google\n                                        </button>\n                                    </div>\n                                    <div className=\"submit_button\">\n                                        <button\n                                            type=\"submit\"\n                                            onClick={signUp()}\n                                        >\n                                            Continue to Account{\" \"}\n                                            <ArrowHoverBlacked />\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                            <div className=\"login_content_signup\">\n                                <h1>Already have an account?</h1>\n\n                                <Link to=\"/\">\n                                    Sign In now\n                                    <ArrowHover />\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            loginOrSignupAct: loginOrSignUp,\n        },\n        dispatch\n    );\n};\n\nconst SignUp = connect(null, mapDispatchToProps)(SignUpFC);\n\nexport default SignUp;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction ArrowHover() {\n    return (\n        <>\n            <div>\n                <span className='arrow-hover'>\n                    <svg\n                        className=\"arrow-icon\"\n                        focusable=\"false\"\n                        imageRendering=\"auto\"\n                        baseProfile=\"basic\"\n                        version=\"1.1\"\n                        preserveAspectRatio=\"xMidYMid meet\"\n                        viewBox=\"0 0 62 35\"\n                    >\n                        <title>Arrow Icon</title>\n                        <rect x=\"0\" y=\"14.7\" width=\"55.2\" height=\"4.55\"></rect>\n                        <g transform=\"translate(40.9 0)\">\n                            <path\n                                stroke=\"none\"\n                                d=\"M.35 3L14.3 17.2 0 31.25 3.35 34.25 20.85 17.15 3.5 0 .35 3Z\"\n                            ></path>\n                        </g>\n                    </svg>\n                </span>\n            </div>\n        </>\n    );\n}\n\nexport default ArrowHover;\n","import { useState, useEffect} from 'react';\n\nconst useForm = (validate, callback) => {\n\n    const [data, setData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNo: \"\",\n        password: \"\",\n        cpassword: \"\",\n        location: \"\",\n        signUpType: \"email\",\n    });\n\n\n    const [error, setError] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNo: \"\",\n        password: \"\",\n        cpassword: \"\",\n        location: \"\",\n        signUpType: \"email\",\n    })\n    const [isSubmit, setSubmit] = useState(false)\n\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n\n         const errorData = validate(data);\n         setError(errorData)\n        // setSubmit(true)\n        console.log(data);\n        console.log(errorData);\n        console.log(error);\n        console.log(setError);     \n    }\n\n\n\n    // useEffect(()=>{\n    //     if(Object.keys(error).length === 0 && \n    //     isSubmit) {\n    //         callback();\n    //     }\n    // }, [error])}\n    return {data, handleFormSubmit, error,setData }\n}\nexport default useForm;\n\n","const validation = (values) => {\n    let errors = {};\n\n    // firstName: \"\",\n    // lastName: \"\",\n    // email: \"\",\n    // phoneNo: \"\",\n    // password: \"\",\n    // cpassword: \"\",\n    // location: \"\",\n\n    if (!values.firstName) {\n        errors.firstName = \"This field is required\";\n    } else if (values.firstName.length <= 1) {\n        errors.firstName = \"This field should contain more than one character\";\n    } else if (!/^[A-Za-z]+$/i.test(values.firstName)) {\n        errors.firstName = \"  This field accepts only alphabets\";\n    }\n\n    if (!values.lastName) {\n        errors.lastName = \"This field is required\";\n    } else if (values.lastName.length <= 1) {\n        errors.lastName = \"This field should contain more than one character\";\n    } else if (!/^[A-Za-z]+$/i.test(values.lastName)) {\n        errors.lastName = \"This field accepts only alphabets\";\n    }\n\n    if (!values.location) {\n        errors.location = \"This field is required\";\n    } else if (values.location.length <= 1) {\n        errors.location = \"This field should contain more than one character\";\n    } else if (!/^[A-Za-z]+$/i.test(values.location)) {\n        errors.location = \"This field accepts only alphabets\";\n    }\n\n    if (!values.email) {\n        errors.email = \"This field is required\";\n    } else if (\n        !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(\n            values.email\n        )\n    ) {\n        errors.email = \" Please enter a valid email address\";\n    } else if (values.email.length < 8) {\n        errors.email = \" This field should contain greater then 8 character\";\n    }\n\n    if (!values.phoneNo) {\n        errors.phoneNo = \"This field is required\";\n    } else if (!/^[0-9]*$/i.test(values.phoneNo)) {\n        errors.phoneNo = \"Invalid Number\";\n    } else if (values.phoneNo.length < 10) {\n        errors.phoneNo = \"Enter a valid number\";\n    } else if (values.phoneNo.length >= 11) {\n        errors.phoneNo = \" This field exceed max length\";\n    }\n\n    if (!values.password) {\n        errors.password = \"This field is required\";\n    } else if (values.password.length < 6) {\n        errors.password = \" Password should be more then 6 Charcters\";\n    } else if (values.password.length > 8) {\n        errors.password = \" This field exceed max length\";\n    } else if (\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\n            values.password\n        )\n    ) {\n        errors.password =\n            \" Password should contain atleast one one captial letter, number and special character\";\n    }\n\n    if (!values.cpassword) {\n        errors.cpassword = \"This field is required\";\n    } else if (values.cpassword.length < 6) {\n        errors.cpassword = \" Password should be more then 6 Charcters\";\n    } else if (values.cpassword.length > 8) {\n        errors.cpassword = \" This field exceed max length\";\n    } else if (\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\n            values.cpassword\n        )\n    ) {\n        errors.cpassword =\n            \" Password should contain atleast one one captial letter, number and special character\";\n    } else if (values.password !== values.cpassword) {\n        errors.cpassword = \"  The passwords do not match\";\n    }\n\n    return errors;\n};\n\nexport default validation;\n","export default __webpack_public_path__ + \"static/media/Phone Icon.595b1737.svg\";"],"sourceRoot":""}