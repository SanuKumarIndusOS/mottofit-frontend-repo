{"version":3,"sources":["component/TrainerOnBoard/TrainerAvailability/index.js","assets/files/SVG/Arrow Back.svg","assets/files/SVG/Location Icon.svg","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js"],"names":["CyanRadio","withStyles","root","color","cyan","checked","props","closeIcon","src","CloseIcon","alt","TrainerAvailability","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","useLocation","React","useState","selectedValue","setSelectedValue","selectedOneValue","setSelectedOneValue","open","setOpen","myRef","useRef","hoursPerWeek","preferedTrainingMode","trainingFacilityLocation","willingToTravel","servicableLocation","trainerAvailabilityData","setTrainerAvailabilityData","handleChange","event","target","value","handleOneChange","handleTrianingData","e","type","tempData","includes","filter","prefered","useEffect","Object","keys","length","trainingFacility","className","ArrowBack","to","onSubmit","preventDefault","placeholder","onChange","onClick","name","label","inputProps","Location","storeData","location","DOB","dob","gender","instagramProfile","instaHandle","facebookProfile","linkedInProfile","referalCode","areaOfExpertise","trainingAvailability","currentExperience","previousExperience","map","job","orgnization","years","workMode","jobTitle","yearsOfExperience","trainingProcess","profilePicture","interestInMotto","clientAssessment","description","myMotto","images","identityInfromation","identityType","identityNumber","identityImg","insuranceInformation","stripeId","serviceableCity","websiteLink","youtubeLink","certification","certificate","certificateName","certfiedYear","year","oneOnOnePricing","inPersonAtClientLocation","inPersonAtTrainerLocation","virtualSession","passRatefor3Session","passRatefor10Session","socialSessionPricing","inPeronAtClientLocationfor2People","inPeronAtClientLocationfor3People","inPeronAtClientLocationfor4People","inPeronAtTrainerLocationfor2People","inPeronAtTrainerLocationfor3People","inPeronAtTrainerLocationfor4People","virtualSessionfor2People","virtualSessionfor3People","virtualSessionfor4People","classSessionPricing","inPersonAtclientLocationfor15People","inPersonAttrainerLocationfor15People","virtualAtclientLocationfor15People","virtualAttrainerLocationfor15People","virtualSessionfor15People","updateTrainerAvailabilityApi","TrainerApi","body","api","then","catch","error","console","onClose","history","push","center","container","current","styles","boaderRadius","style","textAlign","height","width","padding","WaterMark","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","ref","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/12.0583f70a.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport \"./model.scss\";\r\nimport CloseIcon from \"../../../assets/files/FindTrainer/Cross.svg\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { history } from \"helpers\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport Location from \"../../../assets/files/SVG/Location Icon.svg\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTrainerDetails } from \"action/trainerAct\";\r\n\r\n// hoursPerWeek\r\n// preferedTrainingMode\r\n// serviceableCity\r\n// servicableLocation\r\n// trainingFacilityLocation\r\n// willingToTravel\r\n\r\nconst CyanRadio = withStyles({\r\n    root: {\r\n        \"&$checked\": {\r\n            color: cyan[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst TrainerAvailabilityFC = ({ updateTrainerDetails, details }) => {\r\n    const location = useLocation();\r\n    const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n    const [selectedOneValue, setSelectedOneValue] = React.useState(\"\");\r\n\r\n    const [trainerAbout, setTrainerAbout] = React.useState({});\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const myRef = useRef(null);\r\n    // const [openClassModel, setOpenClassModel] = useState(false);\r\n\r\n    const [\r\n        trainerAvailabilityData,\r\n        setTrainerAvailabilityData,\r\n    ] = React.useState({\r\n        hoursPerWeek: \"\",\r\n        preferedTrainingMode: [],\r\n        trainingFacilityLocation: \"\",\r\n        willingToTravel: \"0\",\r\n        servicableLocation: \"\",\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleOneChange = (event) => {\r\n        setSelectedOneValue(event.target.value);\r\n\r\n        setTrainerAvailabilityData({\r\n            ...trainerAvailabilityData,\r\n            willingToTravel: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(JSON.parse(localStorage.getItem(\"user-info\"))[\"token\"]);\r\n\r\n        const storeData = {\r\n            details: {\r\n                ...details,\r\n                hoursPerWeek: trainerAvailabilityData.hoursPerWeek,\r\n                preferedTrainingMode:\r\n                    trainerAvailabilityData.preferedTrainingMode,\r\n                trainingFacilityLocation:\r\n                    trainerAvailabilityData.trainingFacilityLocation,\r\n                willingToTravel: trainerAvailabilityData.willingToTravel,\r\n                servicableLocation: trainerAvailabilityData.servicableLocation,\r\n            },\r\n        };\r\n\r\n        updateTrainerDetails(storeData);\r\n\r\n        let data = {\r\n            location: details.location,\r\n            DOB: details.dob,\r\n            gender: details.gender,\r\n            instagramProfile: details.instaHandle,\r\n            facebookProfile: \"https://facebook.com/kljdhpersonaltrainer\",\r\n            linkedInProfile: \"https://linkedin.com/kljdhpersonaltrainer\",\r\n            referalCode: \"gh678lJJ\",\r\n            areaOfExpertise: details.areaOfExpertise,\r\n            trainingAvailability: \"Fulltime\",\r\n            preferedTrainingMode: trainerAvailabilityData.preferedTrainingMode,\r\n            willingToTravel: trainerAvailabilityData.willingToTravel,\r\n            servicableLocation: trainerAvailabilityData.servicableLocation,\r\n            currentExperience: details.currentExperience,\r\n            previousExperience: details.previousExperience.map(\r\n                ({ job, orgnization, years }) => ({\r\n                    workMode: orgnization,\r\n                    jobTitle: job,\r\n                    yearsOfExperience: `${years}`,\r\n                })\r\n            ),\r\n            trainingProcess: details.trainingProcess,\r\n            profilePicture: \"img location\",\r\n            interestInMotto: details.interestInMotto,\r\n            clientAssessment: details.clientAssessment,\r\n            trainingFacility: selectedValue === \"a\",\r\n            trainingFacilityLocation: [\r\n                trainerAvailabilityData.trainingFacilityLocation,\r\n            ],\r\n            description: \"\",\r\n            myMotto: \"\",\r\n            images: [\"img Location\"],\r\n            identityInfromation: {\r\n                identityType: \"\",\r\n                identityNumber: \"\",\r\n                identityImg: \"S3 location\",\r\n            },\r\n            insuranceInformation: {},\r\n            stripeId: \"\",\r\n            hoursPerWeek: trainerAvailabilityData.hoursPerWeek,\r\n            serviceableCity: trainerAvailabilityData.servicableLocation,\r\n            websiteLink: details.websiteLink,\r\n            youtubeLink: \"jfjdld\",\r\n            certification: details.certification.map(\r\n                ({ certificate, year }) => ({\r\n                    certificateName: certificate,\r\n                    certfiedYear: year,\r\n                    certification: certificate,\r\n                })\r\n            ),\r\n            oneOnOnePricing: {\r\n                inPersonAtClientLocation: \"125$\",\r\n                inPersonAtTrainerLocation: \"130$\",\r\n                virtualSession: \"120$\",\r\n                passRatefor3Session: \"100$\",\r\n                passRatefor10Session: \"150$\",\r\n            },\r\n            socialSessionPricing: {\r\n                inPeronAtClientLocationfor2People: \"$123\",\r\n                inPeronAtClientLocationfor3People: \"$123\",\r\n                inPeronAtClientLocationfor4People: \"$123\",\r\n                inPeronAtTrainerLocationfor2People: \"$123\",\r\n                inPeronAtTrainerLocationfor3People: \"$123\",\r\n                inPeronAtTrainerLocationfor4People: \"$123\",\r\n                virtualSessionfor2People: \"$130\",\r\n                virtualSessionfor3People: \"$130\",\r\n                virtualSessionfor4People: \"$130\",\r\n            },\r\n            classSessionPricing: {\r\n                inPersonAtclientLocationfor15People: \"$300\",\r\n                inPersonAttrainerLocationfor15People: \"$290\",\r\n                virtualAtclientLocationfor15People: \"$300\",\r\n                virtualAttrainerLocationfor15People: \"$290\",\r\n                virtualSessionfor15People: \"$130\",\r\n            },\r\n        };\r\n\r\n        const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n        updateTrainerAvailabilityApi.body = data;\r\n\r\n        api({ ...updateTrainerAvailabilityApi })\r\n            .then(() => {\r\n                setOpen(true);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n                setOpen(false);\r\n            });\r\n\r\n        // fetch(\"http://doodlebluelive.com:2307/v1/trainer\", {\r\n        //   method: \"PUT\", // or 'PUT'\r\n        //   headers: {\r\n        //     \"Content-Type\": \"application/json\",\r\n        //     token: JSON.parse(localStorage.getItem(\"user-info\"))[\"token\"],\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n        //   .then((response) => response.json())\r\n        //   .then((data) => {\r\n        //     console.log(\"Success:\", data);\r\n        //     if (data === \"200\") {\r\n        //       setOpen(true);\r\n        //     } else {\r\n        //       console.log(\"errro\");\r\n        //     }\r\n        //   })\r\n    };\r\n\r\n    const handleTrianingData = (e, type) => {\r\n        let tempData = [...trainerAvailabilityData.preferedTrainingMode];\r\n\r\n        if (tempData.includes(type)) {\r\n            tempData = tempData.filter((prefered) => prefered !== type);\r\n        } else {\r\n            tempData = [...tempData, type];\r\n        }\r\n        setTrainerAvailabilityData({\r\n            ...trainerAvailabilityData,\r\n            preferedTrainingMode: tempData,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(details).length > 3) {\r\n            const tempData = {\r\n                hoursPerWeek: details.hoursPerWeek,\r\n                preferedTrainingMode: details.preferedTrainingMode,\r\n                trainingFacilityLocation: details.trainingFacilityLocation,\r\n                willingToTravel: details.willingToTravel,\r\n                servicableLocation: details.servicableLocation,\r\n            };\r\n\r\n            details.trainingFacility &&\r\n                setSelectedValue(details.trainingFacility ? \"a\" : \"b\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"link_wrapper\">\r\n                    <img src={ArrowBack} alt=\"icon\" />\r\n                    <div className=\"inner_links\">\r\n                        <Link to=\"/trainer/background\">\r\n                            Back to Trainer Background\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main_wrappercontainer\">\r\n                    <div className=\"wrapper_inneritem\">\r\n                        <h1>Highlight your availability on the platform</h1>\r\n                        <p>\r\n                            {/* Lorem Ipsum is simply dummy text of the printing and\r\n                            typesetting industry. Lorem ipsum has been the\r\n                            industry’s standard dummy text. */}\r\n                        </p>\r\n                        {/* <br></br> */}\r\n                        <form\r\n                            className=\"container\"\r\n                            onSubmit={(e) => e.preventDefault()}\r\n                        >\r\n                            <div className=\"content_wrapper\">\r\n                                <div className=\"item_1\">\r\n                                    <h6>\r\n                                        How many hours will you list on Motto?\r\n                                    </h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"10 Hours/Week\"\r\n                                            value={\r\n                                                trainerAvailabilityData.hoursPerWeek\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    hoursPerWeek:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item_2\">\r\n                                    <h6>Where are you willing to train?</h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <button\r\n                                            onClick={(e) =>\r\n                                                handleTrianingData(e, \"Online\")\r\n                                            }\r\n                                            className={`${\r\n                                                trainerAvailabilityData?.preferedTrainingMode?.includes(\r\n                                                    \"Online\"\r\n                                                )\r\n                                                    ? \"active\"\r\n                                                    : \"\"\r\n                                            }`}\r\n                                            name=\"trainingLocation\"\r\n                                        >\r\n                                            Virtual\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={(e) =>\r\n                                                handleTrianingData(\r\n                                                    e,\r\n                                                    \"inperson\"\r\n                                                )\r\n                                            }\r\n                                            className={`${\r\n                                                trainerAvailabilityData?.preferedTrainingMode?.includes(\r\n                                                    \"inperson\"\r\n                                                )\r\n                                                    ? \"active\"\r\n                                                    : \"\"\r\n                                            }`}\r\n                                            name=\"trainingLocation\"\r\n                                        >\r\n                                            In Person\r\n                                        </button>\r\n                                        {/* <button>Outdoors</button> */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item_3\">\r\n                                    <h6>\r\n                                        Do you have a facility or location where\r\n                                        you will train clients?\r\n                                    </h6>\r\n                                    <CyanRadio\r\n                                        checked={selectedValue === \"a\"}\r\n                                        onChange={handleChange}\r\n                                        value=\"a\"\r\n                                        name=\"radio-button-demo\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"a\" }}\r\n                                    />\r\n                                    <label>Yes</label>\r\n                                    <CyanRadio\r\n                                        checked={selectedValue === \"b\"}\r\n                                        onChange={handleChange}\r\n                                        value=\"b\"\r\n                                        name=\"radio-button-demo\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"b\" }}\r\n                                    />\r\n                                    <label>No</label>\r\n                                </div>\r\n                                <div className=\"item_4\">\r\n                                    <h6>Details of the facility/location</h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter the Details of the location\"\r\n                                            value={\r\n                                                trainerAvailabilityData.trainingFacilityLocation\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    trainingFacilityLocation:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        {/* <img\r\n                                            src={Location}\r\n                                            alt=\"icon\"\r\n                                            className=\"loction_img_select\"\r\n                                        /> */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item_5\">\r\n                                    <h6>\r\n                                        Are you willing to travel to clients in\r\n                                        your city/region?\r\n                                    </h6>\r\n                                    <CyanRadio\r\n                                        checked={selectedOneValue === \"1\"}\r\n                                        onChange={handleOneChange}\r\n                                        value=\"1\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"1\" }}\r\n                                    />\r\n                                    <label> Yes!</label>\r\n                                    <CyanRadio\r\n                                        checked={selectedOneValue === \"0\"}\r\n                                        onChange={handleOneChange}\r\n                                        value=\"0\"\r\n                                        label=\"Strength & Hitt\"\r\n                                        inputProps={{ \"aria-label\": \"0\" }}\r\n                                    />\r\n                                    <label>No</label>\r\n                                </div>\r\n                                <div className=\"item_6\">\r\n                                    <h6>\r\n                                        List the areas/neighborhoods you’re\r\n                                        willing to travel to\r\n                                    </h6>\r\n                                    <div className=\"inputs_platform\">\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            placeholder=\"Neighborhood List\"\r\n                                            value={\r\n                                                trainerAvailabilityData.servicableLocation\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    servicableLocation:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        {/* <select\r\n                                            className=\"select_location\"\r\n                                            required\r\n                                            name=\"answer\"\r\n                                            value={\r\n                                                trainerAvailabilityData.servicableLocation\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                setTrainerAvailabilityData({\r\n                                                    ...trainerAvailabilityData,\r\n                                                    servicableLocation:\r\n                                                        e.target.value,\r\n                                                });\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\" disabled selected>\r\n                                                Select a Motto City\r\n                                            </option>\r\n                                            <option>New York</option>\r\n                                            <option>Miami</option>\r\n                                            <option>Hampton</option>\r\n                                            <option>Palm Beach</option>\r\n                                        </select> */}\r\n                                        <img\r\n                                            src={Location}\r\n                                            alt=\"icon\"\r\n                                            className=\"loction_img_select\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"submit_button\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    //   onClick={(e) => {\r\n                                    //     console.log(selectedOneValue, trainerAvailabilityData);\r\n                                    //     e.preventDefault();\r\n                                    //   }}\r\n\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Submit\r\n                                    <ArrowHoverBlacked />\r\n                                </button>\r\n                                {open ? (\r\n                                    <Modal\r\n                                        open={open}\r\n                                        onClose={() => {\r\n                                            setOpen(false);\r\n                                            history.push(\"card\");\r\n                                        }}\r\n                                        center\r\n                                        closeIcon={closeIcon}\r\n                                        container={myRef.current}\r\n                                        styles={{\r\n                                            boaderRadius: \"10px\",\r\n                                        }}\r\n                                    >\r\n                                        <div\r\n                                            style={{\r\n                                                textAlign: \"center\",\r\n                                                height: \"300px\",\r\n                                                width: \"600px\",\r\n                                                padding: \"2em\",\r\n                                            }}\r\n                                            className=\"model_styles\"\r\n                                        >\r\n                                            <h2>\r\n                                                Background Information\r\n                                                collection complete. Click the\r\n                                                “x” to move to next section!\r\n                                            </h2>\r\n                                            <p>\r\n                                                Time to move on to building your\r\n                                                public Motto profile. This\r\n                                                profile will be published only\r\n                                                after you are approved!\r\n                                            </p>\r\n                                        </div>\r\n                                    </Modal>\r\n                                ) : null}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <img src={WaterMark} alt=\"icon\" className=\"ava_watermark\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst closeIcon = <img src={CloseIcon} alt=\"close\" />;\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst TrainerAvailability = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TrainerAvailabilityFC);\r\n\r\nexport default TrainerAvailability;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;"],"sourceRoot":""}