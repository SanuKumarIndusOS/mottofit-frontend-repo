{"version":3,"sources":["component/FindYourTrainer/TrainerOutsideTime/index.js","helpers/baseURL.js"],"names":["HeadingTrainer","className","TrainerCardOutside","props","useState","outSideData","setOutSideData","useEffect","content","Object","keys","map","data","index","imgdb","COMMON_URL","src","style","objectFit","onError","e","target","onerror","textTransform","onClick","history","push","pathname","state","trainerId","trainerData","backgroundColor","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL"],"mappings":"4KA8GMA,EAAiB,WACrB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,+DA4BKC,UAzIY,SAACC,GAC1B,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAUA,OARAC,qBAAU,WACRD,EAAeH,EAAMK,WACpB,IAEHD,qBAAU,WACRD,EAAeH,EAAMK,WACpB,CAACL,EAAMK,UAGR,mCACE,sBAAKP,UAAU,YAAf,UACE,cAACD,EAAD,IAEA,qBAAKC,UAAU,MAAf,SACGQ,OAAOC,KAAKL,GAAaM,KAAI,SAACC,EAAMC,GACnC,IAAIC,EAAK,UAAMC,cAAN,OAAmBV,EAAYO,GAAZ,gBAC5B,OACE,sBAAKX,UAAU,OAAf,UACE,qBACEA,UAAU,eACVe,IAAKF,EACLG,MAAO,CAAEC,UAAW,SACpBC,QAAS,SAACC,GACRA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOL,IACP,6EAIN,sBAAKf,UAAU,YAAf,UACE,qBAAIgB,MAAO,CAAEM,cAAe,cAA5B,UACGlB,EAAYO,GAAZ,UADH,OAEGP,EAAYO,GAAZ,YAEH,+BACGP,EAAYO,GAAZ,gBAAqC,GACrCP,EAAYO,GAAZ,gBAAqC,GAAK,IAAM,GAFnD,OAIGP,EAAYO,GAAZ,gBAAqC,GACrCP,EAAYO,GAAZ,gBAAqC,GAAK,IAAM,GALnD,OAOGP,EAAYO,GAAZ,gBAAqC,GAPxC,OASGP,EAAYO,GAAZ,gBAAqC,MAExC,8BACGP,EAAYO,GAAZ,YAED,wBACEY,QAAS,WACPC,UAAQC,KAAK,CACXC,SAAS,oBAAD,OAAsBtB,EAAYO,GAAZ,IAC9BgB,MAAO,CACLC,UAAWxB,EAAYO,GAAZ,GACXkB,YAAazB,EAAYO,OANjC,6BAeJ,qBAAKX,UAAU,cAAf,SACE,yBACEgB,MAAO,CACLc,gBAAiB,WAEnBP,QAAS,WACPC,UAAQC,KAAK,CACXC,SAAU,kBACVC,MAAO,CACLC,UAAWxB,EAAYO,GAAZ,GACXkB,YAAazB,EAAYO,OATjC,2BAeE,cAAC,UAAD,IACA,qCACO,KACL,+BAEIP,EAAYO,GAAZ,qDAnEeC,e,iCC1BzC,yOAAO,IAAIE,EAAa,kCACbiB,EAAgB,uCAChBC,EAAc,qCACdC,EAAmB,GACnBC,EAAc,uC","file":"static/js/78.c62adf99.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { history } from \"helpers\";\r\nimport BlackCircleButton from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { COMMON_URL } from \"helpers/baseURL\";\r\n\r\nconst TrainerCardOutside = (props) => {\r\n  const [outSideData, setOutSideData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOutSideData(props.content);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOutSideData(props.content);\r\n  }, [props.content]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <HeadingTrainer />\r\n\r\n        <div className=\"row\">\r\n          {Object.keys(outSideData).map((data, index) => {\r\n            let imgdb = `${COMMON_URL}${outSideData[data][\"profilePicture\"]}`;\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={imgdb}\r\n                  style={{ objectFit: \"cover\" }}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src =\r\n                      \"https://qphs.fs.quoracdn.net/main-qimg-2b21b9dd05c757fe30231fac65b504dd\";\r\n                  }}\r\n                />\r\n\r\n                <div className=\"card-body\">\r\n                  <h3 style={{ textTransform: \"capitalize\" }}>\r\n                    {outSideData[data][\"firstName\"]}&nbsp;\r\n                    {outSideData[data][\"lastName\"]}\r\n                  </h3>\r\n                  <h6>\r\n                    {outSideData[data][\"areaOfExpertise\"][0]}\r\n                    {outSideData[data][\"areaOfExpertise\"][1] ? \",\" : \"\"}\r\n                    &nbsp;\r\n                    {outSideData[data][\"areaOfExpertise\"][1]}\r\n                    {outSideData[data][\"areaOfExpertise\"][2] ? \",\" : \"\"}\r\n                    &nbsp;\r\n                    {outSideData[data][\"areaOfExpertise\"][2]}\r\n                    &nbsp;\r\n                    {outSideData[data][\"areaOfExpertise\"][3]}\r\n                  </h6>\r\n                  <p>\r\n                    {outSideData[data][\"description\"]}\r\n\r\n                    <button\r\n                      onClick={() => {\r\n                        history.push({\r\n                          pathname: `/trainer/profile/${outSideData[data][\"id\"]}`,\r\n                          state: {\r\n                            trainerId: outSideData[data][\"id\"],\r\n                            trainerData: outSideData[data],\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Read More\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-button\">\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"#53BFD2\",\r\n                    }}\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: \"/user/scheduler\",\r\n                        state: {\r\n                          trainerId: outSideData[data][\"id\"],\r\n                          trainerData: outSideData[data],\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    book a session\r\n                    <BlackCircleButton />\r\n                    <p>\r\n                      from{\" $\"}\r\n                      <span>\r\n                        {\r\n                          outSideData[data][\"oneOnOnePricing\"][\r\n                            \"inPersonAtClientLocation\"\r\n                          ]\r\n                        }\r\n                      </span>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeadingTrainer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"wrapper_headings\">\r\n          <h2>just outside your time</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ReadMore = ({ children, maxChar = 110 }) => {\r\n  const text = children;\r\n  const [isTruncated, setIsTruncated] = useState(true);\r\n\r\n  const resultString = isTruncated ? text.slice(0, maxChar) : text;\r\n  function toggleIsTruncated() {\r\n    setIsTruncated(!isTruncated);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p className=\"has-text-left\">\r\n        {resultString}\r\n        <span onClick={toggleIsTruncated} className=\"readmore\">\r\n          {isTruncated ? \"Read more\" : \"Read less\"}\r\n        </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainerCardOutside;\r\n","export var COMMON_URL = \"https://apis.bookmotto.com/user\";\r\nexport var MESSAGING_URL = \"https://apis.bookmotto.com/messaging\";\r\nexport var SESSION_URL = \"https://apis.bookmotto.com/session\";\r\nexport var NOTIFICATION_URL = \"\";\r\nexport var PAYMENT_URL = \"https://apis.bookmotto.com/payments\";\r\n"],"sourceRoot":""}