{"version":3,"sources":["action/trainerAct.js","component/TrainerDashBoard/DashboardCompontents/TrainerMyProfile/MyProfileDemo.js"],"names":["updateTrainerDetails","payload","dispatch","Promise","resolve","type","TrainerActionType","getTrainerDetails","getState","api","reject","getTrainerApi","TrainerApi","then","data","catch","err","getTrainerSessionDetails","getTrainerSessionApi","console","log","sessionData","MyProfileDemo","connect","state","details","trainerReducer","trainerPersonalData","bindActionCreators","useState","motto","trainerData","setTrainerData","useEffect","myMotto","storeData","value","onChange","e","target","name","onClick","updateTrainerAvailabilityApi","body","message","alert"],"mappings":"ySAGaA,EAAuB,SAACC,GAAD,OAAa,SAACC,GAChD,OAAO,IAAIC,SAAQ,SAACC,GAClBF,EAAS,CAAEG,KAAMC,oBAAkBN,qBAAsBC,YAEzDG,GAAQ,QAICG,EAAoB,kBAAM,SAACL,EAAUM,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IAC5D,OAAO,IAAIN,SAAQ,SAACC,EAASM,GAC3B,IAAQC,EAAkBC,aAAlBD,cAERF,EAAI,eAAKE,IACNE,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPZ,EAAS,CACPG,KAAMC,oBAAkBN,qBACxBC,QAAS,CAAEa,UAGbV,EAAQU,MAETC,OAAM,SAACC,GACNN,EAAOM,WAKFC,EAA2B,kBAAM,SAACf,EAAUM,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACnE,OAAO,IAAIN,SAAQ,SAACC,EAASM,GAC3B,IAAQQ,EAAyBN,aAAzBM,qBAERT,EAAI,eAAKS,IACNL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPK,QAAQC,IAAIN,GACZZ,EAAS,CACPG,KAAMC,oBAAkBN,qBACxBC,QAAS,CAAEoB,YAAaP,KAG1BV,EAAQU,MAETC,OAAM,SAACC,GACNN,EAAOM,Y,2HCuCTM,EAAgBC,aAdE,SAACC,GAAD,MAAY,CAChCC,QAASD,EAAME,eAAeD,QAC9BE,oBAAqBH,EAAME,eAAeZ,SAGnB,SAACZ,GACxB,OAAO0B,YACH,CACI5B,4CACAO,uCAEJL,KAGcqB,EA5EE,SAAC,GAIlB,IAHHhB,EAGE,EAHFA,kBACAkB,EAEE,EAFFA,QAGA,GADE,EADFzB,qBAEsC6B,mBAAS,CAC3CC,MAAO,MADX,mBAAOC,EAAP,KAAoBC,EAApB,KAuCA,OAlBAC,qBAAU,WACN1B,IACKM,MAAK,SAACC,GACHK,QAAQC,IAAIN,EAAM,iBAElB,OAAyBA,GAAQ,IAAzBoB,eAAR,MAAkB,GAAlB,EAEMC,EAAY,CACdV,QAAQ,aACJK,MAAOI,GACJT,IAGXO,EAAeG,EAAUV,YAE5BV,OAAM,SAACC,GAAD,OAASG,QAAQC,IAAIJ,QACjC,IAGC,gCACI,uBACIX,KAAK,OACL+B,MAAOL,EAAYD,MACnBO,SAAU,SAACC,GACPN,EAAe,2BACRD,GADO,IAEVD,MAAOQ,EAAEC,OAAOH,UAGxBI,KAAK,UAET,wBAAQC,QA/CK,WACjB,IACIxC,EAAU,CACViC,QAFcH,EAAVD,OAIAY,EAAiC9B,aAAjC8B,6BACRA,EAA6BC,KAAO1C,EACpCQ,cAAI,eAAKiC,IACJ7B,MAAK,YAAwB,IAArBC,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,QACXC,MAAM,iBACN1B,QAAQC,IAAIN,EAAM8B,MAErB7B,OAAM,SAACC,GAAD,OAASG,QAAQC,IAAIJ,OAmC5B,gCAuBGM","file":"static/js/118.099043f0.chunk.js","sourcesContent":["import { TrainerActionType } from \"service/actionType\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\n\r\nexport const updateTrainerDetails = (payload) => (dispatch) => {\r\n  return new Promise((resolve) => {\r\n    dispatch({ type: TrainerActionType.updateTrainerDetails, payload });\r\n\r\n    resolve(true);\r\n  });\r\n};\r\n\r\nexport const getTrainerDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerApi })\r\n      .then(({ data }) => {\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getTrainerSessionDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerSessionApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerSessionApi })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { sessionData: data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getTrainerDetails, updateTrainerDetails } from \"action/trainerAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\n\r\nconst MyProfileDemoFC = ({\r\n    getTrainerDetails,\r\n    details,\r\n    updateTrainerDetails,\r\n}) => {\r\n    const [trainerData, setTrainerData] = useState({\r\n        motto: \"\",\r\n    });\r\n\r\n    //Updating Modified data\r\n    const handleSubmit = () => {\r\n        const { motto } = trainerData;\r\n        let payload = {\r\n            myMotto: motto,\r\n        };\r\n        const { updateTrainerAvailabilityApi } = TrainerApi;\r\n        updateTrainerAvailabilityApi.body = payload;\r\n        api({ ...updateTrainerAvailabilityApi })\r\n            .then(({ data, message }) => {\r\n                alert(\"Data modified\");\r\n                console.log(data, message);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    //Displaying api data\r\n    useEffect(() => {\r\n        getTrainerDetails()\r\n            .then((data) => {\r\n                console.log(data, \"api data demo\");\r\n\r\n                const { myMotto = \"\" } = data || {};\r\n\r\n                const storeData = {\r\n                    details: {\r\n                        motto: myMotto,\r\n                        ...details,\r\n                    },\r\n                };\r\n                setTrainerData(storeData.details);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={trainerData.motto}\r\n                onChange={(e) => {\r\n                    setTrainerData({\r\n                        ...trainerData,\r\n                        motto: e.target.value,\r\n                    });\r\n                }}\r\n                name=\"motto\"\r\n            />\r\n            <button onClick={handleSubmit}>Save Changes</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\nconst MyProfileDemo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MyProfileDemoFC);\r\nexport default MyProfileDemo;\r\n"],"sourceRoot":""}