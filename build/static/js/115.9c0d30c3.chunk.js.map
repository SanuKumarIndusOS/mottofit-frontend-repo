{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerSchedule/Tfc.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg"],"names":["ButtonSection","className","Tfc","React","useState","makeDefault","setMakeDefault","editMode","setEditMode","tempcells","early_bird","rise_shine","mid_day","mid_day_2","happy_hour","never_too_late","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","selectedCell","setSelectedCell","cells","setCells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","token","localStorage","getItem","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","console","log","ta","keys","map","item","a","push","temp","date","column","key","row","sortDate","columnkey","length","rowkey","sort","b","Date","startDate","endDate","availabilitySlot","availableMode","availableSlots","add","format","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","alert","catch","error","start","end","now","clone","dates","isSameOrBefore","editSlot","datee","editData","mode","blockedSlot","state","tableData","tableData2","toggleEditMode","saveDefaultWeeks","def_body","defaultWeeks","value","onChange","disabled","style","wordWrap","lineHeight","paddingLeft","paddingRight","paddingBottom","fontFamily","fontWeight","color","margin","slice","find","el","l","onClick","backgroundColor","isAfter","src","BackIcon","subtract","opacity","NextIcon","e","target","height","width","type","id","checked","for"],"mappings":"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","file":"static/js/115.9c0d30c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TableDragSelect from \"react-table-drag-select\";\r\nimport \"react-table-drag-select/style.css\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\n\r\nfunction Tfc() {\r\n    const [makeDefault, setMakeDefault] = React.useState(false);\r\n    //refer style in node module's react-table-drag\r\n    const [editMode, setEditMode] = React.useState(false);\r\n    const tempcells = [\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ];\r\n    //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    let early_bird = [\r\n        \"05:00 AM\",\r\n        \"05:30 AM\",\r\n        \"06:00 AM\",\r\n        \"06:30 AM\",\r\n        \"07:00 AM\",\r\n        \"07:30 AM\",\r\n        \"Early Bird\",\r\n    ];\r\n\r\n    let rise_shine = [\r\n        \"08:00 AM\",\r\n        \"08:30 AM\",\r\n        \"09:00 AM\",\r\n        \"09:30 AM\",\r\n        \"10:00 AM\",\r\n        \"10:30 AM\",\r\n        \"Rise & Shine\",\r\n    ]; //1\r\n    // let rise_shine = [\"Rise & Shine\"]; //1\r\n    let mid_day = [\r\n        \"11:00 AM\",\r\n        \"11:30 AM\",\r\n        \"12:00 PM\",\r\n        \"12:30 PM\",\r\n        \"01:00 PM\",\r\n        \"01:30 PM\",\r\n        \"Mid-Day Break\",\r\n    ]; //230 - 4\r\n\r\n    let mid_day_2 = [\r\n        \"02:00 PM\",\r\n        \"02:30 PM\",\r\n        \"03:00 PM\",\r\n        \"03:30 PM\",\r\n        \"04:00 PM\",\r\n        \"04:30 PM\",\r\n        \"Mid-Day Lunchtime\",\r\n    ];\r\n\r\n    let happy_hour = [\r\n        \"05:00 PM\",\r\n        \"05:30 PM\",\r\n        \"06:00 PM\",\r\n        \"06:30 PM\",\r\n        \"07:00 PM\",\r\n        \"07:30 PM\",\r\n        \"Happy Hour\",\r\n    ];\r\n\r\n    let never_too_late = [\r\n        \"08:00 PM\",\r\n        \"08:30 PM\",\r\n        \"09:00 PM\",\r\n        \"09:30 PM\",\r\n        \"10:00 PM\",\r\n        \"10:30 PM\",\r\n        \"Never Too Late\",\r\n    ];\r\n\r\n    const [time, setTime] = React.useState(early_bird);\r\n    const [TimeSlot, setTimeSlot] = React.useState(\"EarlyBird\");\r\n\r\n    const [cellData, setCellData] = React.useState([]);\r\n    const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n    const [cells, setCells] = React.useState([\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ]);\r\n\r\n    const [cal, setCal] = React.useState([]);\r\n    const [startWeek, setstartWeek] = React.useState(\r\n        moment().startOf(\"isoWeek\")\r\n    );\r\n    const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var dt = new Object();\r\n    var lt = new Object();\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const [aslot, setAslot] = React.useState();\r\n    const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n\r\n        console.log(TimeSlot);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        populate(startWeek, endWeek);\r\n    }, [aslotKeys]);\r\n\r\n    React.useEffect(() => {\r\n        setSelectedCell([]);\r\n        console.log(\"time changed\");\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, [time]);\r\n\r\n    //   React.useEffect(() => {\r\n    //     console.log(\"time changed\");\r\n    //     // getAvailableSlots(startWeek, endWeek);\r\n    //     populate(startWeek, endWeek);\r\n\r\n    //  }, [TimeSlot])\r\n\r\n    React.useEffect(() => {\r\n        Object.keys(data).map((item) => {\r\n            // console.log(data[item][\"slotDate\"], data[item][\"availabileTimes\"]);\r\n            dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n        });\r\n        console.log(dt);\r\n\r\n        var ta;\r\n        Object.keys(dt).map((item) => {\r\n            ta = [];\r\n            dt[item].map((a) => {\r\n                // ta.push(a[\"end\"]);\r\n                ta.push(a[\"start\"]);\r\n                // console.log(ta, item);\r\n            });\r\n\r\n            lt[item] = ta;\r\n        });\r\n\r\n        setAslot(lt);\r\n        setAslotKeys(Object.keys(lt));\r\n        console.log(Object.keys(lt));\r\n    }, [data]);\r\n\r\n    React.useEffect(() => {\r\n        console.log(cal);\r\n        setCellData([]);\r\n        time.map((time) => {\r\n            var temp = [];\r\n            cal.map((date) => {\r\n                // temp.push(date + \" \" + time);\r\n                temp.push({ date: date, time: time });\r\n            });\r\n\r\n            setCellData((cellData) => [...cellData, temp]);\r\n        });\r\n    }, [cal]);\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"change\", cells, cellData);\r\n        setSelectedCell([]);\r\n        cells.map((column, key) => {\r\n            var temp = [];\r\n            if (key !== 0) {\r\n                // console.log(key);\r\n\r\n                column.map((row, key) => {\r\n                    if (row === true) {\r\n                        temp.push(key - 1);\r\n                    }\r\n                });\r\n\r\n                //   console.log(temp);\r\n                setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n            }\r\n        });\r\n    }, [cells]);\r\n\r\n    React.useEffect(() => {\r\n        // setSelectedCell([]);\r\n        console.log(selectedCell);\r\n        var temp = [];\r\n        var sortDate = [];\r\n\r\n        selectedCell.map((column, columnkey) => {\r\n            if (column.length !== 0) {\r\n                column.map((row, rowkey) => {\r\n                    console.log(cellData[columnkey][row]);\r\n\r\n                    temp.push(cellData[columnkey][row]);\r\n                });\r\n            }\r\n        });\r\n\r\n        // NOTE \"date\" is sorted reverse and \"time\" is sorted normally within the same object\r\n\r\n        if (temp.length !== 0) {\r\n            sortDate = temp.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n            console.log(sortDate);\r\n        }\r\n\r\n        // if (temp.length === 1) {\r\n        //     alert(\"Select more than Half an hour\");\r\n        //     setCells(tempcells);\r\n        // } else {\r\n        if (sortDate.length !== 0) {\r\n            console.log(\r\n                sortDate[0].time + \"-\" + sortDate[sortDate.length - 1].time\r\n            );\r\n            var data = {\r\n                startDate: sortDate[sortDate.length - 1].date,\r\n                endDate: sortDate[0].date,\r\n                availabilitySlot: [\r\n                    {\r\n                        availableMode: TimeSlot,\r\n                        availableSlots: [\r\n                            sortDate[0].time +\r\n                                \"-\" +\r\n                                moment(\r\n                                    sortDate[sortDate.length - 1].time,\r\n                                    \"HH:mm a\"\r\n                                )\r\n                                    .add(30, \"minutes\")\r\n                                    .format(\"hh:mm A\"),\r\n                        ],\r\n                    },\r\n                ],\r\n            };\r\n\r\n            fetch(\"http://doodlebluelive.com:2307/v1/addTrainerSlot\", {\r\n                method: \"POST\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: token,\r\n                },\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log(\"Success:\", data);\r\n                    alert(\"Slot Added\");\r\n                    setCells(tempcells);\r\n                    getAvailableSlots(startWeek, endWeek);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error:\", error);\r\n                });\r\n        }\r\n        // }\r\n\r\n        // setCells(tempcells)\r\n    }, [selectedCell]);\r\n\r\n    const PreviousWeek = () => {\r\n        //Reset current cells\r\n\r\n        setCells(tempcells);\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.subtract(7, \"days\"));\r\n        setendWeek(endWeek.subtract(7, \"days\"));\r\n        console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    };\r\n\r\n    React.useEffect(() => {}, [startWeek]);\r\n\r\n    const NextWeek = () => {\r\n        //Reset current cells\r\n\r\n        setCells(tempcells);\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.add(7, \"days\"));\r\n        setendWeek(endWeek.add(7, \"days\"));\r\n        console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n\r\n        populate(startWeek, endWeek);\r\n\r\n        // getAvailableSlots(startWeek, endWeek)\r\n    };\r\n\r\n    const populate = (start, end) => {\r\n        setCellData([]);\r\n        var now = start.clone(),\r\n            dates = [];\r\n\r\n        while (now.isSameOrBefore(end)) {\r\n            dates.push(now.format(\"YYYY-MM-DD\"));\r\n            now.add(1, \"days\");\r\n        }\r\n        setCal(dates);\r\n\r\n        if (cellData.length === 0) {\r\n            console.log(\"0\");\r\n            time.map((time) => {\r\n                var temp = [];\r\n                dates.map((date) => {\r\n                    // temp.push(date + \" \" + time);\r\n                    temp.push({ date: date, time: time });\r\n                });\r\n\r\n                setCellData((cellData) => [...cellData, temp]);\r\n            });\r\n        } else {\r\n            //   console.log(\"pop\");\r\n        }\r\n    };\r\n\r\n    const getAvailableSlots = (start, end) => {\r\n        var startDate = start.format(\"YYYY-MM-DD\");\r\n        var endDate = end.format(\"YYYY-MM-DD\");\r\n        console.log(startDate, endDate);\r\n        console.log(\r\n            \"http://doodlebluelive.com:2307/v1/trainer/calenderView?startDate=\" +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=\" +\r\n                TimeSlot\r\n        );\r\n        fetch(\r\n            \"http://doodlebluelive.com:2307/v1/trainer/calenderView?startDate=\" +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=\" +\r\n                TimeSlot,\r\n            {\r\n                method: \"GET\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setData(json.data);\r\n            });\r\n    };\r\n    function editSlot(datee, time) {\r\n        var editData = {\r\n            date: datee,\r\n            mode: \"EarlyBird\",\r\n            blockedSlot: time,\r\n            state: \"BLOCK\",\r\n        };\r\n        // console.log(date + \" \" + time);\r\n        fetch(\"http://doodlebluelive.com:2307/v1/block/trainerSlot\", {\r\n            method: \"PUT\", // or 'PUT'\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(editData),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(\"Success:\", data);\r\n                // alert(\"Slot blocked\");\r\n                setCells(tempcells);\r\n                getAvailableSlots(startWeek, endWeek);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    }\r\n    const toggleEditMode = () => {\r\n        console.log(\"edit mode\", makeDefault);\r\n        if(makeDefault)\r\n        {\r\n            saveDefaultWeeks()\r\n            setMakeDefault(!makeDefault)\r\n        }\r\n        setEditMode(!editMode);\r\n    };\r\n\r\n    const saveDefaultWeeks = () => {\r\n        console.log(\r\n            \"clicked\",\r\n            startWeek.format(\"YYYY-MM-DD\"),\r\n            endWeek.format(\"YYYY-MM-DD\"),\r\n            TimeSlot\r\n        );\r\n\r\n        var def_body = {\r\n            startDate: startWeek.format(\"YYYY-MM-DD\"),\r\n            endDate: endWeek.format(\"YYYY-MM-DD\"),\r\n            defaultWeeks: 2,\r\n            mode: TimeSlot,\r\n        };\r\n\r\n        console.log(def_body);\r\n\r\n        fetch(\"http://doodlebluelive.com:2307/v1/slot/make-default\", {\r\n            method: \"POST\", // or 'PUT'\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(def_body),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(\"Success:\", data);\r\n                alert(\"Slot def blocked\");\r\n                setCells(tempcells);\r\n                getAvailableSlots(startWeek, endWeek);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    };\r\n    let tableData;\r\n\r\n    let tableData2;\r\n    if (cellData.length === 0) {\r\n        console.log(\"hitu\");\r\n    } else {\r\n        tableData = (\r\n            <TableDragSelect\r\n                value={cells}\r\n                onChange={(cells) => setCells(cells)}\r\n            >\r\n                <th>\r\n                    <td disabled>\r\n                        <h6\r\n                            style={{\r\n                                wordWrap: \"break-word\",\r\n                                lineHeight: \"18px\",\r\n                                paddingLeft: \"0.5em\",\r\n                                paddingRight: \"0.5em\",\r\n                                paddingBottom: \"0em\",\r\n                                fontFamily: \"Montserrat\",\r\n                                fontWeight: \"800\",\r\n                                color: \"#898989\",\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {\" \"}\r\n                            {time[6]}\r\n                        </h6>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[0].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">MON</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[1].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">TUES</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[2].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">WED</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[3].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">THURS</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[4].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">FRI</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[5].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">SAT</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[6].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">SUN</div>\r\n                    </td>\r\n                </th>\r\n                <tr>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[0]}\r\n                    </td>\r\n                    {cellData[0].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    console.log(item.time);\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[1]}\r\n                    </td>\r\n                    {cellData[1].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[2]}\r\n                    </td>\r\n                    {cellData[2].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[3]}\r\n                    </td>\r\n                    {cellData[3].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[4]}\r\n                    </td>\r\n                    {cellData[4].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[5]}\r\n                    </td>\r\n                    {cellData[5].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n            </TableDragSelect>\r\n        );\r\n        tableData2 = (\r\n            <table\r\n              \r\n                className=\"table2\"\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th disabled>\r\n                            <h6\r\n                                style={{\r\n                                    wordWrap: \"break-word\",\r\n                                    lineHeight: \"18px\",\r\n                                    paddingLeft: \"0.5em\",\r\n                                    paddingRight: \"0.5em\",\r\n                                    paddingBottom: \"0em\",\r\n                                    fontFamily: \"Montserrat\",\r\n                                    fontWeight: \"800\",\r\n                                    color: \"#898989\",\r\n                                    margin: 0,\r\n                                }}\r\n                            >\r\n                                {\" \"}\r\n                                {time[6]}\r\n                            </h6>\r\n                            {/* {early_bird} */}\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[0].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">MON</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[1].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">TUES</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[2].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">WED</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[3].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">THURS</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[4].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">FRI</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[5].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SAT</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[6].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SUN</div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td\r\n                            disabled\r\n                            className=\"slot_time\"\r\n                            style={{ backgroundColor: \"fff\" }}\r\n                        >\r\n                            {time[0]}\r\n                        </td>\r\n                        {cellData[0].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        console.log(item.time);\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[1]}\r\n                        </td>\r\n                        {cellData[1].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[2]}\r\n                        </td>\r\n                        {cellData[2].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[3]}\r\n                        </td>\r\n                        {cellData[3].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[4]}\r\n                        </td>\r\n                        {cellData[4].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[5]}\r\n                        </td>\r\n                        {cellData[5].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_table_trainer\">\r\n                <div className=\"table_trainer\">\r\n                    <div className=\"table_inner_trainer\">\r\n                        <div className=\"table_date\">\r\n                            {/* <img\r\n                                src={BackIcon}\r\n                                onClick={PreviousWeek}\r\n                                disabled=\"true\"\r\n                            />{\" \"} */}\r\n                            &ensp;\r\n                            {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n                                moment()\r\n                                    .startOf(\"isoWeek\")\r\n                                    .format(\"YYYY-MM-DD\"),\r\n                                \"day\"\r\n                            ) ? (\r\n                                <div>\r\n                                    <img\r\n                                        src={BackIcon}\r\n                                        onClick={PreviousWeek}\r\n                                    />{\" \"}\r\n                                    &ensp;\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <img\r\n                                        src={BackIcon}\r\n                                        disabled=\"true\"\r\n                                        style={{ opacity: \"0.5\" }}\r\n                                    />{\" \"}\r\n                                    &ensp;\r\n                                </div>\r\n                            )}\r\n                            <div className=\"date_week\">\r\n                                {startWeek.format(\"DD\")} -{\" \"}\r\n                                {endWeek.format(\"DD\")} &ensp;\r\n                                {startWeek.format(\"MMMM\")},{\" \"}\r\n                                {startWeek.format(\"yyyy\")}\r\n                            </div>\r\n                            <img src={NextIcon} onClick={NextWeek} /> &ensp;\r\n                            &ensp;\r\n                        </div>\r\n                        <div className=\"table_date\">\r\n                            <select\r\n                                value={TimeSlot}\r\n                                onChange={(e) => {\r\n                                    setTimeSlot(e.target.value);\r\n                                    console.log(e.target.value);\r\n                                    if (e.target.value === \"EarlyBird\") {\r\n                                        setTime(early_bird);\r\n                                        console.log(\"early_bird\");\r\n                                    }\r\n\r\n                                    if (e.target.value === \"RiseAndShine\") {\r\n                                        setTime(rise_shine);\r\n                                        console.log(\"RiseAndShine\");\r\n                                    }\r\n\r\n                                    if (e.target.value === \"MidDayBreak1\") {\r\n                                        setTime(mid_day);\r\n                                        console.log(\"MidDayBreak\");\r\n                                    }\r\n\r\n                                    if (e.target.value === \"MidDayBreak2\") {\r\n                                        setTime(mid_day_2);\r\n                                        console.log(\"MidDayBreak2\");\r\n                                    }\r\n\r\n                                    if (e.target.value === \"HappyHours\") {\r\n                                        setTime(happy_hour);\r\n                                        console.log(\"HappyHours\");\r\n                                    }\r\n\r\n                                    if (e.target.value === \"NeverTooLate\") {\r\n                                        setTime(never_too_late);\r\n                                        console.log(\"NeverTooLate\");\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <option value=\"EarlyBird\">Early Bird</option>\r\n                                <option value=\"RiseAndShine\">\r\n                                    Rise & Shine\r\n                                </option>\r\n                                <option value=\"MidDayBreak1\">\r\n                                    Mid-Day Break\r\n                                </option>\r\n                                <option value=\"MidDayBreak2\">\r\n                                    Mid-Day Lunchtime\r\n                                </option>\r\n                                <option value=\"HappyHours\">Happy Hour</option>\r\n                                <option value=\"NeverTooLate\">\r\n                                    Never Too Late\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {/* {tableData}\r\n                    {tableData2} */}\r\n                    {\r\n                        //Check if message failed\r\n                        editMode ? (\r\n                            <div style={{height:\"530px\", width:\"960px\"}}> {tableData} </div>\r\n                        ) : (\r\n                            <div style={{height:\"530px\", width:\"960px\"}}> {tableData2} </div>\r\n                        )\r\n                    }\r\n                    <div className=\"scheduler_button\">\r\n                        {editMode ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"defualt\"\r\n                                   \r\n                                    onChange={(e) => {\r\n                                        setMakeDefault(e.target.checked);\r\n                                    }}\r\n                                    checked={makeDefault}\r\n                                />\r\n                                <label\r\n                                    for=\"defualt\"\r\n                                    style={{ color: \"#898989\" }}\r\n                                    className=\"default_label\"\r\n                                >\r\n                                    {\" \"}\r\n                                    Make defualt\r\n                                </label>\r\n                                <br></br>\r\n                                <button\r\n                                    onClick={toggleEditMode}\r\n                                    className=\"scheduler_button\"\r\n                                    style={{\r\n                                        backgroundColor: \"#53d27d\",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                >\r\n                                    SAVE\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <button\r\n                                onClick={toggleEditMode}\r\n                                className=\"scheduler_button\"\r\n                                style={{\r\n                                    backgroundColor: \"#53bfd2\",\r\n\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                ADD YOUR SLOT\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ButtonSection />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ButtonSection = () => {\r\n    return (\r\n        <div className=\"schedular_slots\">\r\n            <div className=\"items_slots\">\r\n                <div className=\"item_slot1\">\r\n                    <div className=\"indicator\"></div>\r\n                    <h5>AVAILABLE</h5>\r\n                </div>\r\n                <div className=\"item_slot2\">\r\n                    <div className=\"indicator2\"></div>\r\n                    <h5>UNAVAILABLE</h5>{\" \"}\r\n                </div>\r\n                <div className=\"item_slot3\">\r\n                    <div className=\"indicator3\"></div>\r\n                    <h5>BOOKED SLOT</h5>{\" \"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tfc;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";"],"sourceRoot":""}