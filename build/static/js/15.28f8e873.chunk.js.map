{"version":3,"sources":["component/UserBookSession/UserPayments/subcomponents/CardForm.js"],"names":["CardForm","connect","state","sessionData","userReducer","dispatch","bindActionCreators","updateUserDetails","agreedToTerms","handleChange","ScheduleSession","stripe","useStripe","elements","useElements","useMemo","style","base","color","letterSpacing","fontFamily","invalid","useState","isRememberCard","setRememberCard","defaulCardDetails","setDefaultCardDetails","showCardComp","setShowCardComp","useEffect","getUserPaymentInfo","handleSubmit","event","a","preventDefault","cardElement","getElement","CardNumberElement","createPaymentMethod","type","card","error","paymentMethod","console","log","Toast","message","createToken","then","token","id","addCard","catch","err","addCardDetails","PaymentApi","payload","cardToken","setDefault","body","api","data","sessionTypeRoute","history","push","sessionType","getPaymentMethods","filter","default","length","reduxData","onSubmit","className","options","hidePostalCode","fontSize","last4","exp_month","exp_year","onClick","checked","onChange","for","to","width","marginRight","disabled"],"mappings":"0RAuWA,IAaMA,EAAWC,aAbO,SAACC,GAAD,MAAY,CAClCC,YAAaD,EAAME,YAAYD,gBAGN,SAACE,GAC1B,OAAOC,YACL,CACEC,uCAEFF,KAIaJ,EA3UjB,YAMI,IAAD,MALDM,EAKC,EALDA,kBACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,gBACAP,EACC,EADDA,YAEMQ,EAASC,sBACTC,EAAWC,wBAEjB,GA7BgBC,mBAAQ,iBAAO,CAC7BC,MAAO,CACLC,KAAM,CACJC,MAAO,UACPC,cAAe,UACfC,WAAY,6BACZ,gBAAiB,CACfF,MAAO,YAGXG,QAAS,CACPH,MAAO,gBAkB6BI,oBAAS,IAAnD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAmDF,mBAAS,IAA5D,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRC,MACC,IAEH,IAAMC,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDAEnBD,EAAME,iBAEDP,EAJc,yCAIOjB,KAJP,UAMdC,GAAWE,EANG,wDAebsB,EAActB,EAASuB,WAAWC,qBAfrB,SAoBoB1B,EAAO2B,oBAAoB,CAChEC,KAAM,OACNC,KAAML,IAtBW,mBAoBXM,EApBW,EAoBXA,MAAOC,EApBI,EAoBJA,eAKXD,EAzBe,wBA0BjBE,QAAQC,IAAI,UAAWH,GA1BN,kBA4BVI,gBAAM,CAAEN,KAAM,QAASO,QAASL,EAAMK,SAAW,WA5BvC,QA8BjBH,QAAQC,IAAI,kBAAmBF,GA9Bd,QAiCnB/B,EACGoC,YAAYZ,GACZa,MAAK,YAAsB,IAAVC,EAAS,EAATA,MAEhBN,QAAQC,IAAIK,IAEP,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOC,KAAMC,EAAO,OAACF,QAAD,IAACA,OAAD,EAACA,EAAOC,OAI7BE,OAAM,SAACC,GACNR,gBAAM,CAAEN,KAAM,QAASO,QAASO,EAAIP,SAAW,aA5ChC,4CAAH,sDAgEZK,EAAU,SAACF,GACf,IAAQK,EAAmBC,aAAnBD,eAEJE,EAAU,CACZC,UAAWR,EACXS,WAAYnC,GAGd+B,EAAeK,KAAOH,EAEtBI,cAAI,eAAKN,IACNN,MAAK,YAAe,IAAD,EAAXa,EAAW,EAAXA,KACPlB,QAAQC,IAAIiB,GAEZhB,gBAAM,CAAEN,KAAM,UAAWO,QAAS,uBAClChB,IAEA,IAAIgC,GAAgB,mBACjB,mBAAoB,kBAAMpD,OADT,cAEjB,kBAAmB,kBAAMqD,UAAQC,KAAK,yBAFrB,cAGjB,kBAAmB,kBAAMD,UAAQC,KAAK,yBAHrB,GAMhBC,EAAW,OAAG9D,QAAH,IAAGA,OAAH,EAAGA,EAAa8D,YAE3BA,GAAeH,EAAiBG,IAClCtB,QAAQC,IAAIkB,EAAiBG,OAGhCb,OAAM,SAACC,GACNR,gBAAM,CAAEN,KAAM,QAASO,QAASO,EAAIP,SAAW,UAC/CH,QAAQC,IAAIS,OAIZvB,EAAqB,WACzB,IAAQoC,EAAsBX,aAAtBW,kBAERN,cAAI,eAAKM,IACNlB,MAAK,YAAoB,IAAD,IAAhBa,KAGDpC,SAHiB,MAAT,GAAS,IACA,IAEY0C,QAAO,SAACN,GAAD,OAAUA,EAAKO,WAEzD,GAAI3C,EAAkB4C,OAAS,EAAG,CAChC3C,EAAsBD,EAAkB,IACxCG,GAAgB,GAEhB,IAAI0C,EAAY,CACd7C,kBAAmBA,EAAkB,IAGvCkB,QAAQC,IAAI0B,GACZ/D,EAAkB+D,OAGrBlB,OAAM,SAACC,GACNR,gBAAM,CAAEN,KAAM,QAASO,QAASO,EAAIP,SAAW,UAC/CH,QAAQC,IAAIS,OAIlB,OACE,8BACE,uBAAMkB,SAAUxC,EAAcyC,UAAU,OAAxC,UACE,sBAAKA,UAAU,sBAAf,UACE,gDAEC7C,EACC,cAAC,oBAAD,CACE8C,QAAS,CACPC,gBAAgB,EAChB1D,MAAO,CACLC,KAAM,CACJ0D,SAAU,OACVzD,MAAO,UACP,gBAAiB,CACfA,MAAO,UACPE,WAAY,aACZuD,SAAU,SAGdtD,QAAS,CACPH,MAAO,eAMf,mBAAGsD,UAAU,QAAb,mCACmB,OAAjB/C,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBe,YAAnB,eAAyBoC,QAAS,UAItC,sBAAKJ,UAAU,uBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,gDAEG7C,EACC,cAAC,oBAAD,CACE8C,QAAS,CACPzD,MAAO,CACLC,KAAM,CACJ0D,SAAU,OACVzD,MAAO,UACP,gBAAiB,CACfA,MAAO,UACPE,WAAY,aACZuD,SAAU,SAGdtD,QAAS,CACPH,MAAO,eAMf,mBAAGsD,UAAU,QAAb,oBACmB,OAAjB/C,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBe,YAAnB,eAAyBqC,YAAa,GADxC,aAEqB,OAAjBpD,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBe,YAAnB,eAAyBsC,WAAY,WAI/C,qBAAKN,UAAU,uBAAf,SACG7C,GACC,4CAEE,cAAC,iBAAD,CACE8C,QAAS,CACPzD,MAAO,CACLC,KAAM,CACJ0D,SAAU,OACVzD,MAAO,UACP,gBAAiB,CACfA,MAAO,UACPE,WAAY,aACZuD,SAAU,SAGdtD,QAAS,CACPH,MAAO,uBAUtBO,EAAkB2C,SACjB,mCACGzC,EACC,qBAAK6C,UAAU,4CAAf,SACE,wBACEA,UAAU,WACVO,QAAS,kBAAMnD,GAAgB,IAFjC,0BAQF,qBAAK4C,UAAU,4CAAf,SACE,wBACEA,UAAU,WACVO,QAAS,kBAAMnD,GAAgB,IAFjC,2BAWPD,GACC,sBAAK6C,UAAU,2BAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBACEjC,KAAK,WACLyC,QAASzD,EACT0D,SAAU,kBAAMzD,GAAiBD,IACjC2B,GAAG,kBAEL,uBAAOgC,IAAI,gBAAX,yCAEF,qBAAKV,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMW,GAAG,IAAT,iDAMR,qBAAKX,UAAU,8BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,uBACEjC,KAAK,WACLvB,MAAO,CAAEoE,MAAO,OAAQC,YAAa,QACrCJ,SAAUxE,EACVuE,QAASxE,IAEX,yFACuD,IACrD,cAAC,IAAD,CAAM2E,GAAG,IAAT,0BAFF,OAEuC,IACrC,cAAC,IAAD,CAAMA,GAAG,IAAT,oCAKN,qBAAKX,UAAU,aAAf,SACE,oBAAGA,UAAU,uCAAb,UACE,cAAC,IAAD,IACA,sBAAMA,UAAU,OAAhB,2EAOJ,qBAAKA,UAAU,SAAf,SACE,yBACEjC,KAAK,QACLiC,UAAS,UAAMhE,EAAgC,GAAhB,eAC/B8E,UAAW9E,EACXuE,QAAShD,EAJX,sBAMW,cAAC,UAAD,iBAwBN/B,a","file":"static/js/15.28f8e873.chunk.js","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\r\nimport {\r\n  useStripe,\r\n  useElements,\r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport \"../styles.scss\";\r\nimport ArrowHoverBlacked from \"../../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PaymentApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { updateUserDetails } from \"action/userAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from \"service/toast\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { AiFillAlert, AiOutlineAlert } from \"react-icons/ai\";\r\nimport { history } from \"helpers\";\r\n\r\nconst useOptions = () => {\r\n  const options = useMemo(() => ({\r\n    style: {\r\n      base: {\r\n        color: \"#424770\",\r\n        letterSpacing: \"0.025em\",\r\n        fontFamily: \"Source Code Pro, monospace\",\r\n        \"::placeholder\": {\r\n          color: \"#aab7c4\",\r\n        },\r\n      },\r\n      invalid: {\r\n        color: \"#9e2146\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  return options;\r\n};\r\n\r\nfunction CardFormFC({\r\n  updateUserDetails,\r\n  agreedToTerms,\r\n  handleChange,\r\n  ScheduleSession,\r\n  sessionData,\r\n}) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const options = useOptions();\r\n  const [isRememberCard, setRememberCard] = useState(false);\r\n  const [defaulCardDetails, setDefaultCardDetails] = useState({});\r\n  const [showCardComp, setShowCardComp] = useState(true);\r\n  // const [agreedToTerms, setAgreedToTerms] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getUserPaymentInfo();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    if (!showCardComp) return ScheduleSession();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardNumberElement);\r\n\r\n    // console.log(cardElement);\r\n\r\n    // Use your card Element with other Stripe.js APIs\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n\r\n      return Toast({ type: \"error\", message: error.message || \"Error\" });\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n    }\r\n\r\n    stripe\r\n      .createToken(cardElement)\r\n      .then(function ({ token }) {\r\n        // Handle result.error or result.token\r\n        console.log(token);\r\n\r\n        token?.id && addCard(token?.id);\r\n\r\n        //   console.log(result, \"token\");\r\n      })\r\n      .catch((err) => {\r\n        Toast({ type: \"error\", message: err.message || \"Error\" });\r\n      });\r\n\r\n    // alert(\"Card Saved\");\r\n  };\r\n\r\n  const scheduleData = () => {\r\n    let sessionTypeRoute = {\r\n      [\"1 ON 1 TRAINING\"]: () => ScheduleSession(),\r\n      [\"SOCIAL SESSION\"]: () => history.push(\"/user/with-friends\"),\r\n      [\"CREATE A CLASS\"]: () => history.push(\"/user/with-friends\"),\r\n    };\r\n\r\n    let sessionType = sessionData?.sessionType;\r\n\r\n    if (sessionType && sessionTypeRoute[sessionType])\r\n      sessionTypeRoute[sessionType]();\r\n    // console.log(sessionTypeRoute[sessionType]);\r\n  };\r\n\r\n  const addCard = (token) => {\r\n    const { addCardDetails } = PaymentApi;\r\n\r\n    let payload = {\r\n      cardToken: token,\r\n      setDefault: isRememberCard,\r\n    };\r\n\r\n    addCardDetails.body = payload;\r\n\r\n    api({ ...addCardDetails })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n\r\n        Toast({ type: \"success\", message: \"Card details added\" });\r\n        getUserPaymentInfo();\r\n\r\n        let sessionTypeRoute = {\r\n          [\"1 ON 1 TRAINING\"]: () => ScheduleSession(),\r\n          [\"SOCIAL SESSION\"]: () => history.push(\"/user/with-friends\"),\r\n          [\"CREATE A CLASS\"]: () => history.push(\"/user/with-friends\"),\r\n        };\r\n\r\n        let sessionType = sessionData?.sessionType;\r\n\r\n        if (sessionType && sessionTypeRoute[sessionType])\r\n          console.log(sessionTypeRoute[sessionType]);\r\n        //   sessionTypeRoute[sessionType]();\r\n      })\r\n      .catch((err) => {\r\n        Toast({ type: \"error\", message: err.message || \"Error\" });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getUserPaymentInfo = () => {\r\n    const { getPaymentMethods } = PaymentApi;\r\n\r\n    api({ ...getPaymentMethods })\r\n      .then(({ data = [] }) => {\r\n        let tempData = data || [];\r\n\r\n        const defaulCardDetails = tempData.filter((data) => data.default);\r\n\r\n        if (defaulCardDetails.length > 0) {\r\n          setDefaultCardDetails(defaulCardDetails[0]);\r\n          setShowCardComp(false);\r\n\r\n          let reduxData = {\r\n            defaulCardDetails: defaulCardDetails[0],\r\n          };\r\n\r\n          console.log(reduxData);\r\n          updateUserDetails(reduxData);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Toast({ type: \"error\", message: err.message || \"Error\" });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"Card\">\r\n        <div className=\"payment_input_inner\">\r\n          <label>Card Number</label>\r\n\r\n          {showCardComp ? (\r\n            <CardNumberElement\r\n              options={{\r\n                hidePostalCode: true,\r\n                style: {\r\n                  base: {\r\n                    fontSize: \"16px\",\r\n                    color: \"#424770\",\r\n                    \"::placeholder\": {\r\n                      color: \"#898989\",\r\n                      fontFamily: \"Montserrat\",\r\n                      fontSize: \"16px\",\r\n                    },\r\n                  },\r\n                  invalid: {\r\n                    color: \"#9e2146\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          ) : (\r\n            <p className=\"fs-20\">{`**** **** **** ${\r\n              defaulCardDetails?.card?.last4 || \"****\"\r\n            }`}</p>\r\n          )}\r\n\r\n          <div className=\"payment_expire_input\">\r\n            <div className=\"payment_expire_inner\">\r\n              <label>\r\n                Expiry Date\r\n                {showCardComp ? (\r\n                  <CardExpiryElement\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"16px\",\r\n                          color: \"#424770\",\r\n                          \"::placeholder\": {\r\n                            color: \"#898989\",\r\n                            fontFamily: \"Montserrat\",\r\n                            fontSize: \"16px\",\r\n                          },\r\n                        },\r\n                        invalid: {\r\n                          color: \"#9e2146\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <p className=\"fs-20\">{`${\r\n                    defaulCardDetails?.card?.exp_month || \"\"\r\n                  }/${defaulCardDetails?.card?.exp_year || \"\"}`}</p>\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div className=\"payment_expire_inner\">\r\n              {showCardComp && (\r\n                <label>\r\n                  CVC/CVV\r\n                  <CardCvcElement\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"16px\",\r\n                          color: \"#424770\",\r\n                          \"::placeholder\": {\r\n                            color: \"#898989\",\r\n                            fontFamily: \"Montserrat\",\r\n                            fontSize: \"16px\",\r\n                          },\r\n                        },\r\n                        invalid: {\r\n                          color: \"#9e2146\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </label>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {defaulCardDetails.default && (\r\n            <>\r\n              {showCardComp ? (\r\n                <div className=\"payment_change d-flex justify-content-end\">\r\n                  <button\r\n                    className=\"link-btn\"\r\n                    onClick={() => setShowCardComp(false)}\r\n                  >\r\n                    Reset Card\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"payment_change d-flex justify-content-end\">\r\n                  <button\r\n                    className=\"link-btn\"\r\n                    onClick={() => setShowCardComp(true)}\r\n                  >\r\n                    Edit Card\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {showCardComp && (\r\n            <div className=\"payment_input_check mt-3\">\r\n              <div className=\"payment_check_inner\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isRememberCard}\r\n                  onChange={() => setRememberCard(!isRememberCard)}\r\n                  id=\"remember_card\"\r\n                />\r\n                <label for=\"remember_card\">Remember My Card Details</label>\r\n              </div>\r\n              <div className=\"payment_check_inner\">\r\n                <Link to=\"/\">Session Cancellation Policy</Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"payment_input_outter_check \">\r\n          <div className=\"payment_terms\">\r\n            <input\r\n              type=\"checkbox\"\r\n              style={{ width: \"20px\", marginRight: \"10px\" }}\r\n              onChange={handleChange}\r\n              checked={agreedToTerms}\r\n            />\r\n            <label>\r\n              By proceeding, you accept the latest versions of our{\" \"}\r\n              <Link to=\"/\">Terms of Use</Link> and{\" \"}\r\n              <Link to=\"/\">Privacy Policy</Link>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"disclaimer\">\r\n          <p className=\"text-info d-flex alignn-items-center\">\r\n            <InfoIcon />\r\n            <span className=\"ml-2\">\r\n              Payment will happen only after the session is completed.\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        {/* {showCardComp && ( */}\r\n        <div className=\"submit\">\r\n          <button\r\n            type=\"click\"\r\n            className={`${!agreedToTerms ? \"disable-btn\" : \"\"}`}\r\n            disabled={!agreedToTerms}\r\n            onClick={handleSubmit}\r\n          >\r\n            Continue <ArrowHoverBlacked />\r\n          </button>\r\n        </div>\r\n        {/* )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sessionData: state.userReducer.sessionData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateUserDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst CardForm = connect(mapStateToProps, mapDispatchToProps)(CardFormFC);\r\n\r\nexport default CardForm;\r\n"],"sourceRoot":""}