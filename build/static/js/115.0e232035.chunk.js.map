{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/PaymentSectionSetup.js","pages/TrainerDashboard/Settings/PaymentHistory.js","assets/files/FindTrainer/Tick 1.svg"],"names":["info","label","value","PaymentSectionSetup","connect","dispatch","bindActionCreators","fileUploadApi","fileUpload","trainerSetupData","setTrainerSetupData","showSaveBtn","className","identityNameUS","name","onChange","e","target","map","list","index","type","placeholder","governmentIdNumber","image","files","undefined","fd","FormData","append","then","data","governmentId","urlPath","uploadAreaId","src","Tick","alt","href","insuranceNameUS","coverAmount","insurance","uploadArea","PaymentHistory","getStripeAccLink","trainerDetail","props","useState","isLoading","setLoading","setShowSaveBtn","useEffect","res","identityInfromation","insuranceInformation","identityName","identityNo","insuranceName","insuranceAmount","identity","hasAllFieldsFilled","Object","values","every","onClick","payload","updateTrainerAvailabilityApi","TrainerApi","body","api","catch","disabled","url","window","open"],"mappings":"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","file":"static/js/115.0e232035.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport \"./dropdown.scss\";\r\nimport BlueHoverButton from \"component/common/BlueArrowButton\";\r\nimport Tick from \"../../../../../assets/files/FindTrainer/Tick 1.svg\";\r\nimport { fileUpload } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nconst info = [\r\n  {\r\n    label: \"Passport\",\r\n    value: \"Passport\",\r\n  },\r\n  {\r\n    value: \"Driver's Licence\",\r\n    label: \"Driver's Licence\",\r\n  },\r\n  {\r\n    label: \"State Issued ID\",\r\n    value: \"State Issued ID\",\r\n  },\r\n];\r\n\r\nconst PaymentSectionSetupClass = ({\r\n  trainerSetupData,\r\n  setTrainerSetupData,\r\n  fileUploadApi,\r\n  showSaveBtn,\r\n}) => {\r\n  const uploadArea = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"insurance\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          insurance: data.urlPath,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadAreaId = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"identity\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          governmentId: data.urlPath,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"payment_container container\">\r\n        <div className=\"payment_wrapper\">\r\n          <div className=\"payment_heading\">\r\n            <h2>{\"Security & Payment Information\"}</h2>\r\n            <p>\r\n              The following information is mandatory to complete the onboarding\r\n              of all new trainers. Please ensure you check all the documents\r\n              before uploading them.\r\n            </p>\r\n          </div>\r\n          <div className=\"payment_inner \">\r\n            {/* <form> */}\r\n            <div className=\"payment_item1\">\r\n              <h6>Please upload any one of your US government issued IDâ€™s</h6>\r\n              <div>\r\n                <div className=\"inputs_payment1\">\r\n                  <select\r\n                    value={trainerSetupData.identityNameUS}\r\n                    name=\"identityNameUS\"\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        identityNameUS: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                  >\r\n                    {info.map((list, index) => (\r\n                      <option value={list.value} key={index}>\r\n                        {list.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add your ID Number\"\r\n                    value={trainerSetupData.governmentIdNumber}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        governmentIdNumber: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"governmentIdNumber\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"governmentId\"\r\n                    className=\"custom-file-input\"\r\n                    onChange={(e) => {\r\n                      uploadAreaId(e);\r\n                    }}\r\n                  />\r\n\r\n                  {trainerSetupData.governmentId ? (\r\n                    <a className=\"checkarrow pl-3\">\r\n                      <img src={Tick} alt=\"Uploaded\" />\r\n                    </a>\r\n                  ) : (\r\n                    <a className=\"checkarrow\">\r\n                      <BlueHoverButton />\r\n                    </a>\r\n                  )}\r\n                </div>\r\n                {trainerSetupData.governmentId && (\r\n                  <a href={trainerSetupData.governmentId} target=\"_blank\">\r\n                    View File\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"payment_item1\">\r\n              <h6>Please upload your insurance information</h6>\r\n              <div>\r\n                <div className=\"inputs_payment1\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Insurance Name\"\r\n                    value={trainerSetupData.insuranceNameUS}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        insuranceNameUS: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"insuranceNameUS\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add your Cover Amount\"\r\n                    value={trainerSetupData.coverAmount}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        coverAmount: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"coverAmount\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"insurance\"\r\n                    className=\"custom-file-input\"\r\n                    onChange={(e) => uploadArea(e)}\r\n                  />\r\n\r\n                  {trainerSetupData.insurance ? (\r\n                    <a className=\"checkarrow pl-3\">\r\n                      <img src={Tick} alt=\"Uploaded\" />\r\n                    </a>\r\n                  ) : (\r\n                    <a className=\"checkarrow\">\r\n                      <BlueHoverButton />\r\n                    </a>\r\n                  )}\r\n                </div>\r\n                {trainerSetupData.insurance && (\r\n                  <a href={trainerSetupData.insurance} target=\"_blank\">\r\n                    View File\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      fileUploadApi: fileUpload,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PaymentSectionSetup = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PaymentSectionSetupClass);\r\n\r\nexport default PaymentSectionSetup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PaymentSectionSetup from \"component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/PaymentSectionSetup\";\r\nimport ArrowHoverBlacked from \"component/common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getStripeAccLink, trainerDetail } from \"action/trainerAct\";\r\n\r\nconst PaymentHistoryFC = (props) => {\r\n  const [trainerSetupData, setTrainerSetupData] = useState({\r\n    identityNameUS: \"Passport\",\r\n    insuranceNameUS: \"\",\r\n    coverAmount: \"\",\r\n    governmentId: \"\",\r\n    governmentIdNumber: \"\",\r\n    insurance: \"\",\r\n  });\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [showSaveBtn, setShowSaveBtn] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    let payload = {\r\n      identityName: trainerSetupData.identityNameUS || \"\",\r\n      identityNo: trainerSetupData.governmentIdNumber || \"\",\r\n      insuranceName: trainerSetupData.insuranceNameUS || \"\",\r\n      insuranceAmount: trainerSetupData.coverAmount || \"\",\r\n      insurance: trainerSetupData.insurance || \"\",\r\n      identity: trainerSetupData.governmentId || \"\",\r\n    };\r\n\r\n    // console.log(payload);\r\n\r\n    const { updateTrainerAvailabilityApi } = TrainerApi;\r\n    updateTrainerAvailabilityApi.body = payload;\r\n    setLoading(true);\r\n    api({ ...updateTrainerAvailabilityApi })\r\n      .then(() => {\r\n        // getStripeURL();\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n\r\n  const getStripeURL = () => {\r\n    props\r\n      .getStripeAccLink()\r\n      .then((data) => {\r\n        const { url } = data;\r\n        url && window.open(url);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.trainerDetail().then((res) => {\r\n      let { identityInfromation = {}, insuranceInformation = {} } = res;\r\n      setTrainerSetupData({\r\n        ...trainerSetupData,\r\n        identityNameUS: identityInfromation\r\n          ? identityInfromation.identityName\r\n          : \"\",\r\n        governmentIdNumber: identityInfromation\r\n          ? identityInfromation.identityNo\r\n          : \"\",\r\n        insuranceNameUS: insuranceInformation\r\n          ? insuranceInformation.insuranceName\r\n          : \"\",\r\n        coverAmount: insuranceInformation\r\n          ? insuranceInformation.insuranceAmount\r\n          : \"\",\r\n        insurance: insuranceInformation ? insuranceInformation.insurance : \"\",\r\n        governmentId: identityInfromation ? identityInfromation.identity : \"\",\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const hasAllFieldsFilled = Object.values({ ...trainerSetupData }).every(\r\n    (data) => data !== \"\"\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <PaymentSectionSetup\r\n        trainerSetupData={trainerSetupData}\r\n        setTrainerSetupData={setTrainerSetupData}\r\n        showSaveBtn={() => setShowSaveBtn(true)}\r\n      />\r\n\r\n      <div className=\"action-btn d-flex justify-content-center\">\r\n        {showSaveBtn ? (\r\n          <button\r\n            onClick={handleSubmit}\r\n            type=\"submit\"\r\n            disabled={isLoading || !hasAllFieldsFilled}\r\n            className={`${isLoading ? \"loading\" : \"btn\"} normal-btn`}\r\n          >\r\n            {isLoading ? (\r\n              \"Loading...\"\r\n            ) : (\r\n              <a>\r\n                {\" \"}\r\n                Save Details\r\n                <ArrowHoverBlacked />\r\n              </a>\r\n            )}\r\n          </button>\r\n        ) : (\r\n          <button onClick={getStripeURL} type=\"submit\" className={`normal-btn`}>\r\n            <a>\r\n              {\" \"}\r\n              Edit Payment Details\r\n              <ArrowHoverBlacked />\r\n            </a>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getStripeAccLink,\r\n      trainerDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PaymentHistory = connect(null, mapDispatchToProps)(PaymentHistoryFC);\r\nexport default PaymentHistory;\r\n","export default __webpack_public_path__ + \"static/media/Tick 1.bf0e36e8.svg\";"],"sourceRoot":""}