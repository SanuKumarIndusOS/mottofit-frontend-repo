{"version":3,"sources":["component/UserDashBoard/UserDashboardCompontents/UserMyProfile/MyProfile.js","assets/files/SVG/Picture Icon.svg","assets/files/SVG/Profile Picture.svg"],"names":["options","label","value","name","MyProfile","connect","dispatch","bindActionCreators","getUserDetail","useState","firstName","lastName","email","phoneNo","paymentProfileId","mottoPasses","signUpType","userData","setUserData","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","then","data","className","src","style","objectFit","width","height","borderRadius","onClick","event","preventDefault","current","click","Profile","alt","ProfileAdd","type","ref","accept","onChange","file","target","files","substr","e","title","list","location","console","log","onKeyDown","keyCode","disableDropdown","countryCodeEditable","placeholder","country","inputProps"],"mappings":"kQAYMA,EAAU,CACd,CAAEC,MAAO,aAAcC,MAAO,aAAcC,KAAM,uBAClD,CACEF,MAAO,gBACPC,MAAO,gBACPC,KAAM,uBAER,CAAEF,MAAO,WAAYC,MAAO,WAAYC,KAAM,uBAC9C,CAAEF,MAAO,QAASC,MAAO,QAASC,KAAM,wBAsRpCC,EAAYC,YAAQ,MATC,SAACC,GAC1B,OAAOC,YACL,CACEC,+BAEFF,KAIcD,EAtQK,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,cACxB,EAAgCC,mBAAS,CACvCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,iBAAkB,GAClBC,YAAa,GACbC,WAAY,UAPd,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,EAAsCT,qBAAtC,mBACA,GADA,UAC0BA,sBAA1B,mBAAOU,EAAP,KAAcC,EAAd,KACA,EAAwCX,qBAAxC,mBAAOY,EAAP,KAAqBC,EAArB,KACMC,EAAeC,mBA4CrB,OA1CAC,qBAAU,WACR,GAAIN,EAAO,CACT,IAAMO,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACjBN,EAAgBI,EAAOG,SAEzBH,EAAOI,cAAcX,QAErBG,EAAgB,QAEjB,CAACH,IAEJM,qBAAU,WAKRjB,IAAgBuB,MAAK,SAACC,GACpBd,EAAYc,QAJb,IA6BD,mCACE,qBAAKC,UAAU,6BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,8CAEF,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,kBAAf,UACGZ,EACC,qBACEa,IAAKb,EACLc,MAAO,CACLC,UAAW,QACXC,MAAO,QACPC,OAAQ,QACRC,aAAc,SAEhBC,QAAS,WACPlB,EAAgB,SAIpB,sBAAKW,UAAU,iBAAf,UACE,wBACEO,QAAS,SAACC,GACRA,EAAMC,iBACNnB,EAAaoB,QAAQC,SAHzB,SAME,qBACEV,IAAKW,UACLC,IAAI,OACJX,MAAO,CACLC,UAAW,QACXC,MAAO,QACPC,OAAQ,aAId,qBACEJ,IAAKa,UACLD,IAAI,OACJX,MAAO,CACLC,UAAW,QACXC,MAAO,OACPC,OAAQ,OACRC,aAAc,SAEhBC,QAAS,SAACC,GACRA,EAAMC,iBACNnB,EAAaoB,QAAQC,cAM7B,uBACEI,KAAK,OACLC,IAAK1B,EACL2B,OAAO,UACPC,SAAU,SAACV,GACT,IAAMW,EAAOX,EAAMY,OAAOC,MAAM,GAC5BF,GAAmC,UAA3BA,EAAKJ,KAAKO,OAAO,EAAG,GAC9BnC,EAASgC,GAEThC,EAAS,SAIf,6DAGJ,qBAAKa,UAAU,mBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,+BACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACEe,KAAK,OACL9C,MAAOe,EAASP,UAChByC,SAAU,SAACK,GACTtC,EAAY,2BACPD,GADM,IAETP,UAAW8C,EAAEH,OAAOnD,UAGxBC,KAAK,iBAGT,sBAAK8B,UAAU,gBAAf,UACE,8CACA,cAAC,WAAD,CACEA,UAAU,kBACVwB,MAAM,kBACNC,KAAM1D,EACNE,MAAOe,EAAS0C,SAChBR,SAAU,SAACK,GACTtC,EAAY,2BACPD,GADM,IAET0C,SAAUH,EAAEtD,SAEd0D,QAAQC,IAAIL,EAAEtD,QAEhBC,KAAK,gBAGT,sBAAK8B,UAAU,gBAAf,UACE,mDACA,uBACEe,KAAK,OACL9C,MAAOe,EAAS0C,SAChBG,UAAW,SAACN,GAAD,OACK,IAAdA,EAAEO,QAAgBP,EAAEd,iBAAmB,SAI7C,qBAAKT,UAAU,gBAAf,SACE,8CAeF,sBAAKA,UAAU,gBAAf,UACE,2CACA,uBACEe,KAAK,OACL9C,MAAOe,EAASL,MAChBuC,SAAU,SAACK,GACTtC,EAAY,2BACPD,GADM,IAETL,MAAO4C,EAAEH,OAAOnD,eAKxB,sBAAK+B,UAAU,gBAAf,UACE,2CAEA,cAAC,IAAD,CACEe,KAAK,QACLgB,iBAAe,EAEfC,qBAAqB,EACrB/D,MAAOe,EAASJ,QAChBqD,YAAY,eACZC,QAAQ,KACRC,WAAY,CACVjE,KAAM,WAERA,KAAK,UACLgD,SAAU,SAACK,GAAD,OACRtC,EAAY,2BACPD,GADM,IAETJ,QAAS2C,WAKjB,sBAAKvB,UAAU,gBAAf,UACE,oDACA,uBAAOe,KAAK,YAEd,sBAAKf,UAAU,gBAAf,UACE,8CACA,uBAAOe,KAAK,wBAOxB,yBAAQf,UAAU,eAAlB,0BACe,cAAC,UAAD,sBAoBd7B,a,iCC5Sf,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,6C","file":"static/js/111.3119a24d.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Profile from \"../../../../assets/files/SVG/Profile Picture.svg\";\r\nimport ProfileAdd from \"../../../../assets/files/SVG/Picture Icon.svg\";\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { getUserDetail } from \"action/userAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nconst options = [\r\n  { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\r\n  {\r\n    label: \"New York City\",\r\n    value: \"New York City\",\r\n    name: \"serviceableLocation\",\r\n  },\r\n  { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\r\n  { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\r\n];\r\nconst gender = [\r\n  { value: \"male\", label: \"Male\" },\r\n  { value: \"female\", label: \"Female\" },\r\n];\r\n\r\n// firstName\r\n// lastName\r\n// password\r\n// email\r\n// phoneNo\r\n// signUpType\r\n// mottoPasses\r\n// status\r\n// paymentProfileId\r\nconst MyProfileClass = ({ getUserDetail }) => {\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNo: \"\",\r\n    paymentProfileId: \"\",\r\n    mottoPasses: \"\",\r\n    signUpType: \"email\",\r\n  });\r\n  const [getUserData, setGetUserData] = useState();\r\n  const [image, setImage] = useState();\r\n  const [previewImage, setPreviewTmage] = useState();\r\n  const fileInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewTmage(reader.result);\r\n      };\r\n      reader.readAsDataURL(image);\r\n    } else {\r\n      setPreviewTmage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  useEffect(() => {\r\n    getUserProfileData();\r\n  }, []);\r\n\r\n  function getUserProfileData() {\r\n    getUserDetail().then((data) => {\r\n      setUserData(data);\r\n    });\r\n  }\r\n\r\n  // const handleSaveChange = () => {\r\n  //     const { firstName } = userData;\r\n\r\n  //     let payload = {\r\n  //         firstName: firstName,\r\n  //     };\r\n\r\n  //     fetch(\"http://doodlebluelive.com:2307/v1/user/edit\", {\r\n  //         method: \"POST\",\r\n  //         headers: new Headers({\r\n  //             Authorization: localStorage.getItem(\"token\"),\r\n  //             \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  //         }),\r\n  //     })\r\n  //         .then((response) => response.json())\r\n  //         .then((data) => {\r\n  //             setUserData(data[\"data\"]);\r\n  //         });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"myprofile_outter_container\">\r\n        <div className=\"container\">\r\n          <div className=\"myprofile_inner_container\">\r\n            <div className=\"myprofile_header\">\r\n              <h2>My Profile</h2>\r\n            </div>\r\n            <div className=\"profile_wrapper\">\r\n              <div className=\"profile_grid\">\r\n                <div className=\"profile_pic_col\">\r\n                  <div className=\"profile_picture\">\r\n                    {previewImage ? (\r\n                      <img\r\n                        src={previewImage}\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          width: \"200px\",\r\n                          height: \"200px\",\r\n                          borderRadius: \"100px\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setPreviewTmage(null);\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <div className=\"combin_profile\">\r\n                        <button\r\n                          onClick={(event) => {\r\n                            event.preventDefault();\r\n                            fileInputRef.current.click();\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={Profile}\r\n                            alt=\"icon\"\r\n                            style={{\r\n                              objectFit: \"cover\",\r\n                              width: \"100px\",\r\n                              height: \"100px\",\r\n                            }}\r\n                          />\r\n                        </button>\r\n                        <img\r\n                          src={ProfileAdd}\r\n                          alt=\"icon\"\r\n                          style={{\r\n                            objectFit: \"cover\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            borderRadius: \"100px\",\r\n                          }}\r\n                          onClick={(event) => {\r\n                            event.preventDefault();\r\n                            fileInputRef.current.click();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <input\r\n                      type=\"file\"\r\n                      ref={fileInputRef}\r\n                      accept=\"image/*\"\r\n                      onChange={(event) => {\r\n                        const file = event.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                          setImage(file);\r\n                        } else {\r\n                          setImage(null);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <h5>Remove Profile Picture</h5>\r\n                  </div>\r\n                </div>\r\n                <div className=\"profile_form_col\">\r\n                  <div className=\"outter_profile_form\">\r\n                    <form>\r\n                      <div className=\"inner_profile_form\">\r\n                        <div className=\"input_profile\">\r\n                          <label>Name </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={userData.firstName}\r\n                            onChange={(e) => {\r\n                              setUserData({\r\n                                ...userData,\r\n                                firstName: e.target.value,\r\n                              });\r\n                            }}\r\n                            name=\"firstName\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Location </label>\r\n                          <Dropdown\r\n                            className=\"custom_dropdown\"\r\n                            title=\"Select Location\"\r\n                            list={options}\r\n                            value={userData.location}\r\n                            onChange={(e) => {\r\n                              setUserData({\r\n                                ...userData,\r\n                                location: e.value,\r\n                              });\r\n                              console.log(e.value);\r\n                            }}\r\n                            name=\"location\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Date of Birth </label>\r\n                          <input\r\n                            type=\"date\"\r\n                            value={userData.location}\r\n                            onKeyDown={(e) =>\r\n                              e.keyCode !== 8 ? e.preventDefault() : \"\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Gender </label>\r\n                          {/* <Dropdown\r\n                                        className=\"custom_dropdown\"\r\n                                        title=\"Select Gender\"\r\n                                        list={gender}\r\n                                        value={aboutTrainerData.gender}\r\n                                        onChange={(e) => {\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                gender: e.value,\r\n                                            });\r\n                                        }}\r\n                                        name=\"gender\"\r\n                                    /> */}\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Email </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={userData.email}\r\n                            onChange={(e) => {\r\n                              setUserData({\r\n                                ...userData,\r\n                                email: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Phone </label>\r\n\r\n                          <ReactPhoneInput\r\n                            type=\"phone\"\r\n                            disableDropdown\r\n                            // disableAreaCodes\r\n                            countryCodeEditable={false}\r\n                            value={userData.phoneNo}\r\n                            placeholder=\"Phone Number\"\r\n                            country=\"us\"\r\n                            inputProps={{\r\n                              name: \"phoneNo\",\r\n                            }}\r\n                            name=\"phoneNo\"\r\n                            onChange={(e) =>\r\n                              setUserData({\r\n                                ...userData,\r\n                                phoneNo: e,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Payment Method </label>\r\n                          <input type=\"text\" />\r\n                        </div>\r\n                        <div className=\"input_profile\">\r\n                          <label>Password </label>\r\n                          <input type=\"text\" />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button className=\"profile_save\">\r\n                SAVE CHANGES <BlueHoverButton />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getUserDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst MyProfile = connect(null, mapDispatchToProps)(MyProfileClass);\r\n\r\nexport default MyProfile;\r\n","export default __webpack_public_path__ + \"static/media/Picture Icon.3ba6c98d.svg\";","export default __webpack_public_path__ + \"static/media/Profile Picture.93cd6a53.svg\";"],"sourceRoot":""}