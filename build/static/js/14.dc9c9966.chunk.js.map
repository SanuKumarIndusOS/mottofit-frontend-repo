{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerCard/index.js","action/trainerAct.js","assets/files/SVG/Picture Icon.svg","assets/files/SVG/Profile Picture.svg","assets/files/SVG/dollar Icon.svg","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["CyanRadio","withStyles","root","color","cyan","checked","props","Accordion","title","children","useState","isOpenAccodion","setAccordion","selectedValue","setSelectedValue","className","onChange","event","target","value","onClick","TrainerCard","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","history","useHistory","useForm","handleSubmit","register","errors","error","setError","React","checkedBoxing","setCheckedBoxing","open","setOpen","checkedHIIT","setCheckedHIIT","checkedYoga","setCheckedYoga","checkedPilates","setCheckedPilates","areaOfExpertise","trainerbackgroundData","setTrainerbackgroundData","image","setImage","myRef","useRef","previewImage","setPreviewTmage","firstName","lastName","description","individualCharge","ssTwoPeopleCharge","ssThreePeopleCharge","ssFourPeopleCharge","classFlatRate","threeSessionRate","tenSessionRate","amtPerPerson","individualChargeTl","ssTwoPeopleChargeTl","ssThreePeopleChargeTl","ssFourPeopleChargeTl","classFlatRateTl","threeSessionRateTl","tenSessionRateTl","individualChargeVt","ssTwoPeopleChargeVt","ssThreePeopleChargeVt","ssFourPeopleChargeVt","classFlatRateVt","threeSessionRateVt","tenSessionRateVt","trainerData","setTrainerData","fileInputRef","useEffect","reader","FileReader","onloadend","result","console","log","readAsDataURL","handleInputChange","name","tempData","then","find","el","socialSessionPricing","oneOnOnePricing","classSessionPricing","inPeronAtClientLocationfor2People","inPeronAtClientLocationfor3People","inPeronAtClientLocationfor4People","inPeronAtTrainerLocationfor2People","inPeronAtTrainerLocationfor3People","inPeronAtTrainerLocationfor4People","virtualSessionfor2People","virtualSessionfor3People","virtualSessionfor4People","passRatefor3Session","passRatefor10Session","inPersonAtClientLocation","inPersonAtTrainerLocation","virtualSession","passRatefor3SessionAtTrainerLocation","passRatefor10SessionAtTrainerLocation","passRatefor3SessionAtVirtual","passRatefor10SessionAtVirtual","storeData","inPersonAtclientLocationfor15People","inPersonAttrainerLocationfor15People","virtualSessionfor15People","closeIcon","src","CloseIcon","alt","onClose","center","container","current","styles","boaderRadius","style","paddingLeft","alignleft","objectFit","backgroundColor","textTransform","fontWeight","width","height","borderRadius","preventDefault","click","Profile","ProfileAdd","type","ref","accept","file","files","substr","e","index","indexOf","splice","placeholder","maxLength","DollarIcon","undefined","headers","Authorization","localStorage","getItem","fd","FormData","append","axios","post","res","push","payload","Promise","resolve","TrainerActionType","getState","api","reject","getTrainerApi","TrainerApi","catch","err","getTrainerSessionDetails","getTrainerSessionApi","sessionData","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","length","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","CheckBoxIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps"],"mappings":"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","file":"static/js/14.dc9c9966.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport Profile from \"../../../../assets/files/SVG/Profile Picture.svg\";\r\nimport ProfileAdd from \"../../../../assets/files/SVG/Picture Icon.svg\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport DollarIcon from \"../../../../assets/files/SVG/dollar Icon.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./accordion.scss\";\r\nimport \"./styles.scss\";\r\nimport ArrowHoverBlacked from \"../../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\r\n// import { TrainerApi } from \"service/apiVariables\";\r\n// import { api } from \"service/api\";\r\nimport axios from \"axios\";\r\n// import { set } from \"date-fns\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport CloseIcon from \"../../../../assets/files/FindTrainer/Cross.svg\";\r\nimport \"./trainer.sass\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst CyanRadio = withStyles({\r\n    root: {\r\n        \"&$checked\": {\r\n            color: cyan[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\nconst TrainerCardFC = ({\r\n    updateTrainerDetails,\r\n    trainerPersonalData,\r\n    getTrainerDetails,\r\n}) => {\r\n    const history = useHistory();\r\n\r\n    const data = {\r\n        title: \"Time to build your Trainer Card!\",\r\n        describtion:\r\n            \" Heads up! Your trainer card is what clients will see when trainer results start filtering. Utilize keywords as anything you write here will also besearchable in our search box!\",\r\n        upload: \" Upload your profile picture, hotshot!\",\r\n        tellus: \" Tell us what you train! Select all the categories that apply\",\r\n        clientDesc:\r\n            \"Write a short and sweet description for clients to pick you in 100 characters\",\r\n        pricing: \"Tell us about your Pricing\",\r\n        pricingDesc:\r\n            \"Please fill only those fields relevant to the various kinds of training you offer. We recommend that the pricing of the social sessions (2-4 people) should provide savings to each client in comparison to a 1 on 1 individual session. The pricing for a 5-15 person group class is a flat rate that will be split evenly amongst each client.\",\r\n    };\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n    const [error, setError] = useState();\r\n    const [checkedBoxing, setCheckedBoxing] = React.useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [checkedHIIT, setCheckedHIIT] = React.useState(false);\r\n    const [checkedYoga, setCheckedYoga] = React.useState(false);\r\n    const [checkedPilates, setCheckedPilates] = React.useState(false);\r\n    const [trainerbackgroundData, setTrainerbackgroundData] = useState({\r\n        areaOfExpertise: [],\r\n    });\r\n\r\n    const [image, setImage] = useState();\r\n    const myRef = useRef(null);\r\n    const [selectedValue, setSelectedValue] = useState(\"\");\r\n    const [previewImage, setPreviewTmage] = useState();\r\n    const [trainerData, setTrainerData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        description: \"\",\r\n        individualCharge: \"\",\r\n        ssTwoPeopleCharge: \"\",\r\n        ssThreePeopleCharge: \"\",\r\n        ssFourPeopleCharge: \"\",\r\n        classFlatRate: \"\",\r\n        threeSessionRate: \"\",\r\n        tenSessionRate: \"\",\r\n        amtPerPerson: \"\",\r\n        individualChargeTl: \"\",\r\n        ssTwoPeopleChargeTl: \"\",\r\n        ssThreePeopleChargeTl: \"\",\r\n        ssFourPeopleChargeTl: \"\",\r\n        classFlatRateTl: \"\",\r\n        threeSessionRateTl: \"\",\r\n        tenSessionRateTl: \"\",\r\n        individualChargeVt: \"\",\r\n        ssTwoPeopleChargeVt: \"\",\r\n        ssThreePeopleChargeVt: \"\",\r\n        ssFourPeopleChargeVt: \"\",\r\n        classFlatRateVt: \"\",\r\n        threeSessionRateVt: \"\",\r\n        tenSessionRateVt: \"\",\r\n    });\r\n    const fileInputRef = useRef();\r\n\r\n    // for radio\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n                console.log(typeof image);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n\r\n    const handleChangeToTrainerProfile = () => {\r\n        // Update Area of Expertise\r\n\r\n        // TrainerCard Profile Upload\r\n\r\n        if (image !== undefined) {\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: localStorage.getItem(\"token\"),\r\n            };\r\n\r\n            const fd = new FormData();\r\n\r\n            fd.append(\"profilePicture\", image, image.name);\r\n            axios\r\n                .post(\"http://doodlebluelive.com:2307/v1/upload/image\", fd, {\r\n                    headers: headers,\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                });\r\n        }\r\n\r\n        // Redux logic\r\n        let storeData = {\r\n            details: { ...trainerData },\r\n        };\r\n        if (!trainerData.individualCharge) {\r\n            setError(true);\r\n            // alert(\"Please enter Individual Charge (atleast one)\");\r\n        } else {\r\n            updateTrainerDetails(storeData);\r\n            history.push(\"/trainer/setup\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n\r\n    const handleInputChange = ({ target: { name, value } }) => {\r\n        const tempData = {\r\n            ...trainerData,\r\n        };\r\n\r\n        tempData[name] = value;\r\n\r\n        setTrainerData(tempData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTrainerDetails().then((data) => {\r\n            if (\r\n                data[\"areaOfExpertise\"].find((el) => el === \"Strength & HIIT\")\r\n            ) {\r\n                console.log(\"Strength & HIIT\");\r\n                setCheckedHIIT(true);\r\n            }\r\n\r\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Boxing\")) {\r\n                console.log(\"Boxing\");\r\n                setCheckedBoxing(true);\r\n            }\r\n\r\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Yoga\")) {\r\n                console.log(\"Yoga\");\r\n                setCheckedYoga(true);\r\n            }\r\n\r\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Pilates\")) {\r\n                console.log(\"Pilates\");\r\n                setCheckedPilates(true);\r\n            }\r\n\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                description,\r\n                socialSessionPricing,\r\n                oneOnOnePricing,\r\n                classSessionPricing,\r\n            } = data || {};\r\n\r\n            if (data) {\r\n                // console.log(data);\r\n                const {\r\n                    inPeronAtClientLocationfor2People = \"\",\r\n                    inPeronAtClientLocationfor3People = \"\",\r\n                    inPeronAtClientLocationfor4People = \"\",\r\n                    inPeronAtTrainerLocationfor2People = \"\",\r\n                    inPeronAtTrainerLocationfor3People = \"\",\r\n                    inPeronAtTrainerLocationfor4People = \"\",\r\n                    virtualSessionfor2People = \"\",\r\n                    virtualSessionfor3People = \"\",\r\n                    virtualSessionfor4People = \"\",\r\n                } = socialSessionPricing || {};\r\n\r\n                const {\r\n                    passRatefor3Session = \"\",\r\n                    passRatefor10Session = \"\",\r\n                    inPersonAtClientLocation = \"\",\r\n                    inPersonAtTrainerLocation = \"\",\r\n                    virtualSession = \"\",\r\n                    passRatefor3SessionAtTrainerLocation = \"\",\r\n                    passRatefor10SessionAtTrainerLocation = \"\",\r\n                    passRatefor3SessionAtVirtual = \"\",\r\n                    passRatefor10SessionAtVirtual = \"\",\r\n                } = oneOnOnePricing || {};\r\n\r\n                const {\r\n                    inPersonAtclientLocationfor15People = \"\",\r\n                    inPersonAttrainerLocationfor15People = \"\",\r\n                    virtualSessionfor15People = \"\",\r\n                } = classSessionPricing || {};\r\n\r\n                const storeData = {\r\n                    details: {\r\n                        firstName,\r\n                        lastName,\r\n                        description,\r\n                        // individualCharge: inPersonAtClientLocation,\r\n                        // ssTwoPeopleCharge: inPeronAtClientLocationfor2People,\r\n                        // ssThreePeopleCharge: inPeronAtClientLocationfor3People,\r\n                        // ssFourPeopleCharge: inPeronAtClientLocationfor4People,\r\n                        // classFlatRate: inPersonAtclientLocationfor15People,\r\n                        // threeSessionRate: passRatefor3Session,\r\n                        // tenSessionRate: passRatefor10Session,\r\n                        // individualChargeTl: inPersonAtTrainerLocation,\r\n                        // ssTwoPeopleChargeTl: inPeronAtTrainerLocationfor2People,\r\n                        // ssThreePeopleChargeTl: inPeronAtTrainerLocationfor3People,\r\n                        // ssFourPeopleChargeTl: inPeronAtTrainerLocationfor4People,\r\n                        // classFlatRateTl: inPersonAttrainerLocationfor15People,\r\n                        // threeSessionRateTl: passRatefor3SessionAtTrainerLocation,\r\n                        // tenSessionRateTl: passRatefor10SessionAtTrainerLocation,\r\n                        // individualChargeVt: virtualSession,\r\n                        // ssTwoPeopleChargeVt: virtualSessionfor2People,\r\n                        // ssThreePeopleChargeVt: virtualSessionfor3People,\r\n                        // ssFourPeopleChargeVt: virtualSessionfor4People,\r\n                        // classFlatRateVt: virtualSessionfor15People,\r\n                        // threeSessionRateVt: passRatefor3SessionAtVirtual,\r\n                        // tenSessionRateVt: passRatefor10SessionAtVirtual,\r\n                    },\r\n                };\r\n\r\n                setTrainerData(storeData.details);\r\n\r\n                updateTrainerDetails(storeData);\r\n            }\r\n        });\r\n    }, []);\r\n    // const least = (e) => {\r\n    //     e.preventDefault();\r\n    //     const array = [\r\n    //         trainerData.individualChargeVt,\r\n    //         trainerData.individualChargeTl,\r\n    //         trainerData.individualCharge,\r\n    //     ];\r\n    //     const low = Math.min(...array);\r\n    //     console.log(low);\r\n    //     return <p>{low}</p>;\r\n    // };\r\n    const closeIcon = <img src={CloseIcon} alt=\"close\" />;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_container_card\">\r\n                <div className=\"container\">\r\n                    <div className=\"card_prev_link\">\r\n                        <div\r\n                            onClick={() => {\r\n                                setOpen(true);\r\n                            }}\r\n                            className=\"prev_link\"\r\n                        >\r\n                            Preview Your Trainer Card\r\n                        </div>\r\n                    </div>\r\n                    {open ? (\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                            center\r\n                            closeIcon={closeIcon}\r\n                            container={myRef.current}\r\n                            styles={{\r\n                                boaderRadius: \"10px\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"container\"\r\n                                style={{ paddingLeft: \"50px\" }}\r\n                            >\r\n                                <div\r\n                                    className=\"row m-0\"\r\n                                    style={{ alignleft: \"auto\" }}\r\n                                >\r\n                                    <div className=\"card\">\r\n                                        <img\r\n                                            className=\"card-img-top\"\r\n                                            src={\r\n                                                previewImage\r\n                                                    ? previewImage\r\n                                                    : \"https://www.solidbackgrounds.com/images/2048x1536/2048x1536-powder-blue-web-solid-color-background.jpg\"\r\n                                            }\r\n                                            style={\r\n                                                previewImage\r\n                                                    ? { objectFit: \"cover\" }\r\n                                                    : {\r\n                                                          objectFit: \"cover\",\r\n                                                          backgroundColor:\r\n                                                              \"blue\",\r\n                                                      }\r\n                                            }\r\n                                        />\r\n                                        <div className=\"card-body\">\r\n                                            <h3\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            >\r\n                                                {trainerData.firstName}\r\n                                                &nbsp;\r\n                                                {trainerData.lastName}\r\n                                            </h3>\r\n                                            <h6\r\n                                                style={{\r\n                                                    color: \"#898989\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                            >\r\n                                                {checkedHIIT &&\r\n                                                !checkedPilates &&\r\n                                                !checkedBoxing &&\r\n                                                !checkedYoga\r\n                                                    ? \"Strength & HIIT\"\r\n                                                    : checkedPilates &&\r\n                                                      !checkedHIIT &&\r\n                                                      !checkedBoxing &&\r\n                                                      !checkedYoga\r\n                                                    ? \"Pilates\"\r\n                                                    : checkedYoga &&\r\n                                                      !checkedHIIT &&\r\n                                                      !checkedBoxing &&\r\n                                                      !checkedPilates\r\n                                                    ? \"Yoga\"\r\n                                                    : checkedBoxing &&\r\n                                                      !checkedHIIT &&\r\n                                                      !checkedPilates &&\r\n                                                      !checkedYoga\r\n                                                    ? \"Boxing\"\r\n                                                    : checkedHIIT &&\r\n                                                      checkedPilates &&\r\n                                                      !checkedBoxing &&\r\n                                                      !checkedYoga\r\n                                                    ? \"Strength & HIIT,Pilates\"\r\n                                                    : checkedHIIT &&\r\n                                                      checkedYoga &&\r\n                                                      !checkedPilates &&\r\n                                                      !checkedBoxing\r\n                                                    ? \"Strength & HIIT,Yoga\"\r\n                                                    : checkedHIIT &&\r\n                                                      checkedBoxing &&\r\n                                                      !checkedPilates &&\r\n                                                      !checkedYoga\r\n                                                    ? \"Strength & HIIT,Boxing\"\r\n                                                    : checkedYoga &&\r\n                                                      checkedBoxing &&\r\n                                                      !checkedPilates &&\r\n                                                      !checkedHIIT\r\n                                                    ? \"Yoga,Boxing\"\r\n                                                    : checkedYoga &&\r\n                                                      checkedPilates &&\r\n                                                      !checkedBoxing &&\r\n                                                      !checkedHIIT\r\n                                                    ? \"Yoga,Pilates\"\r\n                                                    : checkedBoxing &&\r\n                                                      checkedPilates &&\r\n                                                      !checkedHIIT &&\r\n                                                      !checkedYoga\r\n                                                    ? \"Boxing,Pilates\"\r\n                                                    : checkedHIIT &&\r\n                                                      checkedPilates &&\r\n                                                      checkedBoxing &&\r\n                                                      !checkedYoga\r\n                                                    ? \"Strength & HIIT,Pilates,Boxing\"\r\n                                                    : checkedHIIT &&\r\n                                                      checkedPilates &&\r\n                                                      checkedYoga &&\r\n                                                      !checkedBoxing\r\n                                                    ? \"Strength & HIIT,Pilates,Yoga\"\r\n                                                    : checkedYoga &&\r\n                                                      checkedPilates &&\r\n                                                      checkedBoxing &&\r\n                                                      !checkedHIIT\r\n                                                    ? \"Yoga,Pilates,Boxing\"\r\n                                                    : checkedYoga &&\r\n                                                      checkedHIIT &&\r\n                                                      checkedBoxing &&\r\n                                                      !checkedPilates\r\n                                                    ? \"Yoga,Strength & HIIT,Boxing\"\r\n                                                    : checkedYoga &&\r\n                                                      checkedHIIT &&\r\n                                                      checkedBoxing &&\r\n                                                      checkedPilates\r\n                                                    ? \"Yoga,Strength & HIIT,Boxing,Pilates\"\r\n                                                    : \"Not Added\"}\r\n                                            </h6>\r\n                                            <p style={{ color: \"#898989\" }}>\r\n                                                {trainerData.description}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"card-button\">\r\n                                            <button\r\n                                                style={{\r\n                                                    backgroundColor: \"#53BFD2\",\r\n                                                }}\r\n                                            >\r\n                                                book a session\r\n                                                <p>\r\n                                                    from{\" \"}\r\n                                                    <span>\r\n                                                        $\r\n                                                        {\r\n                                                            trainerData.individualCharge\r\n                                                        }\r\n                                                    </span>\r\n                                                </p>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    ) : null}\r\n                    <div className=\"card_outter\">\r\n                        <div className=\"card_outter_wrapper\">\r\n                            <h2>{data.title}</h2>\r\n                            <p>{data.describtion}</p>\r\n                        </div>\r\n                        <div className=\"card_inner \">\r\n                            <div className=\"card_form_outter\">\r\n                                <form>\r\n                                    <div className=\"card_item1\">\r\n                                        {previewImage ? (\r\n                                            <img\r\n                                                src={previewImage}\r\n                                                style={{\r\n                                                    objectFit: \"cover\",\r\n                                                    width: \"200px\",\r\n                                                    height: \"200px\",\r\n                                                    borderRadius: \"100px\",\r\n                                                }}\r\n                                                onClick={() => {\r\n                                                    setPreviewTmage(null);\r\n                                                }}\r\n                                            />\r\n                                        ) : (\r\n                                            <div className=\"combin_profile\">\r\n                                                <button\r\n                                                    onClick={(event) => {\r\n                                                        event.preventDefault();\r\n                                                        fileInputRef.current.click();\r\n                                                    }}\r\n                                                >\r\n                                                    <img\r\n                                                        src={Profile}\r\n                                                        alt=\"icon\"\r\n                                                        style={{\r\n                                                            objectFit: \"cover\",\r\n                                                            width: \"100px\",\r\n                                                            height: \"100px\",\r\n                                                        }}\r\n                                                    />\r\n                                                </button>\r\n                                                <img\r\n                                                    src={ProfileAdd}\r\n                                                    alt=\"icon\"\r\n                                                    style={{\r\n                                                        objectFit: \"cover\",\r\n                                                        width: \"20px\",\r\n                                                        height: \"20px\",\r\n                                                        borderRadius: \"100px\",\r\n                                                    }}\r\n                                                    onClick={(event) => {\r\n                                                        event.preventDefault();\r\n                                                        fileInputRef.current.click();\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            ref={fileInputRef}\r\n                                            accept=\"image/*\"\r\n                                            onChange={(event) => {\r\n                                                const file =\r\n                                                    event.target.files[0];\r\n                                                if (\r\n                                                    file &&\r\n                                                    file.type.substr(0, 5) ===\r\n                                                        \"image\"\r\n                                                ) {\r\n                                                    setImage(file);\r\n                                                } else {\r\n                                                    setImage(null);\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                        <h5>{data.upload}</h5>\r\n                                    </div>\r\n                                    <div className=\"card_item2 \">\r\n                                        <div className=\"card_innerItem\">\r\n                                            <h6>First Name</h6>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"firstName\"\r\n                                                onChange={handleInputChange}\r\n                                                value={trainerData.firstName}\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"card_innerItem\">\r\n                                            <h6>Last Name</h6>\r\n                                            <input\r\n                                                name=\"lastName\"\r\n                                                onChange={handleInputChange}\r\n                                                value={trainerData.lastName}\r\n                                                style={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card_item3\">\r\n                                        <h6>{data.tellus}</h6>\r\n\r\n                                        <div className=\"inputs_experience\">\r\n                                            <Checkbox\r\n                                                checked={checkedHIIT}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedHIIT(\r\n                                                        e.target.checked\r\n                                                    );\r\n                                                    console.log(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Strength & HIIT\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    } else {\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Strength & HIIT\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    }\r\n\r\n                                                    console.log(\r\n                                                        trainerbackgroundData\r\n                                                    );\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Strength & HIIT\r\n                                            </div>\r\n                                            <Checkbox\r\n                                                checked={checkedBoxing}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedBoxing(\r\n                                                        e.target.checked\r\n                                                    );\r\n                                                    console.log(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        console.log(\r\n                                                            \"setBoxing\"\r\n                                                        );\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Boxing\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    } else {\r\n                                                        console.log(\r\n                                                            \"unsetBoxing\"\r\n                                                        );\r\n\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Boxing\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    }\r\n\r\n                                                    console.log(\r\n                                                        trainerbackgroundData\r\n                                                    );\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Boxing\r\n                                            </div>\r\n                                            <Checkbox\r\n                                                checked={checkedYoga}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedYoga(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Yoga\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n                                                    } else {\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Yoga\"\r\n                                                            );\r\n\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Yoga\r\n                                            </div>\r\n                                            <Checkbox\r\n                                                checked={checkedPilates}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedPilates(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Pilates\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n                                                    } else {\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Pilates\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Pilates\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card_item4\">\r\n                                        <h6>{data.clientDesc}</h6>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            value={trainerData.description}\r\n                                            name=\"description\"\r\n                                            placeholder=\"Give us your elevator pitch! This is all clients will see on the search results page until they click into your full profile.\"\r\n                                            onChange={handleInputChange}\r\n                                            maxLength=\"100\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card_item5\">\r\n                                        <h6>Tell us about your Pricing</h6>\r\n                                        <p>{data.pricingDesc}</p>\r\n                                    </div>\r\n                                    <div className=\"card_item6\">\r\n                                        <Accordion title=\"In Person Training Session Pricing (at the clients location)\">\r\n                                            <div className=\"card_accordion\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Individual Charge\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.individualCharge\r\n                                                        }\r\n                                                        name=\"individualCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 2 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssTwoPeopleCharge\r\n                                                        }\r\n                                                        name=\"ssTwoPeopleCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 3 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssThreePeopleCharge\r\n                                                        }\r\n                                                        name=\"ssThreePeopleCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 4 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssFourPeopleCharge\r\n                                                        }\r\n                                                        name=\"ssFourPeopleCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.classFlatRate\r\n                                                        }\r\n                                                        name=\"classFlatRate\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"3 Session Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.threeSessionRate\r\n                                                        }\r\n                                                        name=\"threeSessionRate\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"10 Session Pass Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.tenSessionRate\r\n                                                        }\r\n                                                        name=\"tenSessionRate\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion>\r\n                                        <Accordion title=\"In Person Training Session Pricing (at your location)\">\r\n                                            <div className=\"card_accordion\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Individual Charge\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.individualChargeTl\r\n                                                        }\r\n                                                        name=\"individualChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 2 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssTwoPeopleChargeTl\r\n                                                        }\r\n                                                        name=\"ssTwoPeopleChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 3 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssThreePeopleChargeTl\r\n                                                        }\r\n                                                        name=\"ssThreePeopleChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 4 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssFourPeopleChargeTl\r\n                                                        }\r\n                                                        name=\"ssFourPeopleChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.classFlatRateTl\r\n                                                        }\r\n                                                        name=\"classFlatRateTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"3 Session Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.threeSessionRateTl\r\n                                                        }\r\n                                                        name=\"threeSessionRateTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"10 Session Pass Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.tenSessionRateTl\r\n                                                        }\r\n                                                        name=\"tenSessionRateTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion>\r\n                                        <Accordion title=\"Virtual Training Session Pricing\">\r\n                                            <div className=\"card_accordion\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Individual Charge\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.individualChargeVt\r\n                                                        }\r\n                                                        name=\"individualChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 2 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssTwoPeopleChargeVt\r\n                                                        }\r\n                                                        name=\"ssTwoPeopleChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 3 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssThreePeopleChargeVt\r\n                                                        }\r\n                                                        name=\"ssThreePeopleChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total for 4 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssFourPeopleChargeVt\r\n                                                        }\r\n                                                        name=\"ssFourPeopleChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.classFlatRateVt\r\n                                                        }\r\n                                                        name=\"classFlatRateVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"3 Session Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.threeSessionRateVt\r\n                                                        }\r\n                                                        name=\"threeSessionRateVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"10 Session Pass Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.tenSessionRateVt\r\n                                                        }\r\n                                                        name=\"tenSessionRateVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion>\r\n                                    </div>\r\n                                    <div className=\"error_span\">\r\n                                        {error ? (\r\n                                            <span>\r\n                                                Please enter Individual Charge\r\n                                                (atleast one)\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </div>\r\n\r\n                                    <div className=\"submit_button\">\r\n                                        <button\r\n                                            onClick={handleSubmit(\r\n                                                handleChangeToTrainerProfile\r\n                                            )}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Continue To profile{\" \"}\r\n                                            <ArrowHoverBlacked />\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Accordion({ title, children }) {\r\n    const [isOpenAccodion, setAccordion] = useState(false);\r\n\r\n    // for radio button\r\n    const [selectedValue, setSelectedValue] = useState(\"a\");\r\n\r\n    // for radio\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"accordion-wrapper\">\r\n            <div className=\"cyanRadio_wrapper\">\r\n                <CyanRadio\r\n                    checked={selectedValue === \"\"}\r\n                    onChange={handleChange}\r\n                    onClick={() => setAccordion(!isOpenAccodion)}\r\n                />\r\n                <h6\r\n                    className={`accordion-title ${\r\n                        isOpenAccodion ? \"open\" : \"\"\r\n                    }`}\r\n                    onClick={() => setAccordion(!isOpenAccodion)}\r\n                >\r\n                    {title}\r\n                </h6>\r\n            </div>\r\n            <div\r\n                className={`accordion-item ${\r\n                    !isOpenAccodion ? \"collapsed\" : \"\"\r\n                }`}\r\n            >\r\n                <div className=\"accordion-content\">{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst TrainerCard = connect(mapStateToProps, mapDispatchToProps)(TrainerCardFC);\r\n\r\nexport default TrainerCard;\r\n","import { TrainerActionType } from \"service/actionType\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\n\r\nexport const updateTrainerDetails = (payload) => (dispatch) => {\r\n  return new Promise((resolve) => {\r\n    dispatch({ type: TrainerActionType.updateTrainerDetails, payload });\r\n\r\n    resolve(true);\r\n  });\r\n};\r\n\r\nexport const getTrainerDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerApi })\r\n      .then(({ data }) => {\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getTrainerSessionDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerSessionApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerSessionApi })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { sessionData: data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Picture Icon.3ba6c98d.svg\";","export default __webpack_public_path__ + \"static/media/Profile Picture.93cd6a53.svg\";","export default __webpack_public_path__ + \"static/media/dollar Icon.4c16bd4d.svg\";","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}