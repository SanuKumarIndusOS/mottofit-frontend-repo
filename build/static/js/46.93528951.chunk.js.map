{"version":3,"sources":["component/TrainerOnBoard/TrainerAboutYou/index.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Drop Down 4.svg"],"names":["AboutTrainer","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","useForm","register","errors","handleSubmit","useState","location","dob","email","gender","phone","websiteURL","instagram","firstName","aboutTrainerData","setAboutTrainerData","useEffect","Object","keys","length","tempData","websiteLink","instaHandle","className","placeholder","type","name","onChange","e","target","value","ref","required","minLength","message","disabled","selected","src","DropDown","alt","pattern","Web","Instagram","onClick","storeData","console","log","history","push","WaterMark"],"mappings":"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","file":"static/js/46.93528951.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Instagram from \"../../../assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"../../../assets/files/SVG/Web Icon.svg\";\r\nimport DropDown from \"../../../assets/files/SVG/Drop Down 4.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import validation from \"../Validation/validation\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"helpers\";\r\n\r\nconst AboutTrainerFC = ({\r\n    updateTrainerDetails,\r\n    details,\r\n    trainerPersonalData,\r\n}) => {\r\n    //   const [location, setLocation] = useState(\"\");\r\n    //   const [dob, setDob] = useState(0 - 0 - 0);\r\n    //   const [email, setEmail] = useState(\"\");\r\n    //   const [gender, setGender] = useState(\"\");\r\n    //   const [phone, setPhone] = useState(\"\");\r\n    //   const [websiteURL, setWebsiteURL] = useState(\"\");\r\n    //   const [instagram, setInstagram] = useState(\"\");\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n    const [aboutTrainerData, setAboutTrainerData] = useState({\r\n        location: \"\",\r\n        dob: \"\",\r\n        email: \"\",\r\n        gender: \"\",\r\n        phone: \"\",\r\n        websiteURL: \"\",\r\n        instagram: \"\",\r\n        firstName: \"\",\r\n    });\r\n    const [error, setError] = useState({});\r\n\r\n    // const history = useHistory();\r\n\r\n    const handleTrainerBackground = () => {\r\n        // history.push(\"/trainer/background\");\r\n        // console.log(aboutTrainerData);\r\n\r\n        const storeData = {\r\n            details: {\r\n                ...details,\r\n                firstName: aboutTrainerData.firstName,\r\n                dob: aboutTrainerData.dob,\r\n                email: aboutTrainerData.email,\r\n                gender: aboutTrainerData.gender,\r\n                phone: aboutTrainerData.phone,\r\n                location: aboutTrainerData.location,\r\n                websiteLink: aboutTrainerData.websiteURL,\r\n                instaHandle: aboutTrainerData.instagram,\r\n            },\r\n        };\r\n\r\n        console.log(storeData, aboutTrainerData);\r\n\r\n        // setError(validation(aboutTrainerData));\r\n\r\n        history.push(`/trainer/background`);\r\n\r\n        updateTrainerDetails(storeData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(details).length > 3) {\r\n            let tempData = {\r\n                location: details.location,\r\n                dob: details.dob,\r\n                email: details.email,\r\n                gender: details.gender,\r\n                phone: details.phone,\r\n                websiteURL: details.websiteLink,\r\n                instagram: details.instaHandle,\r\n                firstName: details.firstName,\r\n            };\r\n\r\n            setAboutTrainerData(tempData);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container main\">\r\n                <div className=\"wrapper_about\">\r\n                    <h2>Tell us a little bit about you</h2>\r\n                    <p>\r\n                        *Lorem Ipsum is simply dummy text of the printing and\r\n                        typesetting industry. Lorem ipsum has been the. *All\r\n                        these fields are mandatory.{\" \"}\r\n                    </p>\r\n                    <div className=\"outter_form\">\r\n                        <form className=\"wrapper_inputs\">\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Name*</label>\r\n                                <input\r\n                                    placeholder=\"Name\"\r\n                                    type=\"name\"\r\n                                    name=\"name\"\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            firstName: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    value={aboutTrainerData.firstName}\r\n                                    ref={register({\r\n                                        required: \"This filed is required\",\r\n                                        minLength: {\r\n                                            value: 2,\r\n                                            message: \"Enter a valid name\",\r\n                                        },\r\n                                    })}\r\n                                />\r\n                                {errors.name && (\r\n                                    <span>{errors.name.message}</span>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label className=\"bg_down\">Location*</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <select\r\n                                        required\r\n                                        value={aboutTrainerData.location}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                location: e.target.value,\r\n                                            })\r\n                                        }\r\n                                        name=\"location\"\r\n                                        ref={register({\r\n                                            required:\r\n                                                \"Please select the location\",\r\n                                        })}\r\n                                    >\r\n                                        <option value=\"\" disabled selected>\r\n                                            Select a Motto City\r\n                                        </option>\r\n                                        <option>New York</option>\r\n                                        <option>Miami</option>\r\n                                        <option>Hampton</option>\r\n                                        <option>Palm Beach</option>\r\n                                    </select>\r\n                                    <img src={DropDown} alt=\"icon\" />\r\n                                </div>\r\n                                {errors.location && (\r\n                                    <span>{errors.location.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Date of Birth*</label>\r\n                                <input\r\n                                    placeholder=\"DOB\"\r\n                                    type=\"date\"\r\n                                    value={aboutTrainerData.dob}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            dob: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"dob\"\r\n                                    ref={register({\r\n                                        required: \"Please select the DOB\",\r\n                                    })}\r\n                                />\r\n                                {errors.dob && (\r\n                                    <span>{errors.dob.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Gender*</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <select\r\n                                        required\r\n                                        // name=\"gender\"\r\n                                        // id=\"gender\"\r\n                                        value={aboutTrainerData.gender}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                gender: e.target.value,\r\n                                            })\r\n                                        }\r\n                                        name=\"gender\"\r\n                                        ref={register({\r\n                                            required:\r\n                                                \"Please select the gender\",\r\n                                        })}\r\n                                    >\r\n                                        <option value=\"\" disabled selected>\r\n                                            Select your Gender\r\n                                        </option>\r\n                                        <option>Male</option>\r\n                                        <option>Female</option>\r\n                                        <option>Others</option>\r\n                                    </select>\r\n                                    <img src={DropDown} alt=\"icon\" />\r\n                                </div>\r\n                                {errors.gender && (\r\n                                    <span>{errors.gender.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Email*</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    value={aboutTrainerData.email}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            email: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"email\"\r\n                                    ref={register({\r\n                                        pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i,\r\n                                        required: true,\r\n                                        minLength: 8,\r\n                                    })}\r\n                                />\r\n                                {/* {error.email && (<span>{error.email}</span>)} */}\r\n\r\n                                {errors.email?.type === \"required\" && (\r\n                                    <span>This input is required</span>\r\n                                )}\r\n                                {errors.email?.type === \"minLength\" && (\r\n                                    <span>\r\n                                        This field should contain greater then 8\r\n                                        charater\r\n                                    </span>\r\n                                )}\r\n                                {errors.email?.type === \"pattern\" && (\r\n                                    <span>\r\n                                        Please enter a valid email address\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Phone*</label>\r\n                                <input\r\n                                    placeholder=\"Phone Number\"\r\n                                    type=\"phone\"\r\n                                    value={aboutTrainerData.phone}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            phone: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"phone\"\r\n                                    ref={register({\r\n                                        pattern: /^[0-9]*$/i,\r\n                                        required: true,\r\n                                        minLength: 10,\r\n                                    })}\r\n                                />\r\n                                {errors.phone?.type === \"required\" && (\r\n                                    <span>This input is required</span>\r\n                                )}\r\n                                {errors.phone?.type === \"minLength\" && (\r\n                                    <span>\r\n                                        Phone Number should contain 10 digits\r\n                                    </span>\r\n                                )}\r\n                                {errors.phone?.type === \"pattern\" && (\r\n                                    <span>\r\n                                        Please enter a valid phone number\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Website</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <input\r\n                                        placeholder=\"Add your website\"\r\n                                        type=\"text\"\r\n                                        value={aboutTrainerData.websiteURL}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                websiteURL: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <img src={Web} alt=\"icon\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Instagram</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <input\r\n                                        placeholder=\"Add your Instagram Handle\"\r\n                                        type=\"text\"\r\n                                        value={aboutTrainerData.instagram}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                instagram: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <img src={Instagram} alt=\"icon\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"submit_button\">\r\n                                <Link\r\n                                    type=\"submit\"\r\n                                    // to={{\r\n                                    //     pathname: \"/trainer/background\",\r\n                                    //     state: aboutTrainerData,\r\n                                    // }}\r\n                                    // onClick={handleTrainerBackground}\r\n\r\n                                    //react hook form\r\n                                    onClick={handleSubmit(\r\n                                        handleTrainerBackground\r\n                                    )}\r\n                                >\r\n                                    Continue\r\n                                    <ArrowHoverBlacked />\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <img\r\n                        src={WaterMark}\r\n                        alt=\"icon\"\r\n                        className=\"about_watermark\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst AboutTrainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AboutTrainerFC);\r\n\r\nexport default AboutTrainer;\r\n","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Drop Down 4.50302f8e.svg\";"],"sourceRoot":""}