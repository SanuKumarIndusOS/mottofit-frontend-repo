{"version":3,"sources":["component/TrainerProfile/UserScheduler/UserScheduler.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["timeZone","label","value","UserScheduler","props","early_bird","EarlyInActive","rise_shine","RiseInActive","mid_day","MidInActive","mid_day_2","happy_hour","HappyInActive","never_too_late","NeverTooInActive","React","useState","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","setSelectedCell","userSlots","setuserSlots","cells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","token","localStorage","getItem","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","ta","keys","map","item","a","push","temp","date","column","key","row","selectedCell","start","end","now","clone","dates","isSameOrBefore","format","add","length","selectUserSlot","cellCollection","tss","newTime","ts","valueOf","find","el","parentCallback","prevTime","subtract","tableData2","startDate","endDate","fetch","id","method","headers","Authorization","then","response","json","style","height","src","width","wordWrap","lineHeight","paddingLeft","paddingRight","paddingBottom","fontFamily","fontWeight","color","margin","className","slice","l","backgroundColor","onClick","isAfter","BackIcon","cursor","disabled","opacity","NextIcon","title","list","onChange","e","console","log","name","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/90.3e7abe25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\n// import BlueArrowButton from \"../../common/BlueArrowButton\";\r\nimport \"./styles.scss\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport { history } from \"helpers\";\r\nimport EarlyInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg\";\r\nimport RiseInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg\";\r\nimport MidInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg\";\r\nimport HappyInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg\";\r\nimport NeverTooInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg\";\r\n\r\nconst timeZone = [\r\n    {\r\n        label: \"Early Bird\",\r\n        value: \"EarlyBird\",\r\n    },\r\n    {\r\n        label: \"Rise & Shine\",\r\n        value: \"RiseAndShine\",\r\n    },\r\n    {\r\n        label: \"Mid-Day Break\",\r\n        value: \"MidDayBreak1\",\r\n    },\r\n    {\r\n        label: \"Mid-Day Lunchtime\",\r\n        value: \"MidDayBreak2\",\r\n    },\r\n    {\r\n        label: \"Happy Hour\",\r\n        value: \"HappyHours\",\r\n    },\r\n    {\r\n        label: \"Never Too Late\",\r\n        value: \"NeverTooLate\",\r\n    },\r\n];\r\nfunction UserScheduler(props) {\r\n    //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    let early_bird = [\r\n        \"05:00 AM\",\r\n        \"05:30 AM\",\r\n        \"06:00 AM\",\r\n        \"06:30 AM\",\r\n        \"07:00 AM\",\r\n        \"07:30 AM\",\r\n        \"Early Bird\",\r\n        EarlyInActive,\r\n    ];\r\n\r\n    let rise_shine = [\r\n        \"08:00 AM\",\r\n        \"08:30 AM\",\r\n        \"09:00 AM\",\r\n        \"09:30 AM\",\r\n        \"10:00 AM\",\r\n        \"10:30 AM\",\r\n        \"Rise & Shine\",\r\n        RiseInActive,\r\n    ]; //1\r\n\r\n    let mid_day = [\r\n        \"11:00 AM\",\r\n        \"11:30 AM\",\r\n        \"12:00 PM\",\r\n        \"12:30 PM\",\r\n        \"01:00 PM\",\r\n        \"01:30 PM\",\r\n        \"Mid-Day Break\",\r\n        MidInActive,\r\n    ]; //230 - 4\r\n\r\n    let mid_day_2 = [\r\n        \"02:00 PM\",\r\n        \"02:30 PM\",\r\n        \"03:00 PM\",\r\n        \"03:30 PM\",\r\n        \"04:00 PM\",\r\n        \"04:30 PM\",\r\n        \"Mid-Day Lunchtime\",\r\n        MidInActive,\r\n    ];\r\n\r\n    let happy_hour = [\r\n        \"05:00 PM\",\r\n        \"05:30 PM\",\r\n        \"06:00 PM\",\r\n        \"06:30 PM\",\r\n        \"07:00 PM\",\r\n        \"07:30 PM\",\r\n        \"Happy Hour\",\r\n        HappyInActive,\r\n    ];\r\n\r\n    let never_too_late = [\r\n        \"08:00 PM\",\r\n        \"08:30 PM\",\r\n        \"09:00 PM\",\r\n        \"09:30 PM\",\r\n        \"10:00 PM\",\r\n        \"10:30 PM\",\r\n        \"Never Too Late\",\r\n        NeverTooInActive,\r\n    ];\r\n\r\n    const [time, setTime] = React.useState(early_bird);\r\n    const [TimeSlot, setTimeSlot] = React.useState(\"EarlyBird\");\r\n\r\n    const [cellData, setCellData] = React.useState([]);\r\n    const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n    const [userSlots, setuserSlots] = React.useState([]);\r\n\r\n    const [cells, setCells] = React.useState([\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ]);\r\n\r\n    const [cal, setCal] = React.useState([]);\r\n    const [startWeek, setstartWeek] = React.useState(\r\n        moment().startOf(\"isoWeek\")\r\n    );\r\n    const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var dt = new Object();\r\n    var lt = new Object();\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const [aslot, setAslot] = React.useState();\r\n    const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n\r\n        // console.log(TimeSlot);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        setSelectedCell([]);\r\n        //console.log(\"time changed\");\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, [time]);\r\n\r\n    React.useEffect(() => {\r\n        Object.keys(data).map((item) => {\r\n            // console.log(data[item][\"slotDate\"], data[item][\"availabileTimes\"]);\r\n            dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n        });\r\n        //console.log(dt);\r\n\r\n        var ta;\r\n        Object.keys(dt).map((item) => {\r\n            ta = [];\r\n            dt[item].map((a) => {\r\n                // ta.push(a[\"end\"]);\r\n                ta.push(a[\"start\"]);\r\n                // console.log(ta, item);\r\n            });\r\n\r\n            lt[item] = ta;\r\n        });\r\n\r\n        setAslot(lt);\r\n        setAslotKeys(Object.keys(lt));\r\n        //  console.log(lt);\r\n    }, [data]);\r\n\r\n    React.useEffect(() => {\r\n        // console.log(cal);\r\n        setCellData([]);\r\n        time.map((time) => {\r\n            var temp = [];\r\n            cal.map((date) => {\r\n                // temp.push(date + \" \" + time);\r\n                temp.push({ date: date, time: time });\r\n            });\r\n\r\n            setCellData((cellData) => [...cellData, temp]);\r\n        });\r\n    }, [cal]);\r\n\r\n    React.useEffect(() => {\r\n        //    (\"change\", cells, cellData);\r\n        setSelectedCell([]);\r\n        cells.map((column, key) => {\r\n            var temp = [];\r\n            if (key !== 0) {\r\n                // (key);\r\n\r\n                column.map((row, key) => {\r\n                    if (row === true) {\r\n                        temp.push(key - 1);\r\n                    }\r\n                });\r\n\r\n                //   console.log(temp);\r\n                setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n            }\r\n        });\r\n    }, [cells]);\r\n\r\n    const PreviousWeek = () => {\r\n        //Reset current cells\r\n\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.subtract(7, \"days\"));\r\n        setendWeek(endWeek.subtract(7, \"days\"));\r\n        //console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    };\r\n\r\n    React.useEffect(() => {}, [startWeek]);\r\n\r\n    const NextWeek = () => {\r\n        //Reset current cells\r\n\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.add(7, \"days\"));\r\n        setendWeek(endWeek.add(7, \"days\"));\r\n        // console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n\r\n        populate(startWeek, endWeek);\r\n\r\n        // getAvailableSlots(startWeek, endWeek)\r\n    };\r\n\r\n    const populate = (start, end) => {\r\n        setCellData([]);\r\n        var now = start.clone(),\r\n            dates = [];\r\n\r\n        while (now.isSameOrBefore(end)) {\r\n            dates.push(now.format(\"YYYY-MM-DD\"));\r\n            now.add(1, \"days\");\r\n        }\r\n        setCal(dates);\r\n\r\n        if (cellData.length === 0) {\r\n            // console.log(\"0\");\r\n            time.map((time) => {\r\n                var temp = [];\r\n                dates.map((date) => {\r\n                    // temp.push(date + \" \" + time);\r\n                    temp.push({ date: date, time: time });\r\n                });\r\n\r\n                setCellData((cellData) => [...cellData, temp]);\r\n            });\r\n        } else {\r\n            //   console.log(\"pop\");\r\n        }\r\n    };\r\n\r\n    function selectUserSlot(date, time) {\r\n        // console.log(\"user slot\", date + time);\r\n\r\n        // var temp = [date + time]\r\n        // setuserSlots(temp);\r\n\r\n        var cellCollection = [];\r\n        var temp = aslot[date];\r\n        // console.log(time, date, temp);\r\n\r\n        cellCollection.push(time + date);\r\n\r\n        var newTime = moment(time, \"hh:mm A\")\r\n            .add(30, \"minutes\")\r\n            .format(\"hh:mm A\");\r\n        var ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\").valueOf();\r\n        var tss;\r\n        if (temp.find((el) => el === newTime)) {\r\n            // console.log(\"found\", date);\r\n            cellCollection.push(newTime + date);\r\n            //  console.log(cellCollection);\r\n            tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n                .add(60, \"minutes\")\r\n                .valueOf();\r\n\r\n            props.parentCallback(ts, tss, date);\r\n        } else {\r\n            //  console.log(\"not_found\");\r\n            var prevTime = moment(newTime, \"hh:mm A\")\r\n                .subtract(60, \"minutes\")\r\n                .format(\"hh:mm A\");\r\n            cellCollection.push(prevTime + date);\r\n            //  console.log(cellCollection);\r\n            tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n                .subtract(30, \"minutes\")\r\n                .valueOf();\r\n\r\n            ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n                .add(30, \"minutes\")\r\n                .valueOf();\r\n\r\n            props.parentCallback(tss, ts, date);\r\n        }\r\n\r\n        setuserSlots(cellCollection);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        populate(startWeek, endWeek);\r\n    }, [userSlots]);\r\n\r\n    const getAvailableSlots = (start, end) => {\r\n        var startDate = start.format(\"YYYY-MM-DD\");\r\n        var endDate = end.format(\"YYYY-MM-DD\");\r\n        //  console.log(startDate, endDate);\r\n        // console.log(\r\n        //   \"http://doodlebluelive.com:2307/v1/trainer/calenderView?startDate=\" +\r\n        //     startDate +\r\n        //     \"&endDate=\" +\r\n        //     endDate +\r\n        //     \"&timeBlock=\" +\r\n        //     TimeSlot\r\n        // );\r\n        fetch(\r\n            \"http://doodlebluelive.com:2307/v1/trainer/calenderView?trainerId=\" +\r\n                props.id +\r\n                \"&startDate=\" +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=\" +\r\n                TimeSlot,\r\n            {\r\n                method: \"GET\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    // Authorization: localStorage.getItem(\"token\"),\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setData(json.data);\r\n            });\r\n    };\r\n\r\n    let tableData2;\r\n\r\n    if (cellData.length === 0) {\r\n        //console.log(\"hitu\");\r\n    } else {\r\n        tableData2 = (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ height: \"70px\" }}>\r\n                            <img\r\n                                src={time[7]}\r\n                                style={{ width: \"30px\", height: \"30px\" }}\r\n                            />\r\n                            <h6\r\n                                style={{\r\n                                    wordWrap: \"break-word\",\r\n                                    lineHeight: \"18px\",\r\n                                    paddingLeft: \"0.5em\",\r\n                                    paddingRight: \"0.5em\",\r\n                                    paddingBottom: \"0em\",\r\n                                    fontFamily: \"Montserrat\",\r\n                                    fontWeight: \"600\",\r\n                                    color: \"#898989\",\r\n                                    margin: 0,\r\n                                }}\r\n                            >\r\n                                {\" \"}\r\n                                {time[6]}\r\n                            </h6>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[0].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">MON</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[1].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">TUES</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[2].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">WED</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[3].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">THURS</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[4].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">FRI</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[5].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SAT</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[6].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SUN</div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[0]}</td>\r\n                        {cellData[0].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        // console.log(item.date + item.time, userSlots, \"blah\");\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                                className=\"avaiable_slot\"\r\n                                            >\r\n                                                {item.time}\r\n                                            </td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[1]}</td>\r\n                        {cellData[1].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[2]}</td>\r\n                        {cellData[2].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[3]}</td>\r\n                        {cellData[3].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[4]}</td>\r\n                        {cellData[4].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[5]}</td>\r\n                        {cellData[5].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"outter_table_user\">\r\n            <div className=\"table_user\">\r\n                <div className=\"table_inner_trainer\">\r\n                    <div className=\"table_date\">\r\n                        {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n                            moment().startOf(\"isoWeek\").format(\"YYYY-MM-DD\"),\r\n                            \"day\"\r\n                        ) ? (\r\n                            <div>\r\n                                <img\r\n                                    src={BackIcon}\r\n                                    onClick={PreviousWeek}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                />{\" \"}\r\n                                &ensp;\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <img\r\n                                    src={BackIcon}\r\n                                    disabled=\"true\"\r\n                                    style={{\r\n                                        opacity: \"0.5\",\r\n                                        cursor: \"not-allowed\",\r\n                                    }}\r\n                                />{\" \"}\r\n                                &ensp;\r\n                            </div>\r\n                        )}\r\n                        &ensp;\r\n                        <div className=\"date_week\">\r\n                            {startWeek.format(\"DD\")} - {endWeek.format(\"DD\")}{\" \"}\r\n                            &ensp;\r\n                            {startWeek.format(\"MMMM\")} &ensp;{\" \"}\r\n                            {startWeek.format(\"yyyy\")}{\" \"}\r\n                        </div>\r\n                        <img\r\n                            src={NextIcon}\r\n                            onClick={NextWeek}\r\n                            style={{ cursor: \"pointer\" }}\r\n                        />{\" \"}\r\n                        &ensp; &ensp;\r\n                    </div>\r\n\r\n                    <Dropdown\r\n                        className=\"custom_dropdown\"\r\n                        title=\"Select Time Zone\"\r\n                        list={timeZone}\r\n                        value={TimeSlot}\r\n                        onChange={(e) => {\r\n                            setTimeSlot(e.value);\r\n                            console.log(e.value);\r\n                            if (e.value === \"EarlyBird\") {\r\n                                setTime(early_bird);\r\n                                console.log(\"early_bird\");\r\n                            }\r\n\r\n                            if (e.value === \"RiseAndShine\") {\r\n                                setTime(rise_shine);\r\n                                console.log(\"RiseAndShine\");\r\n                            }\r\n\r\n                            if (e.value === \"MidDayBreak1\") {\r\n                                setTime(mid_day);\r\n                                console.log(\"MidDayBreak\");\r\n                            }\r\n\r\n                            if (e.value === \"MidDayBreak2\") {\r\n                                setTime(mid_day_2);\r\n                                console.log(\"MidDayBreak2\");\r\n                            }\r\n\r\n                            if (e.value === \"HappyHours\") {\r\n                                setTime(happy_hour);\r\n                                console.log(\"HappyHours\");\r\n                            }\r\n\r\n                            if (e.value === \"NeverTooLate\") {\r\n                                setTime(never_too_late);\r\n                                console.log(\"NeverTooLate\");\r\n                            }\r\n                        }}\r\n                        name=\"TimeSlot\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <br></br>\r\n\r\n            {tableData2}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserScheduler;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";","export default __webpack_public_path__ + \"static/media/EarlyBird_Inactive.8646c23c.svg\";","export default __webpack_public_path__ + \"static/media/HappyHour_Inactive.bef73318.svg\";","export default __webpack_public_path__ + \"static/media/Mid-DayBreak_Inactive.edab2351.svg\";","export default __webpack_public_path__ + \"static/media/NeverTooLate_Inactive.0ac0364d.svg\";","export default __webpack_public_path__ + \"static/media/Rise_Shine_Inactive.fb11fce5.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}