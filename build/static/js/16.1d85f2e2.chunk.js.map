{"version":3,"sources":["component/common/YearDropdown/index.js","component/TrainerOnBoard/TrainerBackground/index.js","assets/files/SVG/Arrow Back.svg","assets/files/SVG/Drop Down 4.svg","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","component/common/NormalMultiSelect/index.js"],"names":["YearDropDown","label","name","restProps","options","getFormattedYears","map","year","toString","value","placeholder","arrow","worksMode","TrainerBackground","connect","state","details","trainerReducer","dispatch","bindActionCreators","updateTrainerDetailsApicall","getTrainerDetails","trainerDetail","React","useState","checkedBoxing","setCheckedBoxing","checkedHIIT","setCheckedHIIT","checkedYoga","setCheckedYoga","checkedPilates","setCheckedPilates","workMode","workLocation","currentExperience","setCurrentExperience","areaOfExpertise","clientAssessment","trainingProcess","interestInMotto","awaitingCertification","trainerbackgroundData","setTrainerbackgroundData","orgnization","job","years","inputFields","setInputField","certificate","upload","inputCertificatesFields","setinputCertificatesField","handleChangeInput","index","event","values","target","handleChangeCertificateInput","handleAddCertificateFields","useEffect","then","data","Set","previousExperience","certification","indexOf","className","src","ArrowBack","alt","to","ArrowNext","checked","onChange","e","splice","style","color","input","Fragment","type","length","onClick","handleRemoveFields","inputCertificatesField","handleChange","handleRemoveCertificateFields","list","textDecoration","storeData","history","push","WaterMark","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","root","clsx","concat","capitalize","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","NormalMultiSelect","newValue","isMulti","body","forEach","array","obj","handleInputChange","handleinputChange","this","isReadOnly","isClearable","isSearchable","isBoldLabel","showArrow","customStyles","base","fontWeight","lineHeight","display","justifyContent","alignItems","height","fontFamily","indicatorSeparator","valueContainer","padding","singleValue","dropdownIndicator","width","option","isFocused","textAlign","control","borderRadius","border","boxShadow","outline","background","minHeight","classNamePrefix","isDisabled","styles","find","components","DropdownIndicator","logo","Component"],"mappings":"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","file":"static/js/16.1d85f2e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NormalMultiSelect } from \"../NormalMultiSelect\";\r\nimport { getFormattedYears } from \"service/helperFunctions\";\r\n\r\nexport const YearDropDown = ({ label = \"\", name = \"\", ...restProps }) => {\r\n  const options = getFormattedYears().map((year) => ({\r\n    label: year.toString(),\r\n    value: year.toString(),\r\n    name,\r\n  }));\r\n  return (\r\n    <NormalMultiSelect\r\n      placeholder={label}\r\n      arrow={true}\r\n      name={name}\r\n      options={options}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\r\nimport ArrowNext from \"../../../assets/files/SVG/Arrow Next.svg\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  updateTrainerDetailsApicall,\r\n  getTrainerDetails,\r\n  trainerDetail,\r\n} from \"action/trainerAct\";\r\nimport { history } from \"helpers\";\r\nimport \"./dropdown.scss\";\r\nimport { YearDropDown } from \"component/common/YearDropdown\";\r\n\r\nconst worksMode = [\r\n  {\r\n    label: \"Yes\",\r\n    value: \"yes\",\r\n  },\r\n  {\r\n    label: \"No\",\r\n    value: \"no\",\r\n  },\r\n];\r\n\r\nconst TrainerBackgroundFC = ({\r\n  updateTrainerDetailsApicall,\r\n  details,\r\n  trainerDetail,\r\n}) => {\r\n  const [checkedBoxing, setCheckedBoxing] = React.useState(false);\r\n  const [checkedHIIT, setCheckedHIIT] = React.useState(false);\r\n  const [checkedYoga, setCheckedYoga] = React.useState(false);\r\n  const [checkedPilates, setCheckedPilates] = React.useState(false);\r\n\r\n  const [currentExperience, setCurrentExperience] = useState({\r\n    workMode: \"\",\r\n    workLocation: \"\",\r\n  });\r\n  const [trainerbackgroundData, setTrainerbackgroundData] = useState({\r\n    areaOfExpertise: [],\r\n    clientAssessment: \"\",\r\n    trainingProcess: \"\",\r\n    interestInMotto: \"\",\r\n    awaitingCertification: \"\",\r\n  });\r\n\r\n  const [inputFields, setInputField] = useState([\r\n    {\r\n      orgnization: \"\",\r\n      job: \"\",\r\n      years: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputCertificatesFields, setinputCertificatesField] = useState([\r\n    {\r\n      certificate: \"\",\r\n      year: \"\",\r\n      upload: \"\",\r\n    },\r\n  ]);\r\n  const handleChangeInput = (index, event) => {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputField(values);\r\n  };\r\n  const handleChangeCertificateInput = (index, event) => {\r\n    const values = [...inputCertificatesFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setinputCertificatesField(values);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputField([...inputFields, { orgnization: \"\", job: \"\", years: \"\" }]);\r\n  };\r\n\r\n  const handleAddCertificateFields = () => {\r\n    setinputCertificatesField([\r\n      ...inputCertificatesFields,\r\n      { certificate: \"\", year: \"\", upload: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveFields = (index) => {\r\n    const values = [...inputFields];\r\n    values.splice(index, 1);\r\n    setInputField(values);\r\n  };\r\n  const handleRemoveCertificateFields = (index) => {\r\n    const values = [...inputCertificatesFields];\r\n    values.splice(index, 1);\r\n    setinputCertificatesField(values);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const storeData = {\r\n      areaOfExpertise: trainerbackgroundData.areaOfExpertise,\r\n      previousExperience: inputFields,\r\n      certification: inputCertificatesFields,\r\n      clientAssessment: trainerbackgroundData.clientAssessment,\r\n      trainingProcess: trainerbackgroundData.trainingProcess,\r\n      interestInMotto: trainerbackgroundData.interestInMotto,\r\n      awaitingCertification: trainerbackgroundData.awaitingCertification,\r\n    };\r\n    updateTrainerDetailsApicall(storeData).then(() => {\r\n      history.push(`/trainer/availability`);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    trainerDetail().then((data) => {\r\n      if (data) {\r\n        setTrainerbackgroundData({\r\n          ...trainerbackgroundData,\r\n          areaOfExpertise: [...new Set(data.areaOfExpertise)],\r\n          clientAssessment: data.clientAssessment,\r\n          trainingProcess: data.trainingProcess,\r\n          interestInMotto: data.interestInMotto,\r\n          awaitingCertification: data.awaitingCertification\r\n            ? data.awaitingCertification\r\n            : \"\",\r\n        });\r\n        if (data.previousExperience) {\r\n          setInputField(data.previousExperience);\r\n        }\r\n        if (data.certification) {\r\n          setinputCertificatesField(data.certification);\r\n        }\r\n        if (data.currentExperience) {\r\n          setCurrentExperience(data.currentExperience);\r\n        }\r\n        if (data.areaOfExpertise) {\r\n          if (data.areaOfExpertise.indexOf(\"Boxing\") >= 0)\r\n            setCheckedBoxing(true);\r\n          if (data.areaOfExpertise.indexOf(\"Pilates\") >= 0)\r\n            setCheckedPilates(true);\r\n          if (data.areaOfExpertise.indexOf(\"Yoga\") >= 0) setCheckedYoga(true);\r\n          if (data.areaOfExpertise.indexOf(\"Strength & HIIT\") >= 0)\r\n            setCheckedHIIT(true);\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"outter_container_bg\">\r\n        <div className=\"container\">\r\n          <div className=\"links_wrapper\">\r\n            <div className=\"outter_links\">\r\n              <img src={ArrowBack} alt=\"icon\" />\r\n              <div className=\"inner_links\">\r\n                <Link to=\"/trainer/about\"> Back to About You</Link>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"outter_links\">\r\n              <div className=\"inner_links\">\r\n                <Link to=\"/trainer/availability\">Go to Availability</Link>\r\n                <div></div>\r\n              </div>\r\n              <img src={ArrowNext} alt=\"icon\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"main_wrapper\">\r\n            <div className=\"wrapper_inneritems\">\r\n              <h1>Detail out your training background</h1>\r\n              <div className=\"contents_wrapper\">\r\n                <div>\r\n                  <div className=\"item1\">\r\n                    <h6>\r\n                      Tell us what you train! Select all the verticals that\r\n                      apply\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <Checkbox\r\n                        checked={checkedHIIT}\r\n                        onChange={(e) => {\r\n                          setCheckedHIIT(e.target.checked);\r\n\r\n                          if (e.target.checked) {\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Strength & HIIT\",\r\n                              ],\r\n                            });\r\n                          } else {\r\n                            const index =\r\n                              trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                \"Strength & HIIT\"\r\n                              );\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                          }\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Strength & HIIT</div>\r\n                      <Checkbox\r\n                        checked={checkedBoxing}\r\n                        // checked={true}\r\n                        onChange={(e) => {\r\n                          setCheckedBoxing(e.target.checked);\r\n                          if (e.target.checked) {\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Boxing\",\r\n                              ],\r\n                            });\r\n                          } else {\r\n                            const index =\r\n                              trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                \"Boxing\"\r\n                              );\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                          }\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Boxing</div>\r\n                      <Checkbox\r\n                        checked={checkedYoga}\r\n                        onChange={(e) => {\r\n                          setCheckedYoga(e.target.checked);\r\n\r\n                          if (e.target.checked) {\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Yoga\",\r\n                              ],\r\n                            });\r\n                          } else {\r\n                            const index =\r\n                              trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                \"Yoga\"\r\n                              );\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                          }\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Yoga</div>\r\n                      <Checkbox\r\n                        checked={checkedPilates}\r\n                        onChange={(e) => {\r\n                          setCheckedPilates(e.target.checked);\r\n\r\n                          if (e.target.checked) {\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Pilates\",\r\n                              ],\r\n                            });\r\n                          } else {\r\n                            const index =\r\n                              trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                \"Pilates\"\r\n                              );\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                          }\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Pilates</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item2\">\r\n                    <h6>Training experience</h6>\r\n                    {inputFields.map((input, index) => {\r\n                      return (\r\n                        <React.Fragment key={index}>\r\n                          <div className=\"inputs_experience\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Name of the organization / GYM\"\r\n                              value={input.orgnization}\r\n                              name=\"orgnization\"\r\n                              onChange={(event) =>\r\n                                handleChangeInput(index, event)\r\n                              }\r\n                            />\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Job Title\"\r\n                              value={input.job}\r\n                              name=\"job\"\r\n                              onChange={(event) =>\r\n                                handleChangeInput(index, event)\r\n                              }\r\n                            />\r\n                            <input\r\n                              type=\"number\"\r\n                              placeholder=\"Years\"\r\n                              name=\"years\"\r\n                              value={input.years}\r\n                              onChange={(event) =>\r\n                                handleChangeInput(index, event)\r\n                              }\r\n                            />\r\n                          </div>\r\n                          {index + 1 === inputFields.length ? (\r\n                            <div className=\"d-flex\">\r\n                              <h5 onClick={() => handleAddFields()}>\r\n                                + Add Work Experience\r\n                              </h5>\r\n                              {index + 1 === inputFields.length &&\r\n                              inputFields.length !== 1 ? (\r\n                                <h5\r\n                                  className=\"text-danger pl-3\"\r\n                                  onClick={() => handleRemoveFields(index)}\r\n                                >\r\n                                  Remove\r\n                                </h5>\r\n                              ) : null}\r\n                            </div>\r\n                          ) : null}\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"item3\">\r\n                    <h6>Certifications</h6>\r\n                    {inputCertificatesFields.map(\r\n                      (inputCertificatesField, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <div\r\n                            className=\"inputs_background row no-gutters\"\r\n                            key={index}\r\n                          >\r\n                            <div className=\"col-6 px-2\">\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Certification Title\"\r\n                                value={inputCertificatesField.certificate}\r\n                                name=\"certificate\"\r\n                                onChange={(event) =>\r\n                                  handleChangeCertificateInput(index, event)\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 px-2\">\r\n                              <YearDropDown\r\n                                label=\"Year you were Certified\"\r\n                                value={inputCertificatesField.year}\r\n                                name=\"year\"\r\n                                handleChange={(event) =>\r\n                                  handleChangeCertificateInput(index, event)\r\n                                }\r\n                              />\r\n                            </div>\r\n                            {/* <input\r\n                              type=\"text\"\r\n                              placeholder=\"\"\r\n                              value={inputCertificatesField.year}\r\n                              name=\"year\"\r\n                              onChange={(event) =>\r\n                                handleChangeCertificateInput(index, event)\r\n                              }\r\n                              type=\"number\"\r\n                            /> */}\r\n                          </div>\r\n                          {index + 1 === inputCertificatesFields.length ? (\r\n                            <div className=\"d-flex\">\r\n                              <h5 onClick={handleAddCertificateFields}>\r\n                                + Add Certificate's\r\n                              </h5>\r\n                              {index + 1 === inputCertificatesFields.length &&\r\n                              inputCertificatesFields.length !== 1 ? (\r\n                                <h5\r\n                                  className=\"text-danger pl-3\"\r\n                                  onClick={() =>\r\n                                    handleRemoveCertificateFields(index)\r\n                                  }\r\n                                >\r\n                                  Remove\r\n                                </h5>\r\n                              ) : null}\r\n                            </div>\r\n                          ) : null}\r\n                        </React.Fragment>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                  <div className=\"item4\">\r\n                    <h6>\r\n                      Are you currently enrolled in any continued education\r\n                      programs?\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us about any awaiting certifications \"\r\n                        value={trainerbackgroundData.awaitingCertification}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            awaitingCertification: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item5\">\r\n                    <h6>\r\n                      Do you have a facility to train new & outside clients?\r\n                    </h6>\r\n                    <div className=\"row d-flex\">\r\n                      <div className=\"col-6\">\r\n                        <select\r\n                          value={currentExperience.workMode}\r\n                          name=\"workMode\"\r\n                          onChange={(e) => {\r\n                            setCurrentExperience({\r\n                              ...currentExperience,\r\n                              workMode: e.target.value,\r\n                            });\r\n                          }}\r\n                        >\r\n                          {worksMode.map((list, index) => (\r\n                            <option value={list.value} key={index}>\r\n                              {list.label}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {/* <NormalMultiSelect\r\n                            placeholder=\"Select Your Answer\"\r\n                            value={currentExperience.workMode}\r\n                            arrow={true}\r\n                            name=\"workMode\"\r\n                            options={worksMode}\r\n                            handleChange={(e) => {\r\n                              setCurrentExperience({\r\n                                ...currentExperience,\r\n                                workMode: e.target.value,\r\n                              });\r\n                            }}\r\n                          /> */}\r\n                      </div>\r\n                      {currentExperience.workMode === \"yes\" ? (\r\n                        <div className=\"col-6\">\r\n                          <div className=\"inputs_experience_drop\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Details of facility\"\r\n                              value={currentExperience.workLocation}\r\n                              name=\"answer\"\r\n                              onChange={(e) => {\r\n                                setCurrentExperience({\r\n                                  ...currentExperience,\r\n                                  workLocation: e.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item6\">\r\n                    <h6>Why are you interested in joining Motto?</h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us all about it.\"\r\n                        value={trainerbackgroundData.interestInMotto}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            interestInMotto: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item6\">\r\n                    <h6>\r\n                      Describe how you assess a client before their first\r\n                      session?\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us all about it.\"\r\n                        value={trainerbackgroundData.clientAssessment}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            clientAssessment: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item6\">\r\n                    <h6>Describe your training process & philosophy</h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us all about it.\"\r\n                        value={trainerbackgroundData.trainingProcess}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            trainingProcess: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"submit_button\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"#FFFFFF\",\r\n                      }}\r\n                      type=\"submit\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      Continue\r\n                      <ArrowHoverBlacked />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <img src={WaterMark} alt=\"icon\" className=\"bg_watermark\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  details: state.trainerReducer.details,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateTrainerDetailsApicall,\r\n      getTrainerDetails,\r\n      trainerDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerBackground = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainerBackgroundFC);\r\n\r\nexport default TrainerBackground;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Drop Down 4.50302f8e.svg\";","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"./select.scss\";\r\nimport logo from \"../../../assets/files/SVG/Drop Down 4.svg\";\r\nexport class NormalMultiSelect extends Component {\r\n    //change select\r\n    handleChange = (newValue) => {\r\n        let { isMulti } = this.props;\r\n        if (!!isMulti) {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: [],\r\n                },\r\n            };\r\n            if (!!newValue && newValue.length) {\r\n                newValue.forEach((array) => {\r\n                    let obj = {\r\n                        value: array.value,\r\n                        label: array.label,\r\n                    };\r\n                    body.target.value.push(obj);\r\n                });\r\n            }\r\n            this.props.handleChange(body);\r\n        } else {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: newValue ? newValue.value : \"\",\r\n                    label: newValue ? newValue.label : \"\",\r\n                },\r\n            };\r\n\r\n            this.props.handleChange(body);\r\n        }\r\n    };\r\n\r\n    //handle Input Change\r\n    handleInputChange = (newValue) => {\r\n        let body = {\r\n            target: {\r\n                name: this.props.name,\r\n                value: newValue ? newValue : \"\",\r\n            },\r\n        };\r\n        this.props.handleinputChange && this.props.handleinputChange(body);\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            className = \"select-form-control w-100\",\r\n            options = [],\r\n            value = \"\",\r\n            name = \"\",\r\n            placeholder = \"Select\",\r\n            disabled = false,\r\n            arrow = false,\r\n            isReadOnly = false,\r\n            label = \"\",\r\n            isMulti = false,\r\n            isClearable = false,\r\n            isSearchable = false,\r\n            isBoldLabel = false,\r\n            showArrow = true,\r\n        } = this.props;\r\n\r\n        const DropdownIndicator = (props) => {\r\n            return (\r\n                components.DropdownIndicator && (\r\n                    <components.DropdownIndicator {...props}>\r\n                        <img src={logo} alt=\"dropdown\" />\r\n                    </components.DropdownIndicator>\r\n                )\r\n            );\r\n        };\r\n        const customStyles = {\r\n            placeholder: (base) => ({\r\n                ...base,\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            indicatorSeparator: (base) => ({\r\n                ...base,\r\n                display: \"none\",\r\n            }),\r\n            valueContainer: (base) => ({\r\n                ...base,\r\n                padding: \"0px 20px\",\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            singleValue: (base) => ({\r\n                ...base,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n            }),\r\n            dropdownIndicator: (base) => ({\r\n                ...base,\r\n                padding: 0,\r\n                height: \"26px\",\r\n                width: \"26px\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            option: (base, { isFocused }) => ({\r\n                ...base,\r\n                backgroundColor: isFocused ? \"#53BFD2\" : \"#fff\",\r\n                color: isFocused ? \"#fff\" : \"#000\",\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            control: (base) => ({\r\n                ...base,\r\n                borderRadius: 50,\r\n                border: \"2px solid #bcbcbc\",\r\n                boxShadow: \"0 0 !important\",\r\n                outline: \"0 \",\r\n                background: \"white\",\r\n                height: 45,\r\n                minHeight: 45,\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n        };\r\n        return (\r\n            <>\r\n                {!isReadOnly ? (\r\n                    <div\r\n                        className={`${\r\n                            arrow ? \"select-section w-100\" : \"Select\"\r\n                        } ${isBoldLabel ? \"mt-0\" : \"\"}`}\r\n                    >\r\n                        {label !== \"\" ? (\r\n                            <div>\r\n                                <label\r\n                                    className={\r\n                                        isBoldLabel\r\n                                            ? \"mb-1 text-black-22\"\r\n                                            : \"font-weight-normal mb-1\"\r\n                                    }\r\n                                >\r\n                                    {label}\r\n                                </label>\r\n                            </div>\r\n                        ) : null}\r\n                        <Select\r\n                            className={className}\r\n                            classNamePrefix=\"Select\"\r\n                            isDisabled={disabled}\r\n                            isClearable={isClearable}\r\n                            isSearchable={isSearchable}\r\n                            name={name}\r\n                            options={options}\r\n                            onChange={this.handleChange}\r\n                            isMulti={isMulti}\r\n                            showArrow={showArrow}\r\n                            placeholder={placeholder}\r\n                            styles={customStyles}\r\n                            value={\r\n                                !!options && options.length > 0\r\n                                    ? options.find(\r\n                                          (data) => data.value === value\r\n                                      )\r\n                                        ? options.find(\r\n                                              (data) => data.value === value\r\n                                          )\r\n                                        : null\r\n                                    : null\r\n                            }\r\n                            components={{ DropdownIndicator }}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <p>{value}</p>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}