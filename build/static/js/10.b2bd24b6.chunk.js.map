{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerCard/index.js","assets/files/SVG/dollar Icon.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["CyanRadio","withStyles","root","color","cyan","checked","props","Accordion","title","children","useState","isOpenAccodion","setAccordion","selectedValue","setSelectedValue","className","onChange","event","target","value","onClick","TrainerCard","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","history","useHistory","React","checkedBoxing","setCheckedBoxing","open","setOpen","checkedHIIT","setCheckedHIIT","checkedYoga","setCheckedYoga","checkedPilates","setCheckedPilates","areaOfExpertise","trainerbackgroundData","setTrainerbackgroundData","image","setImage","myRef","useRef","previewImage","setPreviewTmage","firstName","lastName","description","individualCharge","ssTwoPeopleCharge","ssThreePeopleCharge","ssFourPeopleCharge","classFlatRate","threeSessionRate","tenSessionRate","amtPerPerson","individualChargeTl","ssTwoPeopleChargeTl","ssThreePeopleChargeTl","ssFourPeopleChargeTl","classFlatRateTl","threeSessionRateTl","tenSessionRateTl","individualChargeVt","ssTwoPeopleChargeVt","ssThreePeopleChargeVt","ssFourPeopleChargeVt","classFlatRateVt","threeSessionRateVt","tenSessionRateVt","trainerData","setTrainerData","fileInputRef","useEffect","reader","FileReader","onloadend","result","console","log","readAsDataURL","handleInputChange","name","tempData","then","find","el","socialSessionPricing","oneOnOnePricing","classSessionPricing","inPeronAtClientLocationfor2People","inPeronAtClientLocationfor3People","inPeronAtClientLocationfor4People","inPeronAtTrainerLocationfor2People","inPeronAtTrainerLocationfor3People","inPeronAtTrainerLocationfor4People","virtualSessionfor2People","virtualSessionfor3People","virtualSessionfor4People","passRatefor3Session","passRatefor10Session","inPersonAtClientLocation","inPersonAtTrainerLocation","virtualSession","passRatefor3SessionAtTrainerLocation","passRatefor10SessionAtTrainerLocation","passRatefor3SessionAtVirtual","passRatefor10SessionAtVirtual","inPersonAtclientLocationfor15People","inPersonAttrainerLocationfor15People","virtualSessionfor15People","storeData","closeIcon","src","CloseIcon","alt","style","marginLeft","onClose","center","container","current","styles","boaderRadius","paddingLeft","alignleft","objectFit","backgroundColor","fontWeight","width","height","borderRadius","preventDefault","click","Profile","ProfileAdd","type","ref","accept","file","files","substr","e","index","indexOf","splice","placeholder","maxLength","DollarIcon","undefined","headers","Authorization","localStorage","getItem","fd","FormData","append","axios","post","res","push","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","length","funcs","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","CheckBoxIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps"],"mappings":"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","file":"static/js/10.b2bd24b6.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport Profile from \"../../../../assets/files/SVG/Profile Picture.svg\";\r\nimport ProfileAdd from \"../../../../assets/files/SVG/Picture Icon.svg\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport DollarIcon from \"../../../../assets/files/SVG/dollar Icon.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./accordion.scss\";\r\nimport \"./styles.scss\";\r\nimport ArrowHoverBlacked from \"../../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport axios from \"axios\";\r\nimport { set } from \"date-fns\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport CloseIcon from \"../../../../assets/files/FindTrainer/Cross.svg\";\r\nimport \"./trainer.sass\";\r\n\r\n\r\nconst CyanRadio = withStyles({\r\n    root: {\r\n        \"&$checked\": {\r\n            color: cyan[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\nconst TrainerCardFC = ({\r\n    updateTrainerDetails,\r\n    trainerPersonalData,\r\n    getTrainerDetails,\r\n}) => {\r\n    const history = useHistory();\r\n\r\n    const data = {\r\n        title: \"Time to build your Trainer Card!\",\r\n        describtion:\r\n            \" Heads up! Your trainer card is what clients will see when trainer results start filtering. Utilize keywords as anything you write here will also besearchable in our search box!\",\r\n        upload: \" Upload your profile picture, hotshot!\",\r\n        tellus: \" Tell us what you train! Select all the categories that apply\",\r\n        clientDesc:\r\n            \"Write a short and sweet description for clients to pick you in 75 characters\",\r\n        pricing: \"Tell us about your Pricing\",\r\n        pricingDesc:\r\n            \"Please fill only those fields relevant to the various kinds of training you offer. We recommend that the pricing of the social sessions (2-4 people) should provide savings to each client in comparison to a 1 on 1 individual session. The pricing for a 5-15 person group class is a flat rate that will be split evenly amongst each client.\",\r\n    };\r\n\r\n    const [checkedBoxing, setCheckedBoxing] = React.useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [checkedHIIT, setCheckedHIIT] = React.useState(false);\r\n    const [checkedYoga, setCheckedYoga] = React.useState(false);\r\n    const [checkedPilates, setCheckedPilates] = React.useState(false);\r\n    const [trainerbackgroundData, setTrainerbackgroundData] = useState({\r\n        areaOfExpertise: [],\r\n    });\r\n\r\n    const [image, setImage] = useState();\r\n    const myRef = useRef(null);\r\n    const [selectedValue, setSelectedValue] = useState(\"\");\r\n    const [previewImage, setPreviewTmage] = useState();\r\n    const [trainerData, setTrainerData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        description: \"\",\r\n        individualCharge: \"\",\r\n        ssTwoPeopleCharge: \"\",\r\n        ssThreePeopleCharge: \"\",\r\n        ssFourPeopleCharge: \"\",\r\n        classFlatRate: \"\",\r\n        threeSessionRate: \"\",\r\n        tenSessionRate: \"\",\r\n        amtPerPerson: \"\",\r\n        individualChargeTl: \"\",\r\n        ssTwoPeopleChargeTl: \"\",\r\n        ssThreePeopleChargeTl: \"\",\r\n        ssFourPeopleChargeTl: \"\",\r\n        classFlatRateTl: \"\",\r\n        threeSessionRateTl: \"\",\r\n        tenSessionRateTl: \"\",\r\n        individualChargeVt: \"\",\r\n        ssTwoPeopleChargeVt: \"\",\r\n        ssThreePeopleChargeVt: \"\",\r\n        ssFourPeopleChargeVt: \"\",\r\n        classFlatRateVt: \"\",\r\n        threeSessionRateVt: \"\",\r\n        tenSessionRateVt: \"\",\r\n    });\r\n    const fileInputRef = useRef();\r\n\r\n    \r\n\r\n    // for radio\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n                console.log(typeof image);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n\r\n    const handleChangeToTrainerProfile = () => {\r\n        // Update Area of Expertise\r\n\r\n        // TrainerCard Profile Upload\r\n\r\n        if (image !== undefined) {\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: localStorage.getItem(\"token\"),\r\n            };\r\n\r\n            const fd = new FormData();\r\n\r\n            fd.append(\"profilePicture\", image, image.name);\r\n            axios\r\n                .post(\"http://doodlebluelive.com:2307/v1/upload/image\", fd, {\r\n                    headers: headers,\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                });\r\n        }\r\n\r\n        // Redux logic\r\n        let storeData = {\r\n            details: { ...trainerData },\r\n        };\r\n        updateTrainerDetails(storeData);\r\n        history.push(\"/trainer/setup\");\r\n    };\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n\r\n    // const handleChangeToTrainerProfile = () => {\r\n    //     let storeData = {\r\n    //         details: { ...trainerData },\r\n    //     };\r\n    //     updateTrainerDetails(storeData);\r\n    //     history.push(\"/trainer/setup\");\r\n    // };\r\n\r\n    const handleInputChange = ({ target: { name, value } }) => {\r\n        const tempData = {\r\n            ...trainerData,\r\n        };\r\n\r\n        tempData[name] = value;\r\n\r\n        setTrainerData(tempData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTrainerDetails().then((data) => {\r\n            if (\r\n                data[\"areaOfExpertise\"].find((el) => el === \"Strength & HIIT\")\r\n            ) {\r\n                console.log(\"Strength & HIIT\");\r\n                setCheckedHIIT(true);\r\n            }\r\n\r\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Boxing\")) {\r\n                console.log(\"Boxing\");\r\n                setCheckedBoxing(true);\r\n            }\r\n\r\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Yoga\")) {\r\n                console.log(\"Yoga\");\r\n                setCheckedYoga(true);\r\n            }\r\n\r\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Pilates\")) {\r\n                console.log(\"Pilates\");\r\n                setCheckedPilates(true);\r\n            }\r\n\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                description,\r\n                socialSessionPricing,\r\n                oneOnOnePricing,\r\n                classSessionPricing,\r\n            } = data || {};\r\n\r\n            if (data) {\r\n                // console.log(data);\r\n                const {\r\n                    inPeronAtClientLocationfor2People = \"\",\r\n                    inPeronAtClientLocationfor3People = \"\",\r\n                    inPeronAtClientLocationfor4People = \"\",\r\n                    inPeronAtTrainerLocationfor2People=\"\",\r\n                    inPeronAtTrainerLocationfor3People=\"\",\r\n                    inPeronAtTrainerLocationfor4People=\"\",\r\n                    virtualSessionfor2People=\"\",\r\n                    virtualSessionfor3People=\"\",\r\n                    virtualSessionfor4People=\"\",\r\n                } = socialSessionPricing || {};\r\n\r\n                const {\r\n                    passRatefor3Session = \"\",\r\n                    passRatefor10Session = \"\",\r\n                    inPersonAtClientLocation = \"\",\r\n                    inPersonAtTrainerLocation=\"\",\r\n                    virtualSession=\"\",\r\n                    passRatefor3SessionAtTrainerLocation=\"\",\r\n                    passRatefor10SessionAtTrainerLocation=\"\",\r\n                    passRatefor3SessionAtVirtual=\"\",\r\n                    passRatefor10SessionAtVirtual=\"\"\r\n\r\n                } = oneOnOnePricing || {};\r\n\r\n                const { \r\n                    inPersonAtclientLocationfor15People = \"\",\r\n                    inPersonAttrainerLocationfor15People= \"\",\r\n                    virtualSessionfor15People = \"\"\r\n                     } = classSessionPricing || {};\r\n\r\n                const storeData = {\r\n                    details: {\r\n                        firstName,\r\n                        lastName,\r\n                        description,\r\n                        individualCharge: inPersonAtClientLocation,\r\n                        ssTwoPeopleCharge: inPeronAtClientLocationfor2People,\r\n                        ssThreePeopleCharge: inPeronAtClientLocationfor3People,\r\n                        ssFourPeopleCharge: inPeronAtClientLocationfor4People,\r\n                        classFlatRate: inPersonAtclientLocationfor15People,\r\n                        threeSessionRate: passRatefor3Session,\r\n                        tenSessionRate: passRatefor10Session,\r\n                        individualChargeTl: inPersonAtTrainerLocation,\r\n                        ssTwoPeopleChargeTl: inPeronAtTrainerLocationfor2People,\r\n                        ssThreePeopleChargeTl: inPeronAtTrainerLocationfor3People,\r\n                        ssFourPeopleChargeTl: inPeronAtTrainerLocationfor4People,\r\n                        classFlatRateTl: inPersonAttrainerLocationfor15People,\r\n                        threeSessionRateTl: passRatefor3SessionAtTrainerLocation,\r\n                        tenSessionRateTl: passRatefor10SessionAtTrainerLocation,\r\n                        individualChargeVt: virtualSession,\r\n                        ssTwoPeopleChargeVt: virtualSessionfor2People,\r\n                        ssThreePeopleChargeVt: virtualSessionfor3People,\r\n                        ssFourPeopleChargeVt: virtualSessionfor4People,\r\n                        classFlatRateVt: virtualSessionfor15People,\r\n                        threeSessionRateVt: passRatefor3SessionAtVirtual,\r\n                        tenSessionRateVt: passRatefor10SessionAtVirtual,\r\n                    },\r\n                };\r\n\r\n                setTrainerData(storeData.details);\r\n\r\n                updateTrainerDetails(storeData);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const closeIcon = <img src={CloseIcon} alt=\"close\" />;\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_container_card\">\r\n                <div className=\"container\">\r\n                    <div className=\"card_prev_link\" style = {{marginLeft:\"75%\"}}>\r\n                        <div onClick={()=>{setOpen(true);}}>Preview Your Trainer Card</div>\r\n                    </div>\r\n                    {open ? (\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                            center\r\n                            closeIcon={closeIcon}\r\n                            container={myRef.current}\r\n                            styles={{\r\n                                boaderRadius: \"10px\",\r\n                            }}\r\n                        >\r\n                            <div className=\"container\" style = {{paddingLeft: \"50px\"}}>\r\n                            <div className=\"row\" style={{ alignleft: \"auto\" }}>\r\n                            <div className=\"card\" >\r\n                        <img\r\n                          className=\"card-img-top\"\r\n                          src={previewImage ? previewImage : \"https://www.solidbackgrounds.com/images/2048x1536/2048x1536-powder-blue-web-solid-color-background.jpg\"}\r\n                          style={previewImage ? { objectFit: \"cover\"} : ({ objectFit: \"cover\", backgroundColor:\"blue\"})}\r\n                        />\r\n                        <div className=\"card-body\">\r\n                          <h3>\r\n                            {trainerData.firstName}&ensp;\r\n                            {trainerData.lastName}\r\n                          </h3>\r\n                          <h6 style = {{color: \"#898989\", fontWeight:\"bold\"}}>{ checkedHIIT && !checkedPilates && !checkedBoxing && !checkedYoga  ? \"HIIT\"  \r\n                          :checkedPilates && !checkedHIIT && !checkedBoxing && !checkedYoga ? \"Pilates\" \r\n                          :checkedYoga && !checkedHIIT && !checkedBoxing && !checkedPilates ? \"Yoga\" \r\n                          :checkedBoxing && !checkedHIIT && !checkedPilates && !checkedYoga ? \"Boxing\" \r\n                          :(checkedHIIT && checkedPilates && !checkedBoxing && !checkedYoga ) ? (\"HIIT,Pilates\")\r\n                          :checkedHIIT && checkedYoga && !checkedPilates && !checkedBoxing ? \"HIIT,Yoga\"\r\n                          :checkedHIIT && checkedBoxing && !checkedPilates && !checkedYoga ? \"HIIT,Boxing\"\r\n                          :checkedYoga && checkedBoxing && !checkedPilates && !checkedHIIT ? \"Yoga,Boxing\"\r\n                          :checkedYoga && checkedPilates && !checkedBoxing && !checkedHIIT ? \"Yoga,Pilates\"\r\n                          :checkedBoxing && checkedPilates && !checkedHIIT && !checkedYoga ? \"Boxing,Pilates\"\r\n                          :checkedHIIT && checkedPilates && checkedBoxing && !checkedYoga ? \"HIIT,Pilates,Boxing\"\r\n                          :checkedHIIT && checkedPilates && checkedYoga && !checkedBoxing ? \"HIIT,Pilates,Yoga\"\r\n                          :checkedYoga && checkedPilates && checkedBoxing && !checkedHIIT ? \"Yoga,Pilates,Boxing\"\r\n                          :checkedYoga && checkedHIIT && checkedBoxing && !checkedPilates ? \"Yoga,HIIT,Boxing\"\r\n                          :checkedYoga && checkedHIIT && checkedBoxing && checkedPilates ? \"Yoga,HIIT,Boxing,Pilates\"\r\n                          :\"Not Added\" }</h6>\r\n                          <p style = {{color:\"#898989\"}}>\r\n                          {trainerData.description}\r\n                            {/* <Link to=\"profile\">Read More</Link> */}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"card-button\">\r\n                          <button\r\n                            // ref={hoverRef}\r\n                            style={{\r\n                              backgroundColor:  \"#53BFD2\"\r\n                            }}\r\n                            // onClick={() => {\r\n                            //   console.log(bestMatchData[data]);\r\n                            //   history.push({\r\n                            //     pathname: \"/user/scheduler\",\r\n                            //     state: { trainerId: bestMatchData[data][\"id\"], trainerData: bestMatchData[data] },\r\n                            //   });\r\n                            // }}\r\n                          >\r\n                            book a session\r\n                            {/* <img src={onImage} alt=\"icon\" /> */}\r\n                            {/* {isHovered ? (\r\n                              <img src={onHoverImage} alt=\"icon\" />\r\n                            ) : (\r\n                              <img src={onImage} alt=\"icon\" />\r\n                            )} */}\r\n                            <p>\r\n                              from{\" \"}\r\n                              {/* <span>\r\n                                {\r\n                                  bestMatchData[data][\"oneOnOnePricing\"][\r\n                                    \"inPersonAtClientLocation\"\r\n                                  ]\r\n                                }\r\n                              </span> */}\r\n                            </p>\r\n                          </button>\r\n                        </div>\r\n                      </div></div></div></Modal>) : null }\r\n                    <div className=\"card_outter\">\r\n                        <div className=\"card_outter_wrapper\">\r\n                            <h2>{data.title}</h2>\r\n                            <p>{data.describtion}</p>\r\n                        </div>\r\n                        <div className=\"card_inner \">\r\n                            <div className=\"card_form_outter\">\r\n                                <form>\r\n                                    <div className=\"card_item1\">\r\n                                        {previewImage ? (\r\n                                            <img\r\n                                                src={previewImage}\r\n                                                style={{\r\n                                                    objectFit: \"cover\",\r\n                                                    width: \"200px\",\r\n                                                    height: \"200px\",\r\n                                                    borderRadius: \"100px\",\r\n                                                }}\r\n                                                onClick={() => {\r\n                                                    setPreviewTmage(null);\r\n                                                }}\r\n                                            />\r\n                                        ) : (\r\n                                            <div className=\"combin_profile\">\r\n                                                <button\r\n                                                    onClick={(event) => {\r\n                                                        event.preventDefault();\r\n                                                        fileInputRef.current.click();\r\n                                                    }}\r\n                                                >\r\n                                                    <img\r\n                                                        src={Profile}\r\n                                                        alt=\"icon\"\r\n                                                        style={{\r\n                                                            objectFit: \"cover\",\r\n                                                            width: \"100px\",\r\n                                                            height: \"100px\",\r\n                                                        }}\r\n                                                    />\r\n                                                </button>\r\n                                                <img\r\n                                                    src={ProfileAdd}\r\n                                                    alt=\"icon\"\r\n                                                    style={{\r\n                                                        objectFit: \"cover\",\r\n                                                        width: \"20px\",\r\n                                                        height: \"20px\",\r\n                                                        borderRadius: \"100px\",\r\n                                                    }}\r\n                                                    onClick={(event) => {\r\n                                                        event.preventDefault();\r\n                                                        fileInputRef.current.click();\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            ref={fileInputRef}\r\n                                            accept=\"image/*\"\r\n                                            onChange={(event) => {\r\n                                                const file =\r\n                                                    event.target.files[0];\r\n                                                if (\r\n                                                    file &&\r\n                                                    file.type.substr(0, 5) ===\r\n                                                        \"image\"\r\n                                                ) {\r\n                                                    setImage(file);\r\n                                                } else {\r\n                                                    setImage(null);\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                        <h5>{data.upload}</h5>\r\n                                    </div>\r\n                                    <div className=\"card_item2 \">\r\n                                        <div className=\"card_innerItem\">\r\n                                            <h6>First Name</h6>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"firstName\"\r\n                                                onChange={handleInputChange}\r\n                                                value={trainerData.firstName}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"card_innerItem\">\r\n                                            <h6>Last Name</h6>\r\n                                            <input\r\n                                                name=\"lastName\"\r\n                                                onChange={handleInputChange}\r\n                                                value={trainerData.lastName}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card_item3\">\r\n                                        <h6>{data.tellus}</h6>\r\n\r\n                                        <div className=\"inputs_experience\">\r\n                                            <Checkbox\r\n                                                checked={checkedHIIT}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedHIIT(\r\n                                                        e.target.checked\r\n                                                    );\r\n                                                    console.log(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Strength & HIIT\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    } else {\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Strength & HIIT\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    }\r\n\r\n                                                    console.log(\r\n                                                        trainerbackgroundData\r\n                                                    );\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n\r\n                                                // onChange={() => {\r\n                                                //   setCheckState(\"Strength & HIIT\");\r\n                                                // }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Strength & HIIT\r\n                                            </div>\r\n                                            <Checkbox\r\n                                                checked={checkedBoxing}\r\n                                                // checked={true}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedBoxing(\r\n                                                        e.target.checked\r\n                                                    );\r\n                                                    console.log(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        console.log(\r\n                                                            \"setBoxing\"\r\n                                                        );\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Boxing\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    } else {\r\n                                                        console.log(\r\n                                                            \"unsetBoxing\"\r\n                                                        );\r\n\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Boxing\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                        console.log(\r\n                                                            trainerbackgroundData.areaOfExpertise\r\n                                                        );\r\n                                                    }\r\n\r\n                                                    console.log(\r\n                                                        trainerbackgroundData\r\n                                                    );\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Boxing\r\n                                            </div>\r\n                                            <Checkbox\r\n                                                checked={checkedYoga}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedYoga(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Yoga\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n                                                    } else {\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Yoga\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Yoga\r\n                                            </div>\r\n                                            <Checkbox\r\n                                                checked={checkedPilates}\r\n                                                onChange={(e) => {\r\n                                                    setCheckedPilates(\r\n                                                        e.target.checked\r\n                                                    );\r\n\r\n                                                    if (e.target.checked) {\r\n                                                        setTrainerbackgroundData(\r\n                                                            {\r\n                                                                ...trainerbackgroundData,\r\n                                                                areaOfExpertise:\r\n                                                                    [\r\n                                                                        ...trainerbackgroundData.areaOfExpertise,\r\n                                                                        \"Pilates\",\r\n                                                                    ],\r\n                                                            }\r\n                                                        );\r\n                                                    } else {\r\n                                                        const index =\r\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                                                \"Pilates\"\r\n                                                            );\r\n                                                        // console.log(index);\r\n                                                        if (index > -1) {\r\n                                                            trainerbackgroundData.areaOfExpertise.splice(\r\n                                                                index,\r\n                                                                1\r\n                                                            );\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                                style={{\r\n                                                    color: \"#53BFD2\",\r\n                                                }}\r\n                                            />\r\n                                            <div className=\"checkbox_label\">\r\n                                                Pilates\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* <div className=\"inputs_experience\"> */}\r\n                                        {/* <Checkbox\r\n                        checked={trainerData?.areaOfExpertise?.includes(\r\n                          \"Strength & HIIT\"\r\n                        )}\r\n                        value=\"\"\r\n                        onChange={handleChange}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <label>Strength & HITT</label>\r\n                      <Checkbox\r\n                        value=\"\"\r\n                        onChange={handleChange}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <label>Boxing</label>\r\n                      <Checkbox\r\n                        value=\"\"\r\n                        onChange={handleChange}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <label>Yoga</label>\r\n                      <Checkbox\r\n                        value=\"\"\r\n                        onChange={handleChange}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <label>Pilates</label>\r\n                    </div> */}\r\n                                    </div>\r\n                                    <div className=\"card_item4\">\r\n                                        <h6>{data.clientDesc}</h6>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            value={trainerData.description}\r\n                                            name=\"description\"\r\n                                            placeholder=\"Give us your elevator pitch! This is all clients will see on the search results page until they click into your full profile.\"\r\n                                            onChange={handleInputChange}\r\n                                            maxLength=\"75\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card_item5\">\r\n                                        <h6>Tell us about your Pricing</h6>\r\n                                        <p>{data.pricingDesc}</p>\r\n                                    </div>\r\n                                    <div className=\"card_item6\">\r\n                                        <Accordion title=\"In Person Training Session Pricing (at the clients location)\">\r\n                                            <div className=\"card_accordion\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Individual charge\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.individualCharge\r\n                                                        }\r\n                                                        name=\"individualCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 2 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssTwoPeopleCharge\r\n                                                        }\r\n                                                        name=\"ssTwoPeopleCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 3 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssThreePeopleCharge\r\n                                                        }\r\n                                                        name=\"ssThreePeopleCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 4 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssFourPeopleCharge\r\n                                                        }\r\n                                                        name=\"ssFourPeopleCharge\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.classFlatRate\r\n                                                        }\r\n                                                        name=\"classFlatRate\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"3 Session Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.threeSessionRate\r\n                                                        }\r\n                                                        name=\"threeSessionRate\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"10 Session Pass Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.tenSessionRate\r\n                                                        }\r\n                                                        name=\"tenSessionRate\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion>\r\n                                        <Accordion title=\"In Person Training Session Pricing (at your location)\">\r\n                                            <div className=\"card_accordion\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Individual charge\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.individualChargeTl\r\n                                                        }\r\n                                                        name=\"individualChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 2 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssTwoPeopleChargeTl\r\n                                                        }\r\n                                                        name=\"ssTwoPeopleChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 3 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssThreePeopleChargeTl\r\n                                                        }\r\n                                                        name=\"ssThreePeopleChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 4 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssFourPeopleChargeTl\r\n                                                        }\r\n                                                        name=\"ssFourPeopleChargeTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.classFlatRateTl\r\n                                                        }\r\n                                                        name=\"classFlatRateTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"3 Session Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.threeSessionRateTl\r\n                                                        }\r\n                                                        name=\"threeSessionRateTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"10 Session Pass Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.tenSessionRateTl\r\n                                                        }\r\n                                                        name=\"tenSessionRateTl\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion>\r\n                                        <Accordion title=\"Virtual Training Session Pricing\">\r\n                                            <div className=\"card_accordion\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Individual charge\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.individualChargeVt\r\n                                                        }\r\n                                                        name=\"individualChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 2 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssTwoPeopleChargeVt\r\n                                                        }\r\n                                                        name=\"ssTwoPeopleChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 3 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssThreePeopleChargeVt\r\n                                                        }\r\n                                                        name=\"ssThreePeopleChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Social Session (Total Charge for 4 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.ssFourPeopleChargeVt\r\n                                                        }\r\n                                                        name=\"ssFourPeopleChargeVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.classFlatRateVt\r\n                                                        }\r\n                                                        name=\"classFlatRateVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"3 Session Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.threeSessionRateVt\r\n                                                        }\r\n                                                        name=\"threeSessionRateVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"10 Session Pass Rate\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.tenSessionRateVt\r\n                                                        }\r\n                                                        name=\"tenSessionRateVt\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={DollarIcon}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion>\r\n                                    </div>\r\n                                    <div className=\"submit_button\">\r\n                                        <Link\r\n                                            onClick={\r\n                                                handleChangeToTrainerProfile\r\n                                            }\r\n                                            type=\"submit\"\r\n                                            // onClick={handleTrainerAvailability}\r\n                                        >\r\n                                            Continue To profile{\" \"}\r\n                                            <ArrowHoverBlacked />\r\n                                            {/* <img src={Arrow} alt=\"icon\" /> */}\r\n                                        </Link>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Accordion({ title, children }) {\r\n    const [isOpenAccodion, setAccordion] = useState(false);\r\n\r\n    // for radio button\r\n    const [selectedValue, setSelectedValue] = useState(\"a\");\r\n\r\n    // for radio\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"accordion-wrapper\">\r\n            <div className=\"cyanRadio_wrapper\">\r\n                <CyanRadio\r\n                    checked={selectedValue === \"\"}\r\n                    onChange={handleChange}\r\n                    onClick={() => setAccordion(!isOpenAccodion)}\r\n                />\r\n                <h6\r\n                    className={`accordion-title ${\r\n                        isOpenAccodion ? \"open\" : \"\"\r\n                    }`}\r\n                    onClick={() => setAccordion(!isOpenAccodion)}\r\n                >\r\n                    {title}\r\n                </h6>\r\n            </div>\r\n            <div\r\n                className={`accordion-item ${\r\n                    !isOpenAccodion ? \"collapsed\" : \"\"\r\n                }`}\r\n            >\r\n                <div className=\"accordion-content\">{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst TrainerCard = connect(mapStateToProps, mapDispatchToProps)(TrainerCardFC);\r\n\r\nexport default TrainerCard;\r\n","export default __webpack_public_path__ + \"static/media/dollar Icon.4c16bd4d.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}