{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerMyProfile/MyProfile.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Location Icon.svg","assets/files/SVG/Image 1.svg","assets/files/SVG/Youtube.svg"],"names":["options","label","value","name","ImageReander","useState","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","className","src","style","objectFit","width","height","onClick","event","preventDefault","current","click","ImageBG","alt","type","ref","accept","onChange","file","target","files","substr","MyProfile","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","motto","trainingProcessDescription","trainingLocation","serviceableLocation","location","websiteLink","instaHandle","youtubeChannel","trainerData","setTrainerData","imageFields","setImageFields","certificate","year","remove","inputCertificatesFields","setInputCertificatesFields","handleChangeCertificateInput","index","values","handleInputChange","e","trainingType","tempData","isMultiSelect","Array","isArray","includes","filter","then","console","log","trainingProcess","myMotto","preferedTrainingMode","youtubeLink","instagramProfile","currentExperience","certification","servicableLocation","workLocation","storeData","map","tempCertification","certfiedYear","certificateName","catch","err","onSubmit","placeholder","input","inputCertificatesField","isMulti","Location","Web","Instagram","Youtube","payload","updateTrainerAvailabilityApi","TrainerApi","body","api","message"],"mappings":"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","file":"static/js/38.2c894c14.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Select from \"react-select\";\r\n\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport ImageBG from \"assets/files/SVG/Image 1.svg\";\r\nimport Instagram from \"assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"assets/files/SVG/Web Icon.svg\";\r\nimport Youtube from \"assets/files/SVG/Youtube.svg\";\r\nimport Location from \"assets/files/SVG/Location Icon.svg\";\r\nimport { getTrainerDetails, updateTrainerDetails } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\n\r\nconst options = [\r\n  { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\r\n  { label: \"New York\", value: \"New York\", name: \"serviceableLocation\" },\r\n  { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\r\n  { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\r\n];\r\nconst MyProfileFC = ({ getTrainerDetails, details }) => {\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n\r\n  const [trainerData, setTrainerData] = useState({\r\n    motto: \"\",\r\n    trainingProcessDescription: \"\",\r\n    trainingLocation: [],\r\n    serviceableLocation: \"\",\r\n    location: \"\",\r\n    websiteLink: \"\",\r\n    instaHandle: \"\",\r\n    youtubeChannel: \"\",\r\n  });\r\n\r\n  //Image\r\n  const [imageFields, setImageFields] = useState([\r\n    {\r\n      image: \"\",\r\n    },\r\n  ]);\r\n  const handleAddFields = () => {\r\n    setImageFields([...imageFields, { image: \"\" }]);\r\n  };\r\n\r\n  // input certification\r\n  const [inputCertificatesFields, setInputCertificatesFields] = useState([\r\n    {\r\n      certificate: \"\",\r\n      year: \"\",\r\n      remove: \"\",\r\n    },\r\n  ]);\r\n  const handleAddCertificateFields = () => {\r\n    setInputCertificatesFields([\r\n      ...inputCertificatesFields,\r\n      { certificate: \"\", year: \"\", remove: \"\" },\r\n    ]);\r\n  };\r\n  const handleChangeCertificateInput = (index, event) => {\r\n    const values = [...inputCertificatesFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputCertificatesFields(values);\r\n  };\r\n\r\n  const handleInputChange = (e, trainingType) => {\r\n    e.preventDefault && e.preventDefault();\r\n\r\n    const { name, value, label } = e.target || e || {};\r\n\r\n    const tempData = {\r\n      ...trainerData,\r\n    };\r\n\r\n    // if(label) value = {label , name , value};\r\n\r\n    const isMultiSelect = Array.isArray(e);\r\n\r\n    if (name === \"trainingLocation\") {\r\n      if (tempData[\"trainingLocation\"].includes(trainingType)) {\r\n        tempData[\"trainingLocation\"] = tempData[\"trainingLocation\"].filter(\r\n          (location) => location !== trainingType\r\n        );\r\n      } else {\r\n        tempData[\"trainingLocation\"] = [\r\n          ...tempData[\"trainingLocation\"],\r\n          trainingType,\r\n        ];\r\n      }\r\n    } else {\r\n      tempData[`${isMultiSelect ? e[0].name : name}`] = isMultiSelect\r\n        ? e\r\n        : value;\r\n    }\r\n\r\n    setTrainerData(tempData);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const {\r\n      instaHandle,\r\n      location,\r\n      motto,\r\n      serviceableLocation,\r\n      trainingLocation,\r\n      trainingProcessDescription,\r\n      websiteLink,\r\n      youtubeChannel,\r\n    } = trainerData;\r\n\r\n    let payload = {\r\n      trainingProcess: trainingProcessDescription,\r\n      myMotto: motto,\r\n      preferedTrainingMode: trainingLocation,\r\n      websiteLink,\r\n      youtubeLink: youtubeChannel,\r\n      instagramProfile: instaHandle,\r\n      currentExperience: { workLocation: location },\r\n      certification: inputCertificatesFields?.map(({ certificate, year }) => ({\r\n        certificateName: \"\",\r\n        certfiedYear: year,\r\n        certification: certificate,\r\n      })),\r\n      servicableLocation: serviceableLocation?.map(({ value }) => value),\r\n    };\r\n    // updateTrainerDetails();\r\n\r\n    console.log(payload);\r\n\r\n    const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n    updateTrainerAvailabilityApi.body = payload;\r\n\r\n    api({ ...updateTrainerAvailabilityApi })\r\n      .then(({ data, message }) => {\r\n        console.log(data, message);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // history.push(\"/trainers/dashboard/session\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTrainerDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n\r\n        const {\r\n          trainingProcess = \"\",\r\n          myMotto = \"\",\r\n          preferedTrainingMode = \"\",\r\n          websiteLink = \"\",\r\n          youtubeLink = \"\",\r\n          instagramProfile = \"\",\r\n          currentExperience = {},\r\n          certification = \"\",\r\n          servicableLocation = [],\r\n        } = data || {};\r\n\r\n        const { workLocation = \"\" } = currentExperience || {};\r\n\r\n        const storeData = {\r\n          details: {\r\n            motto: myMotto,\r\n            trainingProcessDescription: trainingProcess,\r\n            trainingLocation: preferedTrainingMode,\r\n            serviceableLocation: servicableLocation?.map((location) => ({\r\n              label: location,\r\n              value: location,\r\n              name: \"serviceableLocation\",\r\n            })),\r\n            location: workLocation,\r\n            websiteLink,\r\n            instaHandle: instagramProfile,\r\n            youtubeChannel: youtubeLink,\r\n            ...details,\r\n          },\r\n        };\r\n\r\n        const tempCertification = certification?.map(\r\n          ({ certfiedYear, certificateName }) => ({\r\n            certificate: certificateName,\r\n            year: certfiedYear,\r\n          })\r\n        );\r\n\r\n        setInputCertificatesFields(tempCertification);\r\n\r\n        setTrainerData(storeData.details);\r\n\r\n        updateTrainerDetails(storeData);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"outter_tp_container\">\r\n        <div className=\"container\">\r\n          <div className=\"inner_trinerpro_container\">\r\n            <div className=\"tp_wrapper\">\r\n              <div className=\"tp_header\">\r\n                <h2>My Profile</h2>\r\n              </div>\r\n              <div className=\"tp_outter_form container\">\r\n                <form onSubmit={(e) => e.preventDefault()}>\r\n                  <div className=\"tp_inner_form\">\r\n                    <div className=\"tp_item1\">\r\n                      <label>What’s your Motto?</label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"\"\r\n                        onChange={handleInputChange}\r\n                        value={trainerData.motto}\r\n                        name=\"motto\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"tp_item1\">\r\n                      <label>\r\n                        Tell us about you and describe your training process\r\n                      </label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        onChange={handleInputChange}\r\n                        value={trainerData.trainingProcessDescription}\r\n                        name=\"trainingProcessDescription\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"tp_item1\">\r\n                      <label>\r\n                        Throw in some photos showcasing you & your skills\r\n                      </label>\r\n                      <div className=\"tp_image_render\">\r\n                        {imageFields.map((index, input) => {\r\n                          return (\r\n                            <div key={index} className=\"render_image\">\r\n                              <ImageReander value={input.image} />\r\n                              <ImageReander value={input.image} />\r\n                              <ImageReander value={input.image} />\r\n                              <ImageReander value={input.image} />\r\n                              <ImageReander value={input.image} />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                        <h5 onClick={() => handleAddFields()}>\r\n                          + Add More Image's\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"tp_item_certi\">\r\n                      <label>\r\n                        Throw in some photos showcasing you & your skills\r\n                      </label>\r\n                      <div className=\"tp_certificates\">\r\n                        {inputCertificatesFields?.map(\r\n                          (inputCertificatesField, index) => (\r\n                            <div className=\"tp_input_certificate\" key={index}>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Display Certification API \"\r\n                                value={inputCertificatesField.certificate}\r\n                                name=\"certificate\"\r\n                                onChange={(event) =>\r\n                                  handleChangeCertificateInput(index, event)\r\n                                }\r\n                              />\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Display Year API\"\r\n                                value={inputCertificatesField.year}\r\n                                name=\"year\"\r\n                                onChange={(event) =>\r\n                                  handleChangeCertificateInput(index, event)\r\n                                }\r\n                              />\r\n                              <button\r\n                                name=\"remove\"\r\n                                value={inputCertificatesField.remove}\r\n                              >\r\n                                Remove <BlueHoverButton />\r\n                              </button>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                        <h5 onClick={handleAddCertificateFields}>\r\n                          + Add Certification\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"setup_card5\">\r\n                      <div className=\"setupcontent_wrapper\">\r\n                        <div className=\"setup_item\">\r\n                          <label>Where will you be training?</label>\r\n                          <div className=\"inputs_platform\">\r\n                            <button\r\n                              onClick={(e) => handleInputChange(e, \"Online\")}\r\n                              className={`${\r\n                                trainerData?.trainingLocation?.includes(\r\n                                  \"Online\"\r\n                                )\r\n                                  ? \"active\"\r\n                                  : \"\"\r\n                              }`}\r\n                              name=\"trainingLocation\"\r\n                            >\r\n                              Virtual\r\n                            </button>\r\n                            <button\r\n                              onClick={(e) => handleInputChange(e, \"inperson\")}\r\n                              className={`${\r\n                                trainerData?.trainingLocation?.includes(\r\n                                  \"inperson\"\r\n                                )\r\n                                  ? \"active\"\r\n                                  : \"\"\r\n                              }`}\r\n                              name=\"trainingLocation\"\r\n                            >\r\n                              In Person\r\n                            </button>\r\n                            <button\r\n                              onClick={(e) => handleInputChange(e, \"outdoors\")}\r\n                              className={`${\r\n                                trainerData?.trainingLocation?.includes(\r\n                                  \"outdoors\"\r\n                                )\r\n                                  ? \"active\"\r\n                                  : \"\"\r\n                              }`}\r\n                              name=\"trainingLocation\"\r\n                            >\r\n                              Outdoors\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"setup_item1\">\r\n                          <h6>Which city will you train in?</h6>\r\n                          <div className=\"inputs_platform\">\r\n                            <div className=\"iconwrapper\">\r\n                              <Select\r\n                                // defaultValue={trainingVenue}\r\n                                value={trainerData.serviceableLocation}\r\n                                onChange={handleInputChange}\r\n                                options={options}\r\n                                isMulti\r\n                                placeholder=\"List all areas that you will service\"\r\n                                // className=\"session_location_select\"\r\n                                className=\"w-100\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"setup_item1\">\r\n                          <h6>Your preferred training location</h6>\r\n                          <div className=\"inputs_platform\">\r\n                            <div className=\"iconwrapper\">\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Select your Location\"\r\n                                onChange={handleInputChange}\r\n                                value={trainerData.location}\r\n                                name=\"location\"\r\n                              />\r\n                              <img src={Location} alt=\"icon\" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"setup_item1\">\r\n                          <h6>Website</h6>\r\n                          <div className=\"inputs_platform\">\r\n                            <div className=\"iconwrapper\">\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add your Web Link\"\r\n                                onChange={handleInputChange}\r\n                                value={trainerData.websiteLink}\r\n                                name=\"websiteLink\"\r\n                              />\r\n                              <img src={Web} alt=\"icon\" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"setup_item1\">\r\n                          <h6>Instagram</h6>\r\n                          <div className=\"inputs_platform\">\r\n                            <div className=\"iconwrapper\">\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add your Instagram Handle\"\r\n                                onChange={handleInputChange}\r\n                                value={trainerData.instaHandle}\r\n                                name=\"instaHandle\"\r\n                              />\r\n                              <img src={Instagram} alt=\"icon\" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"setup_item1\">\r\n                          <h6>Youtube</h6>\r\n                          <div className=\"inputs_platform\">\r\n                            <div className=\"iconwrapper\">\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add your Youtube Channel\"\r\n                                onChange={handleInputChange}\r\n                                value={trainerData.youtubeChannel}\r\n                                name=\"youtubeChannel\"\r\n                              />\r\n                              <img src={Youtube} alt=\"icon\" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tp_button_save\">\r\n                    <button onClick={handleSubmit}>\r\n                      Save changes <BlueHoverButton />\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst ImageReander = () => {\r\n  const [image, setImage] = useState();\r\n  const [previewImage, setPreviewTmage] = useState();\r\n  const fileInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewTmage(reader.result);\r\n      };\r\n      reader.readAsDataURL(image);\r\n    } else {\r\n      setPreviewTmage(null);\r\n    }\r\n  }, [image]);\r\n  return (\r\n    <>\r\n      <div className=\"renderImage\">\r\n        {previewImage ? (\r\n          <img\r\n            src={previewImage}\r\n            style={{\r\n              objectFit: \"cover\",\r\n              width: \"180px\",\r\n              height: \"180px\",\r\n            }}\r\n            onClick={() => {\r\n              setPreviewTmage(null);\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"combin_profile\">\r\n            <button\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                fileInputRef.current.click();\r\n              }}\r\n            >\r\n              <img\r\n                // src={Profile}\r\n                src={ImageBG}\r\n                alt=\"icon\"\r\n                style={{\r\n                  objectFit: \"cover\",\r\n                  width: \"180px\",\r\n                  height: \"180px\",\r\n                }}\r\n              />\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          accept=\"image/*\"\r\n          onChange={(event) => {\r\n            const file = event.target.files[0];\r\n            if (file && file.type.substr(0, 5) === \"image\") {\r\n              setImage(file);\r\n            } else {\r\n              setImage(null);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  details: state.trainerReducer.details,\r\n  trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateTrainerDetails,\r\n      getTrainerDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst MyProfile = connect(mapStateToProps, mapDispatchToProps)(MyProfileFC);\r\n\r\nexport default MyProfile;\r\n","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";","export default __webpack_public_path__ + \"static/media/Image 1.8f33ee1e.svg\";","export default __webpack_public_path__ + \"static/media/Youtube.1eb126cd.svg\";"],"sourceRoot":""}