{"version":3,"sources":["component/TrainerSignUp/Banner/index.js","component/TrainerSignUp/Banner/useForm.js","component/TrainerSignUp/Banner/validation.js","assets/files/SignUp/Phone Icon.svg"],"names":["BannerTrainer","connect","dispatch","bindActionCreators","loginOrSignupAct","loginOrSignUp","submitForm","history","useHistory","useForm","validateInfo","data","handleFormSubmit","error","setData","dataSubmit","onChangeValue","e","persist","target","name","value","useState","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","apiError","setApiError","register","errors","handleSubmit","watch","a","payload","email","password","cpassword","phoneNumber","signUpType","console","log","trainerSignUp","AuthApi","then","push","catch","message","className","onSubmit","placeholder","type","onChange","src","Person","alt","Mail","disableDropdown","countryCodeEditable","country","inputProps","Phone","Password","onClick","to","validate","callback","setError","isSubmit","setSubmit","setdataSubmit","useEffect","Object","keys","length","preventDefault","errorData","validation","values","test"],"mappings":"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","file":"static/js/51.fda0b248.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Person from \"../../../assets/files/SignUp/Person Icon.svg\";\r\nimport Mail from \"../../../assets/files/SignUp/Email Icon.svg\";\r\nimport Phone from \"../../../assets/files/SignUp/Phone Icon.svg\";\r\nimport Password from \"../../../assets/files/SignUp/Password Icon.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport BlueHoverButton from \"../../common/BlueArrowButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginOrSignUp } from \"action/authAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AuthApi } from \"service/apiVariables\";\r\nimport useForm from \"./useForm\";\r\nimport validateInfo from \"./validation\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\n// import PhoneInput from \"react-phone-input-2\";\r\n// import \"react-phone-input-2/lib/style.css\";\r\n\r\nconst BannerTrainerFC = ({ loginOrSignupAct, submitForm }) => {\r\n    const history = useHistory();\r\n\r\n    const { data, handleFormSubmit, error, setData,dataSubmit } = useForm( validateInfo,submitForm);\r\n\r\n    const onChangeValue = (e) => {\r\n        e.persist();\r\n        setData({ ...data, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n    const [apiError, setApiError] = useState(\"\");\r\n    const { register, errors, handleSubmit, watch } = useForm();\r\n    const showPassword = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n    const showConfirmPassword = () => {\r\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n    };\r\n\r\n    async function trainerSignUp() {\r\n        \r\n        const payload = {\r\n            name: data.name,\r\n            email: data.email,\r\n            password: data.password,\r\n            cpassword: data.cpassword,\r\n            phoneNumber: data.phoneNumber,\r\n            signUpType: data.signUpType,\r\n        };\r\n        console.log(payload);\r\n\r\n        // const requestOptions = {\r\n        //   method: \"POST\",\r\n        //   headers: {\r\n        //     \"Content-Type\": \"application/json\",\r\n        //     Accept: \"application/json\",\r\n        //   },\r\n        //   body: JSON.stringify(item),\r\n        // };\r\n\r\n        const { trainerSignUp } = AuthApi;\r\n        \r\n     if (dataSubmit){\r\n       \r\n            loginOrSignupAct(trainerSignUp, payload)\r\n                .then(({ data }) => {\r\n                    // console.log(data);\r\n                    history.push(\"/trainer/about\");\r\n                })\r\n                .catch((error) => {\r\n                    setApiError(error.message);\r\n                });\r\n     }\r\n        \r\n\r\n        // fetch(\"http://doodlebluelive.com:2307/v1/trainer/sign-up\", requestOptions)\r\n        //   .then(async (response) => {\r\n        //     const data = await response.json();\r\n        //     localStorage.setItem(\"user-info\", JSON.stringify(data));\r\n        //     if (response.ok) {\r\n        //     } else {\r\n        //       setApiError(\"Email already registered\", response.statusText);\r\n        //     }\r\n        //   })\r\n            \r\n    }\r\n\r\n    // const [phone, setPhone] = useState({\r\n    //     phoneNumber: \"\",\r\n    // });\r\n    // const handeOnChange = (value) => {\r\n    //     setPhone({\r\n    //         phoneNumber: value,\r\n    //     });\r\n    // };\r\n    return (\r\n        <>\r\n            <div className=\"banner_container_trainer\">\r\n                <div className=\"wrapper_main container\">\r\n                    <div className=\"item_left\">\r\n                        <h2>Sign Up to be a part of the Motto Family</h2>\r\n                        <h6>\r\n                            Create an account to start the application process\r\n                            of becoming a Motto trainer in one of our live\r\n                            cities.\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"item_right\">\r\n                            <div className=\"inner_wrapper \">\r\n                                <div className=\"inner_items\">\r\n                                    <h3>Train with Motto!</h3>\r\n                                    <p>\r\n                                        Sign up to apply to become a Motto\r\n                                        Trainer\r\n                                    </p>\r\n                                    <div className=\"form_items_trainer\">\r\n                                        <form onSubmit={handleFormSubmit}>\r\n                                            <div className=\"input_items_trainer\">\r\n                                                <input\r\n                                                    placeholder=\"Fullname\"\r\n                                                    type=\"text\"\r\n                                                    value={data.name}\r\n                                                    name=\"name\"\r\n                                                    onChange={onChangeValue}\r\n                                                    className=\"fullname\"\r\n                                                />\r\n                                                <img src={Person} alt=\"icon\" />\r\n                                                {error.name && (\r\n                                                    <span>{error.name}</span>\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div className=\"input_items_trainer\">\r\n                                                <input\r\n                                                    placeholder=\"Email\"\r\n                                                    type=\"email\"\r\n                                                    value={data.email}\r\n                                                    name=\"email\"\r\n                                                    onChange={onChangeValue}\r\n                                                />\r\n                                                <img src={Mail} alt=\"icon\" />\r\n                                                {error.email && (\r\n                                                    <span>{error.email}</span>\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div className=\"input_items_trainer\">\r\n                                                {/* <input\r\n                                                    placeholder=\"Phone\"\r\n                                                    type=\"tel\"\r\n                                                    value={data.phoneNumber}\r\n                                                    name=\"phoneNumber\"\r\n                                                    onChange={onChangeValue}\r\n                                                /> */}\r\n\r\n                                                <ReactPhoneInput\r\n                                                    disableDropdown\r\n                                                    // prefix=\"+1\"\r\n                                                    countryCodeEditable={false}\r\n                                                    country=\"us\"\r\n                                                    placeholder=\"Phone Number\"\r\n                                                    inputProps={{\r\n                                                        name: \"phoneNumber\",\r\n                                                    }}\r\n                                                    value={data.phoneNumber}\r\n                                                    name=\"phoneNumber\"\r\n                                                    onChange={(e) => {\r\n                                                        console.log(e);\r\n                                                        setData({\r\n                                                            ...data,\r\n                                                            phoneNumber: e,\r\n                                                        });\r\n                                                    }}\r\n                                                />\r\n\r\n                                                {/* <PhoneInput\r\n                                                    country={\"us\"}\r\n                                                    defaultCountry={\"us\"}\r\n                                                    value={phone.phoneNumber}\r\n                                                    onChange={handeOnChange}\r\n                                                    showDropdown={false}\r\n                                                    disableCountryCode={false}\r\n                                                /> */}\r\n\r\n                                                <img src={Phone} alt=\"icon\" />\r\n                                                {error.phoneNumber && (\r\n                                                    <span>\r\n                                                        {error.phoneNumber}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div className=\"input_items_trainer\">\r\n                                                <input\r\n                                                    placeholder=\"Create Password\"\r\n                                                    type={\r\n                                                        passwordShown\r\n                                                            ? \"text\"\r\n                                                            : \"password\"\r\n                                                    }\r\n                                                    value={data.password}\r\n                                                    name=\"password\"\r\n                                                    onChange={onChangeValue}\r\n                                                />\r\n                                                <img\r\n                                                    src={Password}\r\n                                                    alt=\"icon\"\r\n                                                    onClick={showPassword}\r\n                                                />\r\n                                                {error.password && (\r\n                                                    <span>\r\n                                                        {error.password}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div className=\"input_items_trainer\">\r\n                                                <input\r\n                                                    placeholder=\"Confirm Password\"\r\n                                                    type={\r\n                                                        confirmPasswordShown\r\n                                                            ? \"text\"\r\n                                                            : \"password\"\r\n                                                    }\r\n                                                    value={data.cpassword}\r\n                                                    name=\"cpassword\"\r\n                                                    onChange={onChangeValue}\r\n                                                />\r\n                                                <img\r\n                                                    src={Password}\r\n                                                    alt=\"icon\"\r\n                                                    onClick={\r\n                                                        showConfirmPassword\r\n                                                    }\r\n                                                />\r\n                                                {error.cpassword && (\r\n                                                    <span>\r\n                                                        {error.cpassword}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                            {apiError && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {apiError}\r\n                                                </span>\r\n                                            )}\r\n\r\n                                            <div className=\"submit_button\">\r\n                                                <button\r\n                                                    type=\"submit\"\r\n                                                    onClick={trainerSignUp()}\r\n                                                >\r\n                                                    <p>Continue to Account</p>\r\n                                                    <ArrowHoverBlacked />\r\n                                                </button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"login_items\">\r\n                                        <h4>Already have an account?</h4>\r\n\r\n                                        <Link to=\"/\">\r\n                                            Sign In now\r\n                                            <BlueHoverButton />\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            loginOrSignupAct: loginOrSignUp,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst BannerTrainer = connect(null, mapDispatchToProps)(BannerTrainerFC);\r\n\r\nexport default BannerTrainer;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (validate,callback) => {\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        password: \"\",\r\n        cpassword: \"\",\r\n        signUpType: \"email\",\r\n    });\r\n\r\n\r\n    const [error, setError] = useState({})\r\n    // const [error, setError] = useState({\r\n    //     name: \"\",\r\n    //     email: \"\",\r\n    //     phoneNumber: \"\",\r\n    //     password: \"\",\r\n    //     cpassword: \"\",\r\n    // });\r\n    const [isSubmit, setSubmit] = useState(false);\r\n\r\n    const [dataSubmit,setdataSubmit] = useState(false)\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const errorData = validate(data);\r\n        setError(errorData);\r\n        setSubmit(true)\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(error).length === 0 && \r\n        isSubmit) {\r\n            setdataSubmit(true)\r\n           \r\n        }\r\n    }, [error])\r\n\r\n    return { data, handleFormSubmit, error, setData,dataSubmit};\r\n};\r\nexport default useForm;\r\n","const validation = (values) => {\r\n    let errors = {};\r\n\r\n    if (!values.name) {\r\n        errors.name = \"This field is required\";\r\n    } else if (values.name.length <= 1) {\r\n        errors.name = \"This field should contain more than one character\";\r\n    }\r\n    //  } else if(!/^([a-z']+(-| )?)+$/i.test(values.name)){\r\n    //      errors.name=\" Enter a valid name\"\r\n    //  }\r\n    else if (!/^[a-zA-Z]+(\\s[a-zA-Z]+)+$/gm.test(values.name)) {\r\n        errors.name = \"Enter full name\";\r\n    } else if (!/^[a-zA-Z]+\\s[a-zA-Z]+\\s?$/g.test(values.name)) {\r\n        errors.name = \" Enter a valid name\";\r\n    }\r\n\r\n    // ^([a-zA-Z]{2,}\\s[a-zA-Z]{1,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)\r\n    // else if(!/^[A-Za-z_ ]+$/i.test(values.name)){\r\n    //     errors.name=\" This field accept only alphabets\"\r\n    // }\r\n\r\n    // else if(!/^([a-z']+(-| )?)+$/i.test(values.name)){\r\n    //     errors.name=\" Enter a valid name\"\r\n    // }\r\n    //   ^\\s*([A-Za-z]{1,}([\\.,] |[-']| ))+[A-Za-z]+\\.?\\s*$\r\n\r\n    if (!values.email) {\r\n        errors.email = \"   This field is required\";\r\n    } else if (\r\n        !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(\r\n            values.email\r\n        )\r\n    ) {\r\n        errors.email = \" Please enter a valid email address\";\r\n    } else if (values.email.length < 8) {\r\n        errors.email = \" This field should contain greater then 8 charater\";\r\n    }\r\n\r\n    if (!values.phoneNumber) {\r\n        errors.phoneNumber = \"   This field is required\";\r\n    } else if (!/^[0-9]*$/i.test(values.phoneNumber)) {\r\n        errors.phoneNumber = \"Invalid Number\";\r\n    } else if (values.phoneNumber.length < 11) {\r\n        errors.phoneNumber = \"Enter a valid number\";\r\n    } else if (values.phoneNumber.length >= 12) {\r\n        errors.phoneNumber = \" This field exceed max length\";\r\n    }\r\n    //  else if(!/^[0-9]*$/i.test(values.phone)){\r\n    //     errors.phoneNumber = 'Invalid Number'\r\n\r\n    // else if(!/^\\+(?:[0-9]●?){6,14}[0-9]$/i.test(values.phoneNumber)){\r\n    //     errors.phoneNumber = 'Invalid Number'\r\n\r\n    if (!values.password) {\r\n        errors.password = \"This field is required\";\r\n    } else if (values.password.length < 6) {\r\n        errors.password = \" Password should be more then 6 Charcters\";\r\n    } else if (values.password.length > 16) {\r\n        errors.password = \" This field exceed max length\";\r\n    } else if (\r\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\r\n            values.password\r\n        )\r\n    ) {\r\n        errors.password =\r\n            \" Password should be 8 characters long and contain a Capital letter, Number & Special character\";\r\n    }\r\n\r\n    if (!values.cpassword) {\r\n        errors.cpassword = \"This field is required\";\r\n    } else if (values.cpassword.length < 6) {\r\n        errors.cpassword = \" Password should be more then 6 Charcters\";\r\n    } else if (values.cpassword.length > 16) {\r\n        errors.cpassword = \" This field exceed max length\";\r\n    } else if (\r\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\r\n            values.cpassword\r\n        )\r\n    ) {\r\n        errors.cpassword =\r\n            \" Password should be 8 characters long and contain a Capital letter, Number & Special character\";\r\n    } else if (values.password !== values.cpassword) {\r\n        errors.cpassword = \"  The passwords do not match\";\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validation;\r\n","export default __webpack_public_path__ + \"static/media/Phone Icon.f207d1b4.svg\";"],"sourceRoot":""}