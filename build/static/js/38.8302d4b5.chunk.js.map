{"version":3,"sources":["action/trainerAct.js","component/TrainerDashBoard/DashboardCompontents/TrainerMyProfile/MyProfile.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Image 1.svg","assets/files/SVG/Location Icon.svg","assets/files/SVG/Youtube.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js"],"names":["updateTrainerDetails","payload","dispatch","Promise","resolve","type","TrainerActionType","getTrainerDetails","getState","api","reject","getTrainerApi","TrainerApi","then","data","catch","err","getTrainerSessionDetails","getTrainerSessionApi","console","log","sessionData","options","label","value","name","CyanRadio","withStyles","root","color","cyan","checked","props","ImageReander","useState","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","className","src","style","objectFit","width","height","onClick","event","preventDefault","current","click","ImageBG","alt","ref","accept","onChange","file","target","files","substr","MyProfile","connect","state","details","trainerReducer","trainerPersonalData","bindActionCreators","motto","trainingProcessDescription","trainingLocation","serviceableLocation","location","websiteLink","instaHandle","youtubeChannel","trainerData","setTrainerData","React","hoursPerWeek","preferedTrainingMode","trainingFacilityLocation","willingToTravel","servicableLocation","trainerAvailabilityData","setTrainerAvailabilityData","visiable","renderButton","setRenderButton","selectedValue","setSelectedValue","selectedOneValue","setSelectedOneValue","handleOneChange","handleChange","imageFields","setImageFields","certificate","year","remove","inputCertificatesFields","setInputCertificatesFields","handleChangeCertificateInput","index","values","handleInputChange","e","trainingType","tempData","isMultiSelect","Array","isArray","includes","filter","trainingProcess","myMotto","instagramProfile","storeData","onSubmit","placeholder","maxlength","slice","map","input","splice","handleRemoveFields","inputCertificatesField","title","list","inputProps","Location","Instagram","Web","headers","Authorization","localStorage","getItem","axios","get","applicationStatus","res","certification","certificateName","certfiedYear","updateTrainerAvailabilityApi","body","message","alert","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","length","funcs","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/38.8302d4b5.chunk.js","sourcesContent":["import { TrainerActionType } from \"service/actionType\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\n\r\nexport const updateTrainerDetails = (payload) => (dispatch) => {\r\n  return new Promise((resolve) => {\r\n    dispatch({ type: TrainerActionType.updateTrainerDetails, payload });\r\n\r\n    resolve(true);\r\n  });\r\n};\r\n\r\nexport const getTrainerDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerApi })\r\n      .then(({ data }) => {\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getTrainerSessionDetails = () => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerSessionApi } = TrainerApi;\r\n\r\n    api({ ...getTrainerSessionApi })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: TrainerActionType.updateTrainerDetails,\r\n          payload: { sessionData: data },\r\n        });\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\n// import Select from \"react-select\";\r\n\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport ImageBG from \"assets/files/SVG/Image 1.svg\";\r\nimport Instagram from \"assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"assets/files/SVG/Web Icon.svg\";\r\nimport Youtube from \"assets/files/SVG/Youtube.svg\";\r\nimport Location from \"assets/files/SVG/Location Icon.svg\";\r\nimport { getTrainerDetails, updateTrainerDetails } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport axios from \"axios\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\n\r\nconst options = [\r\n    { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\r\n    {\r\n        label: \"New York City\",\r\n        value: \"New York City\",\r\n        name: \"serviceableLocation\",\r\n    },\r\n    { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\r\n    { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\r\n];\r\n\r\nconst CyanRadio = withStyles({\r\n    root: {\r\n        \"&$checked\": {\r\n            color: cyan[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst MyProfileFC = ({\r\n    getTrainerDetails,\r\n    details,\r\n    updateTrainerDetails,\r\n    // trainerPersonalData,\r\n}) => {\r\n    const data = {\r\n        heading: \"Build out the rest of your Profile!\",\r\n        describe:\r\n            \"Your trainer profile is what clients will see when they click on your trainer card while filtering results. The below information and training settings can be changed at any time.\",\r\n        motto: \"What’s your Motto?\",\r\n        tellUs: \"Tell us about you and describe your training process\",\r\n        showcase: \"Throw in some photos showcasing you & your skills\",\r\n        certificate: \"Certifications you’d like to display\",\r\n        where: \"Where will you be training\",\r\n        serviceable: \"Which city will you train in?\",\r\n        location: \"Your preferred training location\",\r\n        web: \"Website\",\r\n        insta: \"Instagram\",\r\n        youtube: \"Youtube\",\r\n    };\r\n\r\n    const [trainerData, setTrainerData] = useState({\r\n        motto: \"\",\r\n        trainingProcessDescription: \"\",\r\n        trainingLocation: [],\r\n        serviceableLocation: \"\",\r\n        location: \"\",\r\n        websiteLink: \"\",\r\n        instaHandle: \"\",\r\n        youtubeChannel: \"\",\r\n    });\r\n    const [trainerAvailabilityData, setTrainerAvailabilityData] =\r\n        React.useState({\r\n            hoursPerWeek: \"\",\r\n            preferedTrainingMode: [],\r\n            trainingFacilityLocation: \"\",\r\n            willingToTravel: \"0\",\r\n            servicableLocation: \"\",\r\n        });\r\n\r\n    const [renderButton, setRenderButton] = useState({\r\n        visiable: false,\r\n    });\r\n\r\n    //state for radio buttons\r\n    const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n    const [selectedOneValue, setSelectedOneValue] = React.useState(\"\");\r\n\r\n    const handleOneChange = (event) => {\r\n        setSelectedOneValue(event.target.value);\r\n\r\n        setTrainerAvailabilityData({\r\n            ...trainerAvailabilityData,\r\n            willingToTravel: event.target.value,\r\n        });\r\n    };\r\n\r\n    //handleChange for radio\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    //Image\r\n    const [imageFields, setImageFields] = useState([\r\n        {\r\n            image: \"\",\r\n        },\r\n    ]);\r\n    // const handleAddFields = () => {\r\n    //     setImageFields([...imageFields, { image: \"\" }]);\r\n    // };\r\n\r\n    // input certification\r\n    const [inputCertificatesFields, setInputCertificatesFields] = useState([\r\n        {\r\n            certificate: \"\",\r\n            year: \"\",\r\n            remove: \"\",\r\n        },\r\n    ]);\r\n    const handleAddCertificateFields = () => {\r\n        setInputCertificatesFields([\r\n            ...inputCertificatesFields,\r\n            { certificate: \"\", year: \"\", remove: \"\" },\r\n        ]);\r\n    };\r\n    const handleChangeCertificateInput = (index, event) => {\r\n        const values = [...inputCertificatesFields];\r\n        values[index][event.target.name] = event.target.value;\r\n        setInputCertificatesFields(values);\r\n    };\r\n\r\n    //adding and removing the input certificate field\r\n    const handleAddFields = () => {\r\n        setImageFields([...imageFields, { image: \"\" }]);\r\n        setRenderButton(false);\r\n    };\r\n    const handleRemoveFields = (index) => {\r\n        const values = [...imageFields];\r\n        values.splice(index, 1);\r\n        setImageFields(values);\r\n        setRenderButton(true);\r\n    };\r\n\r\n    const handleInputChange = (e, trainingType) => {\r\n        e.preventDefault && e.preventDefault();\r\n\r\n        const { name, value, label } = e.target || e || {};\r\n\r\n        const tempData = {\r\n            ...trainerData,\r\n        };\r\n\r\n        // if(label) value = {label , name , value};\r\n\r\n        const isMultiSelect = Array.isArray(e);\r\n\r\n        if (name === \"trainingLocation\") {\r\n            if (tempData[\"trainingLocation\"].includes(trainingType)) {\r\n                tempData[\"trainingLocation\"] = tempData[\r\n                    \"trainingLocation\"\r\n                ].filter((location) => location !== trainingType);\r\n            } else {\r\n                tempData[\"trainingLocation\"] = [\r\n                    ...tempData[\"trainingLocation\"],\r\n                    trainingType,\r\n                ];\r\n            }\r\n        } else {\r\n            tempData[`${isMultiSelect ? e[0].name : name}`] = isMultiSelect\r\n                ? e\r\n                : value;\r\n        }\r\n\r\n        setTrainerData(tempData);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"token\"),\r\n        };\r\n\r\n        axios\r\n            .get(\r\n                \"http://doodlebluelive.com:2307/v1/trainer\",\r\n                { applicationStatus: \"setupComplete\" },\r\n                {\r\n                    headers: headers,\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n            });\r\n        const {\r\n            instaHandle,\r\n            // location,\r\n            motto,\r\n            // serviceableLocation,\r\n            // trainingLocation,\r\n            trainingProcessDescription,\r\n            websiteLink,\r\n            // youtubeChannel,\r\n        } = trainerData;\r\n        console.log(trainerData, \"trainer data\");\r\n\r\n        let payload = {\r\n            trainingProcess: trainingProcessDescription,\r\n            myMotto: motto,\r\n            preferedTrainingMode: websiteLink,\r\n            // youtubeLink: youtubeChannel,\r\n            instagramProfile: instaHandle,\r\n            // currentExperience: { workLocation: location },\r\n            certification: inputCertificatesFields?.map(\r\n                ({ certificate, year }) => ({\r\n                    certificateName: \"\",\r\n                    certfiedYear: year,\r\n                    certification: certificate,\r\n                })\r\n            ),\r\n            // servicableLocation: serviceableLocation?.map(({ value }) => value),\r\n        };\r\n        // updateTrainerDetails();\r\n\r\n        console.log(payload, \"payload\");\r\n\r\n        const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n        updateTrainerAvailabilityApi.body = payload;\r\n\r\n        api({ ...updateTrainerAvailabilityApi })\r\n            .then(({ data, message }) => {\r\n                console.log(data, message);\r\n                alert(\"Successfully added changes\");\r\n            })\r\n            .catch((err) => console.log(err));\r\n\r\n        // history.push(\"/trainers/dashboard/session\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTrainerDetails()\r\n            .then((data) => {\r\n                console.log(data, \"api data\");\r\n\r\n                const {\r\n                    trainingProcess = \"\",\r\n                    myMotto = \"\",\r\n                    // preferedTrainingMode = \"\",\r\n                    websiteLink = \"\",\r\n                    // youtubeLink = \"\",\r\n                    instagramProfile = \"\",\r\n                    // currentExperience = {},\r\n                    // certification = \"\",\r\n                    // servicableLocation = [],\r\n                } = data || {};\r\n\r\n                // const { workLocation = \"\" } = currentExperience || {};\r\n\r\n                const storeData = {\r\n                    details: {\r\n                        motto: myMotto,\r\n                        trainingProcessDescription: trainingProcess,\r\n                        // trainingLocation: preferedTrainingMode,\r\n                        // serviceableLocation: servicableLocation?.map(\r\n                        //     (location) => ({\r\n                        //         label: location,\r\n                        //         value: location,\r\n                        //         name: \"serviceableLocation\",\r\n                        //     })\r\n                        // ),\r\n                        // location: workLocation,\r\n                        // websiteLink,\r\n\r\n                        location: websiteLink,\r\n                        instaHandle: instagramProfile,\r\n                        // youtubeChannel: youtubeLink,\r\n                        ...details,\r\n                    },\r\n                };\r\n\r\n                // const tempCertification = certification?.map(\r\n                //     ({ certfiedYear, certificateName }) => ({\r\n                //         certificate: certificateName,\r\n                //         year: certfiedYear,\r\n                //     })\r\n                // );\r\n\r\n                // setInputCertificatesFields(tempCertification);\r\n                setTrainerData(storeData.details);\r\n                // updateTrainerDetails(storeData);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_tp_container\">\r\n                <div className=\"container\">\r\n                    <div className=\"inner_trinerpro_container\">\r\n                        <div className=\"tp_wrapper\">\r\n                            <div className=\"tp_header\">\r\n                                <h2>My Profile</h2>\r\n                            </div>\r\n                            <div className=\"tp_outter_form container\">\r\n                                <form onSubmit={(e) => e.preventDefault()}>\r\n                                    <div className=\"setup_card1\">\r\n                                        <h6>{data.motto}</h6>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            placeholder=\"Share the words you live or train by in 250 characters or less\"\r\n                                            onChange={handleInputChange}\r\n                                            value={trainerData.motto}\r\n                                            name=\"motto\"\r\n                                            maxlength=\"250\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"setup_card2\">\r\n                                        <h6>{data.tellUs}</h6>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            name=\"comment\"\r\n                                            placeholder=\"Tell clients everything you think they should know! Utilize Key words as anything you write here\r\n                                        will be searchable through our search bar\"\r\n                                            onChange={handleInputChange}\r\n                                            value={\r\n                                                trainerData.trainingProcessDescription\r\n                                            }\r\n                                            name=\"trainingProcessDescription\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"setup_card3\">\r\n                                        <h6>{data.showcase}</h6>\r\n                                        <div className=\"read_image\">\r\n                                            {imageFields\r\n                                                .slice(0, 2)\r\n                                                .map((index, input) => {\r\n                                                    return (\r\n                                                        <div\r\n                                                            key={index}\r\n                                                            className=\"render_image\"\r\n                                                        >\r\n                                                            <ImageReander\r\n                                                                value={\r\n                                                                    input.image\r\n                                                                }\r\n                                                            />\r\n                                                            <ImageReander\r\n                                                                value={\r\n                                                                    input.image\r\n                                                                }\r\n                                                            />\r\n                                                            <ImageReander\r\n                                                                value={\r\n                                                                    input.image\r\n                                                                }\r\n                                                            />\r\n                                                            <ImageReander\r\n                                                                value={\r\n                                                                    input.image\r\n                                                                }\r\n                                                            />\r\n                                                            <ImageReander\r\n                                                                value={\r\n                                                                    input.image\r\n                                                                }\r\n                                                            />\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                            {renderButton ? (\r\n                                                <h5\r\n                                                    onClick={() =>\r\n                                                        handleAddFields()\r\n                                                    }\r\n                                                >\r\n                                                    + Add More Image's\r\n                                                </h5>\r\n                                            ) : (\r\n                                                <h5\r\n                                                    onClick={() =>\r\n                                                        handleRemoveFields()\r\n                                                    }\r\n                                                >\r\n                                                    Remove\r\n                                                </h5>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"setup_card4\">\r\n                                        <h6>{data.certificate}</h6>\r\n                                        {inputCertificatesFields?.map(\r\n                                            (inputCertificatesField, index) => (\r\n                                                <div\r\n                                                    className=\"inputs_certificate\"\r\n                                                    key={index}\r\n                                                >\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Certification Title\"\r\n                                                        value={\r\n                                                            inputCertificatesField.certificate\r\n                                                        }\r\n                                                        name=\"certificate\"\r\n                                                        onChange={(event) =>\r\n                                                            handleChangeCertificateInput(\r\n                                                                index,\r\n                                                                event\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Year you were Certified\"\r\n                                                        value={\r\n                                                            inputCertificatesField.year\r\n                                                        }\r\n                                                        name=\"year\"\r\n                                                        onChange={(event) =>\r\n                                                            handleChangeCertificateInput(\r\n                                                                index,\r\n                                                                event\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            )\r\n                                        )}\r\n                                        <h5\r\n                                            onClick={handleAddCertificateFields}\r\n                                        >\r\n                                            + Add Certification\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div className=\"setup_card5\">\r\n                                        <div className=\"setupcontent_wrapper\">\r\n                                            <div className=\"setup_item\">\r\n                                                <h6>{data.where}</h6>\r\n                                                <div className=\"inputs_platform\">\r\n                                                    <button\r\n                                                        onClick={(e) =>\r\n                                                            handleInputChange(\r\n                                                                e,\r\n                                                                \"Online\"\r\n                                                            )\r\n                                                        }\r\n                                                        className={`${\r\n                                                            trainerData?.trainingLocation?.includes(\r\n                                                                \"Online\"\r\n                                                            )\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }`}\r\n                                                        name=\"trainingLocation\"\r\n                                                    >\r\n                                                        Virtual\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={(e) =>\r\n                                                            handleInputChange(\r\n                                                                e,\r\n                                                                \"inperson\"\r\n                                                            )\r\n                                                        }\r\n                                                        className={`${\r\n                                                            trainerData?.trainingLocation?.includes(\r\n                                                                \"inperson\"\r\n                                                            )\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }`}\r\n                                                        name=\"trainingLocation\"\r\n                                                    >\r\n                                                        In Person\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"social_meeting_links\">\r\n                                                    {trainerData?.trainingLocation?.includes(\r\n                                                        \"Online\"\r\n                                                    ) ? (\r\n                                                        // <div className=\"setup_ite1\">\r\n                                                        <>\r\n                                                            <h5>\r\n                                                                Add your Google\r\n                                                                or Zoom meeting\r\n                                                                link\r\n                                                            </h5>\r\n                                                            <div className=\"inputs_platform\">\r\n                                                                <div className=\"iconwrapper\">\r\n                                                                    <textarea\r\n                                                                        type=\"text\"\r\n                                                                        placeholder=\"Add a Google or Zoom meeting link\"\r\n                                                                        // value={\r\n                                                                        //     trainerData.virtualMeetingLink\r\n                                                                        // }\r\n                                                                        // onChange={\r\n                                                                        //     handleInputChange\r\n                                                                        // }\r\n                                                                        name=\"virtualMeetingLink\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    ) : null}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"setup_item1\">\r\n                                                <h6>{data.serviceable}</h6>\r\n                                                <div className=\"inputs_platform\">\r\n                                                    <div className=\"iconwrapper\">\r\n                                                        <Dropdown\r\n                                                            className=\"custom_dropdown\"\r\n                                                            title=\"Select Location\"\r\n                                                            list={options}\r\n                                                            value={\r\n                                                                trainerData.serviceableLocation\r\n                                                            }\r\n                                                            onChange={(e) => {\r\n                                                                setTrainerData({\r\n                                                                    ...trainerData,\r\n                                                                    serviceableLocation:\r\n                                                                        e.value,\r\n                                                                });\r\n                                                                console.log(\r\n                                                                    e.value\r\n                                                                );\r\n                                                            }}\r\n                                                            name=\"location\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"item_3\">\r\n                                                <h6>\r\n                                                    Do you have a facility or\r\n                                                    location where you will\r\n                                                    train clients?\r\n                                                </h6>\r\n                                                <CyanRadio\r\n                                                    checked={\r\n                                                        selectedValue === \"a\"\r\n                                                    }\r\n                                                    onChange={handleChange}\r\n                                                    value=\"a\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    label=\"Strength & Hitt\"\r\n                                                    inputProps={{\r\n                                                        \"aria-label\": \"a\",\r\n                                                    }}\r\n                                                />\r\n                                                <label>Yes</label>\r\n                                                <CyanRadio\r\n                                                    checked={\r\n                                                        selectedValue === \"b\"\r\n                                                    }\r\n                                                    onChange={handleChange}\r\n                                                    value=\"b\"\r\n                                                    name=\"radio-button-demo\"\r\n                                                    label=\"Strength & Hitt\"\r\n                                                    inputProps={{\r\n                                                        \"aria-label\": \"b\",\r\n                                                    }}\r\n                                                />\r\n                                                <label>No</label>\r\n                                            </div>\r\n                                            <div className=\"item_4\">\r\n                                                <h6>\r\n                                                    Details of the\r\n                                                    facility/location\r\n                                                </h6>\r\n                                                <div className=\"inputs_platform\">\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter the Details of the location\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"item_5\">\r\n                                                <h6>\r\n                                                    Are you willing to travel to\r\n                                                    clients in your city/region?\r\n                                                </h6>\r\n                                                <CyanRadio\r\n                                                    checked={\r\n                                                        selectedOneValue === \"1\"\r\n                                                    }\r\n                                                    onChange={handleOneChange}\r\n                                                    value=\"1\"\r\n                                                    label=\"Strength & Hitt\"\r\n                                                    inputProps={{\r\n                                                        \"aria-label\": \"1\",\r\n                                                    }}\r\n                                                />\r\n                                                <label> Yes!</label>\r\n                                                <CyanRadio\r\n                                                    checked={\r\n                                                        selectedOneValue === \"0\"\r\n                                                    }\r\n                                                    onChange={handleOneChange}\r\n                                                    value=\"0\"\r\n                                                    label=\"Strength & Hitt\"\r\n                                                    inputProps={{\r\n                                                        \"aria-label\": \"0\",\r\n                                                    }}\r\n                                                />\r\n                                                <label>No</label>\r\n                                            </div>\r\n                                            <div className=\"item_6\">\r\n                                                <h6>\r\n                                                    List the areas/neighborhoods\r\n                                                    you’re willing to travel to\r\n                                                </h6>\r\n                                                <div className=\"inputs_platform\">\r\n                                                    <textarea\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Neighborhood List\"\r\n                                                        // onChange={\r\n                                                        //     handleInputChange\r\n                                                        // }\r\n                                                        // value={\r\n                                                        //     trainerPersonalData.servicableLocation\r\n                                                        //         ? trainerPersonalData.servicableLocation\r\n                                                        //         : \"\"\r\n                                                        // }\r\n                                                    />\r\n\r\n                                                    <img\r\n                                                        src={Location}\r\n                                                        alt=\"icon\"\r\n                                                        className=\"loction_img_select\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"setup_item1\">\r\n                                                <h6>{data.insta}</h6>\r\n                                                <div className=\"inputs_platform\">\r\n                                                    <div className=\"iconwrapper\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Add your Instagram Handle\"\r\n                                                            onChange={\r\n                                                                handleInputChange\r\n                                                            }\r\n                                                            value={\r\n                                                                trainerData.instaHandle\r\n                                                            }\r\n                                                            name=\"instaHandle\"\r\n                                                        />\r\n                                                        <img\r\n                                                            src={Instagram}\r\n                                                            alt=\"icon\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"setup_item1\">\r\n                                                <h6>{data.web}</h6>\r\n                                                <div className=\"inputs_platform\">\r\n                                                    <div className=\"iconwrapper\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Add your Web Link\"\r\n                                                            onChange={\r\n                                                                handleInputChange\r\n                                                            }\r\n                                                            value={\r\n                                                                trainerData.websiteLink\r\n                                                            }\r\n                                                            name=\"websiteLink\"\r\n                                                        />\r\n                                                        <img\r\n                                                            src={Web}\r\n                                                            alt=\"icon\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"tp_button_save mb-5\">\r\n                                        <button onClick={handleSubmit}>\r\n                                            Save changes <BlueHoverButton />\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst ImageReander = () => {\r\n    const [image, setImage] = useState();\r\n    const [previewImage, setPreviewTmage] = useState();\r\n    const fileInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n    return (\r\n        <>\r\n            <div className=\"renderImage\">\r\n                {previewImage ? (\r\n                    <img\r\n                        src={previewImage}\r\n                        style={{\r\n                            objectFit: \"cover\",\r\n                            width: \"180px\",\r\n                            height: \"180px\",\r\n                        }}\r\n                        onClick={() => {\r\n                            setPreviewTmage(null);\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <div className=\"combin_profile\">\r\n                        <button\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                fileInputRef.current.click();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                // src={Profile}\r\n                                src={ImageBG}\r\n                                alt=\"icon\"\r\n                                style={{\r\n                                    objectFit: \"cover\",\r\n                                    width: \"180px\",\r\n                                    height: \"180px\",\r\n                                }}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    accept=\"image/*\"\r\n                    onChange={(event) => {\r\n                        const file = event.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                            setImage(file);\r\n                        } else {\r\n                            setImage(null);\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst MyProfile = connect(mapStateToProps, mapDispatchToProps)(MyProfileFC);\r\n\r\nexport default MyProfile;\r\n","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Image 1.8f33ee1e.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";","export default __webpack_public_path__ + \"static/media/Youtube.1eb126cd.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;"],"sourceRoot":""}