{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/PaymentSectionSetup.js","assets/files/FindTrainer/Tick 1.svg"],"names":["info","label","value","PaymentSectionSetup","connect","dispatch","bindActionCreators","fileUploadApi","fileUpload","trainerSetupData","setTrainerSetupData","data","className","identityNameUS","name","onChange","e","target","map","list","index","type","placeholder","governmentIdNumber","image","files","undefined","fd","FormData","append","then","console","log","governmentId","uploadAreaId","src","Tick","alt","insuranceNameUS","coverAmount","insurance","uploadArea"],"mappings":"4MASMA,EAAO,CACX,CACEC,MAAO,WACPC,MAAO,YAET,CACEA,MAAO,mBACPD,MAAO,oBAET,CACEA,MAAO,kBACPC,MAAO,oBAuLLC,EAAsBC,YAC1B,MAVyB,SAACC,GAC1B,OAAOC,YACL,CACEC,cAAeC,cAEjBH,KAIwBD,EAnLK,SAAC,GAI3B,IAHLK,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAH,EACI,EADJA,cAEMI,EACK,iCADLA,EAGF,0JAHEA,EAIA,+DAJAA,EAKO,2CAoCb,OACE,mCACE,qBAAKC,UAAU,8BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,6BAAKD,IACL,4BAAIA,OAEN,sBAAKC,UAAU,iBAAf,UAEE,sBAAKA,UAAU,gBAAf,UACE,6BAAKD,IACL,sBAAKC,UAAU,kBAAf,UACE,wBACEV,MAAOO,EAAiBI,eACxBC,KAAK,iBACLC,SAAU,SAACC,GACTN,EAAoB,2BACfD,GADc,IAEjBI,eAAgBG,EAAEC,OAAOf,UAN/B,SAUGF,EAAKkB,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAQlB,MAAOiB,EAAKjB,MAApB,SACGiB,EAAKlB,OADwBmB,QAiBpC,uBACEC,KAAK,OACLC,YAAY,qBACZpB,MAAOO,EAAiBc,mBACxBR,SAAU,SAACC,GACTN,EAAoB,2BACfD,GADc,IAEjBc,mBAAoBP,EAAEC,OAAOf,UAGjCY,KAAK,uBAEP,uBACEO,KAAK,OACLP,KAAK,eACLF,UAAU,oBACVG,SAAU,SAACC,IAzEN,SAACA,GACpB,IAAIQ,EAAQR,EAAEC,OAAOQ,MAAM,GAC3B,QAAcC,IAAVF,EAAqB,CACvB,IAAMG,EAAK,IAAIC,SAEfD,EAAGE,OAAO,WAAYL,GACtBjB,EAAcoB,GAAIG,MAAK,SAACnB,GACtBoB,QAAQC,IAAIrB,EAAM,YAClBD,EAAoB,2BACfD,GADc,IAEjBwB,aAAcjB,EAAEC,OAAOf,aAgEbgC,CAAalB,MAIhBP,EAAiBwB,aAChB,mBAAGrB,UAAU,kBAAb,SACE,qBAAKuB,IAAKC,UAAMC,IAAI,eAGtB,mBAAGzB,UAAU,aAAb,SACE,cAAC,UAAD,YAKR,sBAAKA,UAAU,gBAAf,UACE,6BAAKD,IACL,sBAAKC,UAAU,kBAAf,UACE,uBACES,KAAK,OACLC,YAAY,4BACZpB,MAAOO,EAAiB6B,gBACxBvB,SAAU,SAACC,GACTN,EAAoB,2BACfD,GADc,IAEjB6B,gBAAiBtB,EAAEC,OAAOf,UAG9BY,KAAK,oBAEP,uBACEO,KAAK,OACLC,YAAY,wBACZpB,MAAOO,EAAiB8B,YACxBxB,SAAU,SAACC,GACTN,EAAoB,2BACfD,GADc,IAEjB8B,YAAavB,EAAEC,OAAOf,UAG1BY,KAAK,gBAEP,uBACEO,KAAK,OACLP,KAAK,YACLF,UAAU,oBACVG,SAAU,SAACC,GAAD,OAxIP,SAACA,GAClB,IAAIQ,EAAQR,EAAEC,OAAOQ,MAAM,GAC3B,QAAcC,IAAVF,EAAqB,CACvB,IAAMG,EAAK,IAAIC,SAEfD,EAAGE,OAAO,YAAaL,GACvBjB,EAAcoB,GAAIG,MAAK,SAACnB,GACtBoB,QAAQC,IAAIrB,EAAM,YAClBD,EAAoB,2BACfD,GADc,IAEjB+B,UAAWxB,EAAEC,OAAOQ,MAAM,UA8HDgB,CAAWzB,MAG7BP,EAAiB+B,UAChB,mBAAG5B,UAAU,kBAAb,SACE,qBAAKuB,IAAKC,UAAMC,IAAI,eAGtB,mBAAGzB,UAAU,aAAb,SACE,cAAC,UAAD,yBAyBLT,a,iCChNf,OAAe,cAA0B,oC","file":"static/js/114.5e632724.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport BlueHoverButton from \"component/common/BlueArrowButton\";\r\nimport Tick from \"../../../../../assets/files/FindTrainer/Tick 1.svg\";\r\nimport { fileUpload } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nconst info = [\r\n  {\r\n    label: \"Passport\",\r\n    value: \"Passport\",\r\n  },\r\n  {\r\n    value: \"Driver's Licence\",\r\n    label: \"Driver's Licence\",\r\n  },\r\n  {\r\n    label: \"State Issued ID\",\r\n    value: \"State Issued ID\",\r\n  },\r\n];\r\n\r\nconst PaymentSectionSetupClass = ({\r\n  trainerSetupData,\r\n  setTrainerSetupData,\r\n  fileUploadApi,\r\n}) => {\r\n  const data = {\r\n    heading: \"Security & Payment Information\",\r\n    describe:\r\n      \"The following information is mandatory to complete the onboarding of all new trainers. Please ensure you check all the documents before uploading them.\",\r\n    id: \"Please upload any one of your US government issued ID’s\",\r\n    insurance: \"Please upload your insurance information\",\r\n    payment: \"Add your account details for payment\",\r\n  };\r\n\r\n  const uploadArea = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"insurance\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        console.log(data, \"datadata\");\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          insurance: e.target.files[0],\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadAreaId = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"identity\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        console.log(data, \"datadata\");\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          governmentId: e.target.value,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"payment_container container\">\r\n        <div className=\"payment_wrapper\">\r\n          <div className=\"payment_heading\">\r\n            <h2>{data.heading}</h2>\r\n            <p>{data.describe}</p>\r\n          </div>\r\n          <div className=\"payment_inner \">\r\n            {/* <form> */}\r\n            <div className=\"payment_item1\">\r\n              <h6>{data.id}</h6>\r\n              <div className=\"inputs_payment1\">\r\n                <select\r\n                  value={trainerSetupData.identityNameUS}\r\n                  name=\"identityNameUS\"\r\n                  onChange={(e) => {\r\n                    setTrainerSetupData({\r\n                      ...trainerSetupData,\r\n                      identityNameUS: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  {info.map((list, index) => (\r\n                    <option value={list.value} key={index}>\r\n                      {list.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {/* <Dropdown\r\n                  title=\"Select government ID’s \"\r\n                  list={info}\r\n                  value={trainerSetupData.identityNameUS}\r\n                  onChange={(e) => {\r\n                    setTrainerSetupData({\r\n                      ...trainerSetupData,\r\n                      identityNameUS: e.value,\r\n                    });\r\n                  }}\r\n                  name=\"identityNameUS\"\r\n                /> */}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add your ID Number\"\r\n                  value={trainerSetupData.governmentIdNumber}\r\n                  onChange={(e) => {\r\n                    setTrainerSetupData({\r\n                      ...trainerSetupData,\r\n                      governmentIdNumber: e.target.value,\r\n                    });\r\n                  }}\r\n                  name=\"governmentIdNumber\"\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"governmentId\"\r\n                  className=\"custom-file-input\"\r\n                  onChange={(e) => {\r\n                    uploadAreaId(e);\r\n                  }}\r\n                />\r\n\r\n                {trainerSetupData.governmentId ? (\r\n                  <a className=\"checkarrow pl-3\">\r\n                    <img src={Tick} alt=\"Uploaded\" />\r\n                  </a>\r\n                ) : (\r\n                  <a className=\"checkarrow\">\r\n                    <BlueHoverButton />\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"payment_item1\">\r\n              <h6>{data.insurance}</h6>\r\n              <div className=\"inputs_payment1\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your Insurance Name\"\r\n                  value={trainerSetupData.insuranceNameUS}\r\n                  onChange={(e) => {\r\n                    setTrainerSetupData({\r\n                      ...trainerSetupData,\r\n                      insuranceNameUS: e.target.value,\r\n                    });\r\n                  }}\r\n                  name=\"insuranceNameUS\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add your Cover Amount\"\r\n                  value={trainerSetupData.coverAmount}\r\n                  onChange={(e) => {\r\n                    setTrainerSetupData({\r\n                      ...trainerSetupData,\r\n                      coverAmount: e.target.value,\r\n                    });\r\n                  }}\r\n                  name=\"coverAmount\"\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"insurance\"\r\n                  className=\"custom-file-input\"\r\n                  onChange={(e) => uploadArea(e)}\r\n                />\r\n\r\n                {trainerSetupData.insurance ? (\r\n                  <a className=\"checkarrow pl-3\">\r\n                    <img src={Tick} alt=\"Uploaded\" />\r\n                  </a>\r\n                ) : (\r\n                  <a className=\"checkarrow\">\r\n                    <BlueHoverButton />\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      fileUploadApi: fileUpload,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PaymentSectionSetup = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PaymentSectionSetupClass);\r\n\r\nexport default PaymentSectionSetup;\r\n","export default __webpack_public_path__ + \"static/media/Tick 1.bf0e36e8.svg\";"],"sourceRoot":""}