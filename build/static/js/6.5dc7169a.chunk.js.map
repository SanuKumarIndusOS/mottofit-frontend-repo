{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/index.js","component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/index.js","component/common/ButtonIcon/ArrowHover.jsx","assets/files/SVG/Arrow Back.svg","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Location Icon.svg","assets/files/SVG/Image 1.svg","assets/files/SVG/Youtube.svg"],"names":["PaymentSection","data","React","useState","dropdowm","setdropdown","dropdowmColorChange","className","name","id","defaultValue","onChange","value","disabled","hidden","type","placeholder","FileArray","ImageReander","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","src","style","objectFit","width","height","onClick","event","preventDefault","current","click","ImageBG","alt","ref","accept","file","target","files","substr","push","TrainerSetUpProfile","connect","state","details","trainerReducer","trainerPersonalData","dispatch","bindActionCreators","updateTrainerDetails","imageFields","setImageFields","isLoading","certificate","year","upload","inputCertificatesFields","setInputCertificatesFields","motto","trainingProcessDescription","trainingLocation","serviceableLocation","location","websiteLink","instaHandle","youtubeChannel","trainerData","setTrainerData","handleChangeCertificateInput","index","values","handleInputChange","e","trainingType","tempData","label","isMultiSelect","Array","isArray","includes","filter","Object","keys","length","history","trainingProcess","myMotto","preferedTrainingMode","youtubeLink","instagramProfile","currentExperience","certification","workLocation","storeData","servicableLocation","map","tempCertification","certfiedYear","certificateName","visiable","renderButton","setRenderButton","ArrowBack","to","onSubmit","maxlength","slice","input","splice","handleRemoveFields","inputCertificatesField","selected","required","Location","Web","Instagram","Youtube","console","log","headers","Authorization","localStorage","getItem","fd","FormData","forEach","append","axios","post","then","res","ArrowHover","focusable","imageRendering","baseProfile","version","preserveAspectRatio","viewBox","x","y","transform","stroke","d"],"mappings":"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","file":"static/js/6.5dc7169a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport ArrowHover from \"../../../../common/ButtonIcon/ArrowHover\";\r\nconst PaymentSection = () => {\r\n    const data = {\r\n        heading: \"Security & Payment Information\",\r\n        describe:\r\n            \"The following information is mandatory to complete the onboarding of all new trainers. Please ensure you check all the documents before uploading them.\",\r\n        id: \"Please upload any one of your US government issued ID’s\",\r\n        insurance: \"Please upload your insurance information\",\r\n        payment: \"Add your account details for payment\",\r\n    };\r\n\r\n    const [dropdowm, setdropdown] = React.useState();\r\n    const dropdowmColorChange = () => {\r\n        setdropdown(!dropdowm);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"payment_container\">\r\n                <div className=\"payment_wrapper\">\r\n                    <div className=\"payment_heading\">\r\n                        <h2>{data.heading}</h2>\r\n                        <p>{data.describe}</p>\r\n                    </div>\r\n                    <div className=\"payment_inner container\">\r\n                        {/* <form> */}\r\n                        <div className=\"payment_item1\">\r\n                            <h6>{data.id}</h6>\r\n                            <div className=\"inputs_payment\">\r\n                                <select\r\n                                    name=\"bank\"\r\n                                    id=\"id\"\r\n                                    className={dropdowm ? \"active\" : \"option\"}\r\n                                    defaultValue={\"Default\"}\r\n                                    onChange={dropdowmColorChange}\r\n                                >\r\n                                    <option value=\"Default\" disabled hidden>\r\n                                        Select type of ID\r\n                                    </option>\r\n                                    <option value=\"USA\">USA</option>\r\n                                    <option value=\"FBI\">FBI</option>\r\n                                    <option value=\"National\">National</option>\r\n                                    <option value=\"United\">United</option>\r\n                                </select>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add your ID Number\"\r\n                                />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                />\r\n                                <a className=\"checkarrow\">\r\n                                    <ArrowHover />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"payment_item1\">\r\n                            <h6>{data.insurance}</h6>\r\n                            <div className=\"inputs_payment\">\r\n                                <select\r\n                                    name=\"bank\"\r\n                                    id=\"insurance\"\r\n                                    className={dropdowm ? \"active\" : \"option\"}\r\n                                    defaultValue={\"Default\"}\r\n                                    onChange={dropdowmColorChange}\r\n                                >\r\n                                    <option value=\"Default\" disabled hidden>\r\n                                        Select your Insurance\r\n                                    </option>\r\n\r\n                                    <option value=\"USA\">USA</option>\r\n                                    <option value=\"FBI\">FBI</option>\r\n                                    <option value=\"National\">National</option>\r\n                                    <option value=\"United\">United</option>\r\n                                </select>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add your Cover Amount\"\r\n                                />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                />\r\n                                <a className=\"checkarrow\">\r\n                                    <ArrowHover />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"payment_item2\">\r\n                            <h6>{data.payment}</h6>\r\n                            <div className=\"inputs_payment\">\r\n                                <select\r\n                                    name=\"bank\"\r\n                                    id=\"payment\"\r\n                                    defaultValue={\"Default\"}\r\n                                    className={dropdowm ? \"active\" : \"option\"}\r\n                                    onChange={dropdowmColorChange}\r\n                                >\r\n                                    <option value=\"Default\" disabled hidden>\r\n                                        Bank Name\r\n                                    </option>\r\n\r\n                                    <option value=\"hdfc\">HDFC</option>\r\n                                    <option value=\"america\">\r\n                                        American Bank\r\n                                    </option>\r\n                                    <option value=\"national\">National</option>\r\n                                    <option value=\"united\">United</option>\r\n                                </select>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add your Account Number\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {/* </form> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default PaymentSection;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ImageBG from \"../../../../assets/files/SVG/Image 1.svg\";\r\nimport PaymentSection from \"./SetUpPaymentSection/index\";\r\nimport \"./styles.scss\";\r\nimport Instagram from \"../../../../assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"../../../../assets/files/SVG/Web Icon.svg\";\r\nimport Youtube from \"../../../../assets/files/SVG/Youtube.svg\";\r\nimport Location from \"../../../../assets/files/SVG/Location Icon.svg\";\r\nimport ArrowBack from \"../../../../assets/files/SVG/Arrow Back.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowHoverBlacked from \"../../../common/BlackCircleButton/ArrowHoverBlacked\";\r\n\r\nimport Footer from \"../../../common/Footer/index\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTrainerDetails } from \"action/trainerAct\";\r\nimport Select from \"react-select\";\r\nimport { history } from \"helpers\";\r\nimport { TrainerApi, PaymentApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { Toast } from \"service/toast\";\r\nimport axios from \"axios\";\r\n\r\nconst FileArray = [];\r\n\r\nconst options = [\r\n    { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\r\n    { label: \"New York\", value: \"New York\", name: \"serviceableLocation\" },\r\n    { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\r\n    { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\r\n];\r\n\r\nconst TrainerSetUpProfileFC = ({\r\n    updateTrainerDetails,\r\n    trainerPersonalData,\r\n    details,\r\n}) => {\r\n    const data = {\r\n        heading: \"Build out the rest of your Profile!\",\r\n        describe:\r\n            \"Your trainer profile is what clients will see when they click on your trainer card while filtering results. The below information and training settings can be changed at any time.\",\r\n        motto: \"What’s your Motto?\",\r\n        tellUs: \"Tell us about you and describe your training process\",\r\n        showcase: \"Throw in some photos showcasing you & your skills\",\r\n        certificate: \"Certifications you’d like to display\",\r\n        where: \"Where will you be training\",\r\n        serviceable: \"Which city will you train in?\",\r\n        location: \"Your preferred training location\",\r\n        web: \"Website\",\r\n        insta: \"Instagram\",\r\n        youtube: \"Youtube\",\r\n    };\r\n\r\n    const [imageFields, setImageFields] = useState([\r\n        {\r\n            image: \"\",\r\n        },\r\n    ]);\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const [inputCertificatesFields, setInputCertificatesFields] = useState([\r\n        {\r\n            certificate: \"\",\r\n            year: \"\",\r\n            upload: \"\",\r\n        },\r\n    ]);\r\n\r\n    const [trainerData, setTrainerData] = useState({\r\n        motto: \"\",\r\n        trainingProcessDescription: \"\",\r\n        trainingLocation: [],\r\n        serviceableLocation: \"\",\r\n        location: \"\",\r\n        websiteLink: \"\",\r\n        instaHandle: \"\",\r\n        youtubeChannel: \"\",\r\n    });\r\n\r\n    const handleAddFields = () => {\r\n        setImageFields([...imageFields, { image: \"\" }]);\r\n        setRenderButton(false);\r\n    };\r\n    const handleRemoveFields = (index) => {\r\n        const values = [...imageFields];\r\n        values.splice(index, 1);\r\n        setImageFields(values);\r\n        setRenderButton(true);\r\n    };\r\n\r\n    const handleAddCertificateFields = () => {\r\n        setInputCertificatesFields([\r\n            ...inputCertificatesFields,\r\n            { certificate: \"\", year: \"\", upload: \"\" },\r\n        ]);\r\n    };\r\n    const handleChangeCertificateInput = (index, event) => {\r\n        const values = [...inputCertificatesFields];\r\n        values[index][event.target.name] = event.target.value;\r\n        setInputCertificatesFields(values);\r\n    };\r\n\r\n    const handleInputChange = (e, trainingType) => {\r\n        e.preventDefault && e.preventDefault();\r\n\r\n        const { name, value, label } = e.target || e || {};\r\n\r\n        const tempData = {\r\n            ...trainerData,\r\n        };\r\n\r\n        // if(label) value = {label , name , value};\r\n\r\n        const isMultiSelect = Array.isArray(e);\r\n\r\n        if (name === \"trainingLocation\") {\r\n            if (tempData[\"trainingLocation\"].includes(trainingType)) {\r\n                tempData[\"trainingLocation\"] = tempData[\r\n                    \"trainingLocation\"\r\n                ].filter((location) => location !== trainingType);\r\n            } else {\r\n                tempData[\"trainingLocation\"] = [\r\n                    ...tempData[\"trainingLocation\"],\r\n                    trainingType,\r\n                ];\r\n            }\r\n        } else {\r\n            tempData[`${isMultiSelect ? e[0].name : name}`] = isMultiSelect\r\n                ? e\r\n                : value;\r\n        }\r\n\r\n        setTrainerData(tempData);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n\r\n        console.log( FileArray );\r\n\r\n        if (FileArray.length !== 0) {\r\n            const headers = {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization:\r\n              localStorage.getItem('token'),\r\n            };\r\n      \r\n            const fd = new FormData();\r\n      \r\n            FileArray.forEach(file=>{\r\n                fd.append(\"images\", file, file.name);\r\n              });\r\n            axios\r\n              .post(\"http://doodlebluelive.com:2307/v1/upload/image\", fd, {\r\n                headers: headers,\r\n              })\r\n              .then((res) => {\r\n                console.log(res);\r\n              });\r\n          }\r\n        // const {\r\n        //     firstName,\r\n        //     lastName,\r\n        //     description,\r\n        //     individualCharge,\r\n        //     ssTwoPeopleCharge,\r\n        //     ssThreePeopleCharge,\r\n        //     ssFourPeopleCharge,\r\n        //     classFlatRate,\r\n        //     threeSessionRate,\r\n        //     tenSessionRate,\r\n        //     instaHandle,\r\n        //     location,\r\n        //     motto,\r\n        //     serviceableLocation,\r\n        //     trainingLocation,\r\n        //     trainingProcessDescription,\r\n        //     websiteLink,\r\n        //     youtubeChannel,\r\n        // } = trainerData;\r\n\r\n        // console.log(serviceableLocation);\r\n\r\n        // let payload = {\r\n        //     firstName,\r\n        //     lastName,\r\n        //     description,\r\n        //     oneOnOnePricing: {\r\n        //         passRatefor3Session: threeSessionRate,\r\n        //         passRatefor10Session: tenSessionRate,\r\n        //         inPersonAtClientLocation: individualCharge,\r\n        //     },\r\n        //     socialSessionPricing: {\r\n        //         inPeronAtClientLocationfor2People: ssTwoPeopleCharge,\r\n        //         inPeronAtClientLocationfor3People: ssThreePeopleCharge,\r\n        //         inPeronAtClientLocationfor4People: ssFourPeopleCharge,\r\n        //     },\r\n        //     classSessionPricing: {\r\n        //         inPersonAtclientLocationfor15People: classFlatRate,\r\n        //     },\r\n        //     trainingProcess: trainingProcessDescription,\r\n        //     myMotto: motto,\r\n        //     preferedTrainingMode: trainingLocation,\r\n        //     websiteLink,\r\n        //     youtubeLink: youtubeChannel,\r\n        //     instagramProfile: instaHandle,\r\n        //     currentExperience: { workLocation: location },\r\n        //     certification: inputCertificatesFields?.map(\r\n        //         ({ certificate, year }) => ({\r\n        //             certificateName: \"\",\r\n        //             certfiedYear: year,\r\n        //             certification: certificate,\r\n        //         })\r\n        //     ),\r\n\r\n        //     servicableLocation: serviceableLocation,\r\n        // };\r\n        // // updateTrainerDetails();\r\n\r\n        // console.log(payload);\r\n\r\n        // const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n        // updateTrainerAvailabilityApi.body = payload;\r\n\r\n        // setLoading(true);\r\n\r\n        // api({ ...updateTrainerAvailabilityApi })\r\n        //     .then(({ data, message }) => {\r\n        //         console.log(data, message);\r\n        //         getStripeURL();\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(err);\r\n        //         setLoading(false);\r\n        //     });\r\n\r\n        // // history.push(\"/trainers/dashboard/session\");\r\n    };\r\n\r\n    const handleBack = () => {\r\n        let storeData = {\r\n            details: { ...trainerData },\r\n        };\r\n\r\n        updateTrainerDetails(storeData);\r\n    };\r\n\r\n    const getStripeURL = () => {\r\n        const { getStripeAccLink } = PaymentApi;\r\n\r\n        api({ ...getStripeAccLink })\r\n            .then(({ data, message }) => {\r\n                const { url } = data;\r\n                window.location.href = url;\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(trainerPersonalData).length < 5) {\r\n            return history.push(\"/trainer/card\");\r\n        }\r\n        const {\r\n            trainingProcess = \"\",\r\n            myMotto = \"\",\r\n            preferedTrainingMode = \"\",\r\n            websiteLink = \"\",\r\n            youtubeLink = \"\",\r\n            instagramProfile = \"\",\r\n            currentExperience = {},\r\n            certification = \"\",\r\n            serviceableLocation = [],\r\n        } = trainerPersonalData || {};\r\n\r\n        const { workLocation = \"\" } = currentExperience || {};\r\n\r\n        const storeData = {\r\n            details: {\r\n                ...details,\r\n                motto: myMotto,\r\n                trainingProcessDescription: trainingProcess,\r\n                trainingLocation: preferedTrainingMode,\r\n                servicableLocation: serviceableLocation.map((location) => ({\r\n                    label: location,\r\n                    value: location,\r\n                    name: \"serviceableLocation\",\r\n                })),\r\n                location: workLocation,\r\n                websiteLink,\r\n                instaHandle: instagramProfile,\r\n                youtubeChannel: youtubeLink,\r\n            },\r\n        };\r\n\r\n        const tempCertification = certification?.map(\r\n            ({ certfiedYear, certificateName }) => ({\r\n                certificate: certificateName,\r\n                year: certfiedYear,\r\n            })\r\n        );\r\n\r\n        setInputCertificatesFields(tempCertification);\r\n\r\n        setTrainerData(storeData.details);\r\n\r\n        updateTrainerDetails(storeData);\r\n    }, []);\r\n\r\n    const [renderButton, setRenderButton] = useState({\r\n        visiable: false,\r\n    });\r\n    return (\r\n        <>\r\n            <div className=\"outter_setup_container container\">\r\n                <div className=\"setup_link\">\r\n                    <div className=\"inner_link\">\r\n                        <img src={ArrowBack} alt=\"icon\" />\r\n                        <Link to=\"/trainer/card\" onClick={handleBack}>\r\n                            {\" \"}\r\n                            Edit Trainer Card{\" \"}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"inner_link_preview\">\r\n                        <Link to=\"/\"> Preview Your Trainer Profile </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"setup_container \">\r\n                    <div className=\"setup_headings\">\r\n                        <h2>{data.heading}</h2>\r\n                        <p>{data.describe}</p>\r\n                    </div>\r\n                    <div className=\"setup_wrapper\">\r\n                        <div className=\"setup_formInner container\">\r\n                            <form onSubmit={(e) => e.preventDefault()}>\r\n                                <div className=\"setup_card1\">\r\n                                    <h6>{data.motto}</h6>\r\n                                    <textarea\r\n                                        type=\"text\"\r\n                                        placeholder=\"Share the words you live or train by in 250 characters or less\"\r\n                                        onChange={handleInputChange}\r\n                                        value={trainerData.motto}\r\n                                        name=\"motto\"\r\n                                        maxlength=\"250\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"setup_card2\">\r\n                                    <h6>{data.tellUs}</h6>\r\n                                    <textarea\r\n                                        type=\"text\"\r\n                                        name=\"comment\"\r\n                                        placeholder=\"Tell clients everything you think they should know! Utilize Key words as anything you write here\r\n                                        will be searchable through our search bar\"\r\n                                        onChange={handleInputChange}\r\n                                        value={\r\n                                            trainerData.trainingProcessDescription\r\n                                        }\r\n                                        name=\"trainingProcessDescription\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"setup_card3\">\r\n                                    <h6>{data.showcase}</h6>\r\n                                    <div className=\"read_image\">\r\n                                        {imageFields\r\n                                            .slice(0, 2)\r\n                                            .map((index, input) => {\r\n                                                return (\r\n                                                    <div\r\n                                                        key={index}\r\n                                                        className=\"render_image\"\r\n                                                    >\r\n                                                        <ImageReander\r\n                                                            value={input.image}\r\n                                                        />\r\n                                                        <ImageReander\r\n                                                            value={input.image}\r\n                                                        />\r\n                                                        <ImageReander\r\n                                                            value={input.image}\r\n                                                        />\r\n                                                        <ImageReander\r\n                                                            value={input.image}\r\n                                                        />\r\n                                                        <ImageReander\r\n                                                            value={input.image}\r\n                                                        />\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        {renderButton ? (\r\n                                            <h5\r\n                                                onClick={() =>\r\n                                                    handleAddFields()\r\n                                                }\r\n                                            >\r\n                                                + Add More Image's\r\n                                            </h5>\r\n                                        ) : (\r\n                                            <h5\r\n                                                onClick={() =>\r\n                                                    handleRemoveFields()\r\n                                                }\r\n                                            >\r\n                                                Remove\r\n                                            </h5>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"setup_card4\">\r\n                                    <h6>{data.certificate}</h6>\r\n                                    {inputCertificatesFields?.map(\r\n                                        (inputCertificatesField, index) => (\r\n                                            <div\r\n                                                className=\"inputs_certificate\"\r\n                                                key={index}\r\n                                            >\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Certification Title\"\r\n                                                    value={\r\n                                                        inputCertificatesField.certificate\r\n                                                    }\r\n                                                    name=\"certificate\"\r\n                                                    onChange={(event) =>\r\n                                                        handleChangeCertificateInput(\r\n                                                            index,\r\n                                                            event\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Year you were Certified\"\r\n                                                    value={\r\n                                                        inputCertificatesField.year\r\n                                                    }\r\n                                                    name=\"year\"\r\n                                                    onChange={(event) =>\r\n                                                        handleChangeCertificateInput(\r\n                                                            index,\r\n                                                            event\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                                {/* <input\r\n                          type=\"file\"\r\n                          name=\"file\"\r\n                          value={inputCertificatesField.upload}\r\n                          onChange={(event) =>\r\n                            handleChangeCertificateInput(index, event)\r\n                          }\r\n                          className=\"custom-file-input\"\r\n                        />\r\n                        <a className=\"checkarrow\">\r\n                          <ArrowHover />\r\n                        </a> */}\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                                    <h5 onClick={handleAddCertificateFields}>\r\n                                        + Add Certification\r\n                                    </h5>\r\n                                </div>\r\n                                <div className=\"setup_card5\">\r\n                                    <div className=\"setupcontent_wrapper\">\r\n                                        <div className=\"setup_item\">\r\n                                            <h6>{data.where}</h6>\r\n                                            <div className=\"inputs_platform\">\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleInputChange(\r\n                                                            e,\r\n                                                            \"Online\"\r\n                                                        )\r\n                                                    }\r\n                                                    className={`${\r\n                                                        trainerData?.trainingLocation?.includes(\r\n                                                            \"Online\"\r\n                                                        )\r\n                                                            ? \"active\"\r\n                                                            : \"\"\r\n                                                    }`}\r\n                                                    name=\"trainingLocation\"\r\n                                                >\r\n                                                    Virtual\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleInputChange(\r\n                                                            e,\r\n                                                            \"inperson\"\r\n                                                        )\r\n                                                    }\r\n                                                    className={`${\r\n                                                        trainerData?.trainingLocation?.includes(\r\n                                                            \"inperson\"\r\n                                                        )\r\n                                                            ? \"active\"\r\n                                                            : \"\"\r\n                                                    }`}\r\n                                                    name=\"trainingLocation\"\r\n                                                >\r\n                                                    In Person\r\n                                                </button>\r\n                                                {/* <button\r\n                                                    onClick={(e) =>\r\n                                                        handleInputChange(\r\n                                                            e,\r\n                                                            \"outdoors\"\r\n                                                        )\r\n                                                    }\r\n                                                    className={`${\r\n                                                        trainerData?.trainingLocation?.includes(\r\n                                                            \"outdoors\"\r\n                                                        )\r\n                                                            ? \"active\"\r\n                                                            : \"\"\r\n                                                    }`}\r\n                                                    name=\"trainingLocation\"\r\n                                                >\r\n                                                    Outdoors\r\n                                                </button> */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"setup_item1\">\r\n                                            <h6>{data.serviceable}</h6>\r\n                                            <div className=\"inputs_platform\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <select\r\n                                                        value={\r\n                                                            trainerData.serviceableLocation\r\n                                                        }\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                    >\r\n                                                        <option\r\n                                                            value=\"\"\r\n                                                            disabled\r\n                                                            selected\r\n                                                        >\r\n                                                            List all areas that\r\n                                                            you will service\r\n                                                        </option>\r\n                                                        <option>\r\n                                                            New York\r\n                                                        </option>\r\n                                                        <option>Miami</option>\r\n                                                        <option>Hampton</option>\r\n                                                        <option>\r\n                                                            Palm Beach\r\n                                                        </option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"setup_item1\">\r\n                                            <h6>{data.location}</h6>\r\n                                            <div className=\"inputs_platform\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <select\r\n                                                        required\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.location\r\n                                                        }\r\n                                                    >\r\n                                                        <option\r\n                                                            value=\"\"\r\n                                                            disabled\r\n                                                            selected\r\n                                                        >\r\n                                                            List all areas that\r\n                                                            you will service\r\n                                                        </option>\r\n                                                        <option>\r\n                                                            New York\r\n                                                        </option>\r\n                                                        <option>Miami</option>\r\n                                                        <option>Hampton</option>\r\n                                                        <option>\r\n                                                            Palm Beach\r\n                                                        </option>\r\n                                                    </select>\r\n\r\n                                                    <img\r\n                                                        src={Location}\r\n                                                        alt=\"icon\"\r\n                                                        className=\"location_icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"setup_item1\">\r\n                                            <h6>{data.web}</h6>\r\n                                            <div className=\"inputs_platform\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Add your Web Link\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.websiteLink\r\n                                                        }\r\n                                                        name=\"websiteLink\"\r\n                                                    />\r\n                                                    <img src={Web} alt=\"icon\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"setup_item1\">\r\n                                            <h6>{data.insta}</h6>\r\n                                            <div className=\"inputs_platform\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Add your Instagram Handle\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.instaHandle\r\n                                                        }\r\n                                                        name=\"instaHandle\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={Instagram}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"setup_item1\">\r\n                                            <h6>{data.youtube}</h6>\r\n                                            <div className=\"inputs_platform\">\r\n                                                <div className=\"iconwrapper\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Add your Youtube Channel\"\r\n                                                        onChange={\r\n                                                            handleInputChange\r\n                                                        }\r\n                                                        value={\r\n                                                            trainerData.youtubeChannel\r\n                                                        }\r\n                                                        name=\"youtubeChannel\"\r\n                                                    />\r\n                                                    <img\r\n                                                        src={Youtube}\r\n                                                        alt=\"icon\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <PaymentSection /> */}\r\n                                <div className=\"submit_button\">\r\n                                    <button\r\n                                        onClick={handleSubmit}\r\n                                        type=\"submit\"\r\n                                        disabled={isLoading}\r\n                                        className={`${\r\n                                            isLoading ? \"loading\" : \"\"\r\n                                        }`}\r\n                                    >\r\n                                        {isLoading ? (\r\n                                            \"Loading...\"\r\n                                        ) : (\r\n                                            <a>\r\n                                                {\" \"}\r\n                                                Continue to account\r\n                                                <ArrowHoverBlacked />\r\n                                            </a>\r\n                                        )}\r\n                                        {/* <img src={Arrow} alt=\"icon\" /> */}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ImageReander = () => {\r\n    const [image, setImage] = useState();\r\n    const [previewImage, setPreviewTmage] = useState();\r\n    const fileInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n    return (\r\n        <>\r\n            <div className=\"renderImage\">\r\n                {previewImage ? (\r\n                    <img\r\n                        src={previewImage}\r\n                        style={{\r\n                            objectFit: \"cover\",\r\n                            width: \"180px\",\r\n                            height: \"180px\",\r\n                        }}\r\n                        onClick={() => {\r\n                            setPreviewTmage(null);\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <div className=\"combin_profile\">\r\n                        <button\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                fileInputRef.current.click();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                // src={Profile}\r\n                                src={ImageBG}\r\n                                alt=\"icon\"\r\n                                style={{\r\n                                    objectFit: \"cover\",\r\n                                    width: \"180px\",\r\n                                    height: \"180px\",\r\n                                }}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    accept=\"image/*\"\r\n                    onChange={(event) => {\r\n                        const file = event.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                            setImage(file);\r\n                            FileArray.push(file)\r\n                        } else {\r\n                            setImage(null);\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst TrainerSetUpProfile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TrainerSetUpProfileFC);\r\n\r\nexport default TrainerSetUpProfile;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nfunction ArrowHover() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <span className='arrow-hover'>\r\n                    <svg\r\n                        className=\"arrow-icon\"\r\n                        focusable=\"false\"\r\n                        imageRendering=\"auto\"\r\n                        baseProfile=\"basic\"\r\n                        version=\"1.1\"\r\n                        preserveAspectRatio=\"xMidYMid meet\"\r\n                        viewBox=\"0 0 62 35\"\r\n                    >\r\n                        <title>Arrow Icon</title>\r\n                        <rect x=\"0\" y=\"14.7\" width=\"55.2\" height=\"4.55\"></rect>\r\n                        <g transform=\"translate(40.9 0)\">\r\n                            <path\r\n                                stroke=\"none\"\r\n                                d=\"M.35 3L14.3 17.2 0 31.25 3.35 34.25 20.85 17.15 3.5 0 .35 3Z\"\r\n                            ></path>\r\n                        </g>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArrowHover;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";","export default __webpack_public_path__ + \"static/media/Image 1.8f33ee1e.svg\";","export default __webpack_public_path__ + \"static/media/Youtube.1eb126cd.svg\";"],"sourceRoot":""}