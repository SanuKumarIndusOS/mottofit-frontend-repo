{"version":3,"sources":["component/TrainWithFriends/index.js","helpers/baseURL.js","assets/files/TrainerDashboard/Message/Jenny.png","assets/files/SignUp/Phone Icon.svg","assets/files/UserOnboard/PaymentAsset/Location Icon.svg","assets/files/UserOnboard/PaymentAsset/Shedule Icon.svg","assets/files/UserOnboard/PaymentAsset/Strength Icon.svg"],"names":["tempaccordionData","title","session","session1","session2","price","price1","price2","isPrice","AccordationService","data","useState","selected","setSelected","map","item","index","className","length","onClick","toggle","TrainWithFriends","connect","state","bookingData","userReducer","selectedTimes","defaulCardDetails","queryQbject","trainerReducer","query","sessionData","trainerData","selectedTrainerData","submittedData","dispatch","bindActionCreators","userSession","updateUserDetails","scheduleSession","friendName","friendEmail","friendPhone","friendsInput","setFriendsInput","accordionData","setAccordionData","iWillPay","setIPay","handleChangeFriendInput","localStorage","getItem","event","values","target","name","value","useEffect","getSessionData","userApi","sessionId","id","api","then","friends","trainingType","location","label","city","trainingVenue","venue","preferedTrainingMode","sessionType","activity","start_slot","sessionStartTime","end_slot","sessionEndTime","date","sessionDate","trainerDetail","tempFriendsData","userDetail","firstName","email","phoneNo","reduxData","updateSessionApi","e","preventDefault","editSessionData","payload","filter","includes","paidByUser","body","Toast","type","message","history","push","catch","err","trainingLocation","isVirtual","tempTrainerData","pricingObject","virtualSesion2People","socialSessionPricing","virtualSessionfor2People","virtualSesion3People","virtualSessionfor3People","virtualSesion4People","virtualSessionfor4People","inPerson2People","inPeronAtTrainerLocationfor2People","inPeronAtClientLocationfor2People","inPerson3People","inPeronAtTrainerLocationfor3People","inPerson4People","inPeronAtTrainerLocationfor4People","inPeronAtClientLocationfor4People","twoPeople","threePeople","foureople","virtualSesion15People","classSessionPricing","virtualSessionfor15People","inPerson15People","inPersonAttrainerLocationfor15People","inPersonAtclientLocationfor15People","fifteenPeople","tempData","isNaN","social","parseFloat","class","areaOfExpertise","toString","trainingDate","getFormatDate","onSubmit","input","placeholder","onChange","src","Person","alt","Mail","disableDropdown","countryCodeEditable","country","inputProps","specialLabel","Phone","checked","profilePicture","Jenny","lastName","StrengthIcon","SheduleIcon","LocationIcon","pathname","console","log","COMMON_URL","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL","STRIPE_URL"],"mappings":"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","file":"static/js/27.e904378c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Mail from \"../../assets/files/SignUp/Email Icon.svg\";\r\nimport Person from \"../../assets/files/SignUp/Person Icon.svg\";\r\nimport Phone from \"../../assets/files/SignUp/Phone Icon.svg\";\r\nimport Jenny from \"../../assets/files/TrainerDashboard/Message/Jenny.png\";\r\nimport StrengthIcon from \"../../assets/files/UserOnboard/PaymentAsset/Strength Icon.svg\";\r\nimport SheduleIcon from \"../../assets/files/UserOnboard/PaymentAsset/Shedule Icon.svg\";\r\nimport LocationIcon from \"../../assets/files/UserOnboard/PaymentAsset/Location Icon.svg\";\r\nimport ArrowHoverBlacked from \"../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport \"../HowItWork/TrainerMotto/styles.scss\";\r\nimport BlueHoverButton from \"../common/BlueArrowButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"helpers\";\r\nimport { userSession, updateUserDetails } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { SESSION_URL } from \"helpers/baseURL\";\r\nimport { getFormatDate } from \"service/helperFunctions\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport { userApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { Toast } from \"service/toast\";\r\nimport validate from \"validate.js\";\r\n\r\nlet tempaccordionData = [\r\n  {\r\n    title: \"Social Session\",\r\n    session: \"1 Session / 2 People\",\r\n    session1: \"1 Session / 3 People\",\r\n    session2: \"1 Session / 4 People\",\r\n    price: \"$65.00 / Person\",\r\n    price1: \"$65.00 / Person\",\r\n    price2: \"$65.00 / Person\",\r\n    isPrice: true,\r\n  },\r\n  {\r\n    title: \"Class Session\",\r\n    session: \"Class (5-15 People)\",\r\n    price: \"$15.00 / Person\",\r\n    isPrice: true,\r\n  },\r\n  {\r\n    title: \"Cancellation Session\",\r\n    session: \"Cancellation Fee\",\r\n    price: \"Free upto 24 hours\",\r\n    isPrice: false,\r\n  },\r\n];\r\n\r\nconst TrainWithFriendsClass = ({\r\n  userSession,\r\n  sessionData,\r\n  scheduleSession,\r\n  trainerData,\r\n  bookingData,\r\n  defaulCardDetails,\r\n  queryQbject,\r\n  selectedTimes,\r\n  selectedTrainerData,\r\n  submittedData,\r\n  updateUserDetails,\r\n  ...restProps\r\n}) => {\r\n  const [friendsInput, setFriendsInput] = useState([\r\n    {\r\n      friendName: \"\",\r\n      friendEmail: \"\",\r\n      friendPhone: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [accordionData, setAccordionData] = useState(tempaccordionData);\r\n  const [errors, setErrors] = useState([]);\r\n  const [iWillPay, setIPay] = useState(false);\r\n\r\n  let trainingType = localStorage.getItem(\"sessionTrainingType\");\r\n  const handleChangeFriendInput = (index, event) => {\r\n    const values = [...friendsInput];\r\n\r\n    // console.log(values[index], index);\r\n\r\n    const { name, value } = event.target;\r\n    values[index][name] = value;\r\n\r\n    // console.log(values);\r\n\r\n    setFriendsInput(values);\r\n  };\r\n\r\n  const handleAddFriendFields = () => {\r\n    setFriendsInput([\r\n      ...friendsInput,\r\n      { friendName: \"\", friendEmail: \"\", friendPhone: \"\" },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { getSessionData } = userApi;\r\n    let sessionId = submittedData?.id;\r\n\r\n    getSessionData.id = sessionId;\r\n\r\n    api({ ...getSessionData }).then(({ data }) => {\r\n      const { friends = [] } = data;\r\n\r\n      let trainingType = \"\";\r\n\r\n      if (data.trainingType === \"social\") {\r\n        trainingType = \"SOCIAL SESSION\";\r\n      } else if (data.trainingType === \"class\") {\r\n        trainingType = \"CREATE A CLASS\";\r\n      } else if (data.trainingType === \"1on1\") {\r\n        trainingType = \"1 ON 1 TRAINING\";\r\n      }\r\n\r\n      let sessionData = {\r\n        location: { label: data?.city || \"\", value: data?.city || \"\" },\r\n        trainingVenue: {\r\n          label:\r\n            data.venue === \"clientLocation\"\r\n              ? \"Your Location\"\r\n              : \"Trainer's Location\",\r\n          value: data?.venue || \"\",\r\n        },\r\n        preferedTrainingMode: data?.sessionType || \"\",\r\n        price: data.price || \"\",\r\n        sessionType: trainingType || \"\",\r\n        trainingType: {\r\n          label: data?.activity || \"\",\r\n          value: data?.activity || \"\",\r\n        },\r\n      };\r\n\r\n      let bookingData = {\r\n        start_slot: data.sessionStartTime,\r\n        end_slot: data.sessionEndTime,\r\n        date: data.sessionDate,\r\n      };\r\n\r\n      let selectedTrainerData = {\r\n        ...data.trainerDetail,\r\n      };\r\n\r\n      let tempFriendsData = friends.map(({ userDetail }) => ({\r\n        friendName: userDetail?.firstName || \"\",\r\n        friendEmail: userDetail?.email || \"\",\r\n        friendPhone: userDetail?.phoneNo || \"\",\r\n      }));\r\n\r\n      if (tempFriendsData.length > 0) setFriendsInput(tempFriendsData);\r\n\r\n      let reduxData = {\r\n        bookingData,\r\n        sessionData,\r\n        selectedTrainerData,\r\n        submittedData: { ...data },\r\n      };\r\n\r\n      updateUserDetails(reduxData);\r\n    });\r\n  }, []);\r\n\r\n  const updateSessionApi = (e) => {\r\n    e.preventDefault();\r\n    let sessionId = submittedData?.id;\r\n\r\n    const { editSessionData } = userApi;\r\n\r\n    let tempPhoneData = friendsInput.filter(\r\n      ({ friendEmail, friendName, friendPhone }) =>\r\n        friendEmail && friendName && friendPhone\r\n    );\r\n\r\n    let payload = {\r\n      sessionId,\r\n      friends: tempPhoneData.map(\r\n        ({ friendEmail, friendName, friendPhone }) => ({\r\n          email: friendEmail,\r\n          firstName: friendName,\r\n          phoneNo: !friendPhone.includes(\"+\") ? `+${friendPhone}` : friendPhone,\r\n        })\r\n      ),\r\n      paidByUser: iWillPay,\r\n    };\r\n\r\n    // console.log(payload);\r\n    editSessionData.body = payload;\r\n\r\n    api({ ...editSessionData })\r\n      .then((data) => {\r\n        Toast({ type: \"success\", message: data.message || \"Success\" });\r\n        history.push(\"/users/dashboard/session\");\r\n      })\r\n      .catch((err) => {\r\n        Toast({ type: \"error\", message: err.message || \"Error\" });\r\n      });\r\n  };\r\n\r\n  const validationRules = () => {\r\n    let nameValidation = {\r\n      format: {\r\n        pattern: /^[a-zA-Z ]*$/,\r\n        flags: \"i\",\r\n        message: \"must be alphabets and spaces\",\r\n      },\r\n      length: {\r\n        minimum: 3,\r\n        tooShort: \"must contain alteast 3 character\",\r\n        maximum: 35,\r\n        tooLong: \"must contain less than 35 character\",\r\n      },\r\n    };\r\n    return {\r\n      firstName: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^First name is required\",\r\n        },\r\n        ...nameValidation,\r\n      },\r\n      location: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Location is required\",\r\n        },\r\n        ...nameValidation,\r\n      },\r\n      phoneNo: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Phone number is required\",\r\n        },\r\n        length: {\r\n          minimum: 8,\r\n          tooShort: \"^Invalid number\",\r\n          maximum: 15,\r\n          tooLong: \"^Invalid number\",\r\n        },\r\n      },\r\n      email: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Email is required\",\r\n        },\r\n        email: true,\r\n      },\r\n    };\r\n  };\r\n\r\n  const validateFields = (data) => {\r\n    let fieldInvalidList = validate(data, validationRules());\r\n\r\n    if (fieldInvalidList !== undefined) {\r\n      let errors = {\r\n        ...fieldInvalidList,\r\n      };\r\n      setErrors({ ...errors, ...fieldInvalidList });\r\n    }\r\n\r\n    return !fieldInvalidList;\r\n  };\r\n\r\n  const getUserSessions = () => {\r\n    userSession()\r\n      .then(() => {\r\n        history.push({\r\n          pathname: \"/users/dashboard/session\",\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const trainingLocation = sessionData?.trainingVenue?.value;\r\n\r\n    const activity =\r\n      bookingData?.activity?.label || sessionData?.trainingType?.label;\r\n\r\n    const isVirtual = sessionData?.preferedTrainingMode === \"virtual\";\r\n\r\n    const tempTrainerData = trainerData || selectedTrainerData;\r\n\r\n    const pricingObject = {};\r\n\r\n    // if (sessionType.includes(\"SOCIAL\")) {\r\n    const virtualSesion2People =\r\n      tempTrainerData?.socialSessionPricing?.virtualSessionfor2People;\r\n    const virtualSesion3People =\r\n      tempTrainerData?.socialSessionPricing?.virtualSessionfor3People;\r\n    const virtualSesion4People =\r\n      tempTrainerData?.socialSessionPricing?.virtualSessionfor4People;\r\n\r\n    const inPerson2People =\r\n      trainingLocation === \"trainerLocation\"\r\n        ? tempTrainerData?.socialSessionPricing\r\n            ?.inPeronAtTrainerLocationfor2People\r\n        : tempTrainerData?.socialSessionPricing\r\n            ?.inPeronAtClientLocationfor2People;\r\n\r\n    const inPerson3People =\r\n      trainingLocation === \"trainerLocation\"\r\n        ? tempTrainerData?.socialSessionPricing\r\n            ?.inPeronAtTrainerLocationfor3People\r\n        : tempTrainerData?.socialSessionPricing\r\n            ?.inPeronAtClientLocationfor2People;\r\n\r\n    const inPerson4People =\r\n      trainingLocation === \"trainerLocation\"\r\n        ? tempTrainerData?.socialSessionPricing\r\n            ?.inPeronAtTrainerLocationfor4People\r\n        : tempTrainerData?.socialSessionPricing\r\n            ?.inPeronAtClientLocationfor4People;\r\n\r\n    pricingObject[\"social\"] = {\r\n      twoPeople: isVirtual ? virtualSesion2People : inPerson2People,\r\n      threePeople: isVirtual ? virtualSesion3People : inPerson3People,\r\n      foureople: isVirtual ? virtualSesion4People : inPerson4People,\r\n    };\r\n    // } else if (sessionType.includes(\"CLASS\")) {\r\n    const virtualSesion15People =\r\n      tempTrainerData?.classSessionPricing?.virtualSessionfor15People;\r\n\r\n    const inPerson15People =\r\n      trainingLocation === \"trainerLocation\"\r\n        ? tempTrainerData?.classSessionPricing\r\n            ?.inPersonAttrainerLocationfor15People\r\n        : tempTrainerData?.classSessionPricing\r\n            ?.inPersonAtclientLocationfor15People;\r\n\r\n    pricingObject[\"class\"] = {\r\n      fifteenPeople: isVirtual ? virtualSesion15People : inPerson15People,\r\n    };\r\n\r\n    let tempData = [...accordionData];\r\n\r\n    // console.log(tempData, \"123\");\r\n\r\n    tempData[0] = {\r\n      ...tempData[0],\r\n      price: !isNaN(pricingObject.social.twoPeople)\r\n        ? parseFloat(pricingObject.social.twoPeople)\r\n        : null,\r\n      price1: !isNaN(pricingObject.social.threePeople)\r\n        ? parseFloat(pricingObject.social.threePeople)\r\n        : null,\r\n      price2: !isNaN(pricingObject.social.foureople)\r\n        ? parseFloat(pricingObject.social.foureople)\r\n        : null,\r\n    };\r\n    tempData[1] = {\r\n      ...tempData[1],\r\n      price: !isNaN(pricingObject.class.fifteenPeople)\r\n        ? parseFloat(pricingObject.class.fifteenPeople)\r\n        : null,\r\n    };\r\n\r\n    // console.log(tempData);\r\n\r\n    setAccordionData([...tempData]);\r\n    // }\r\n\r\n    // console.log(pricingObject);\r\n  }, []);\r\n\r\n  const tempTrainerData = trainerData || selectedTrainerData;\r\n\r\n  const areaOfExpertise = tempTrainerData?.areaOfExpertise?.toString();\r\n\r\n  const trainingDate = bookingData?.start_slot\r\n    ? getFormatDate(bookingData?.start_slot, \"MMMM Do, YYYY hh:mm A.\", true)\r\n    : \"\";\r\n\r\n  const sessionType = sessionData?.sessionType || \"\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"TF_outter_container\">\r\n        <div className=\"container\">\r\n          <div className=\"TF_inner_container\">\r\n            <div className=\"TF_headers\">\r\n              <h2>Your session is booked! Start adding your friends</h2>\r\n              <p>\r\n                Invite as many friends as you’d like, the friends that accept\r\n                will automatically be added in correspondence to session size!\r\n                Once they accept your session, your rate will automatically be\r\n                adjusted.\r\n              </p>\r\n            </div>\r\n            <div className=\"TF_wrapper\">\r\n              <div className=\"TF_inner_wrapper\">\r\n                <div className=\"TF_wrapper_left\">\r\n                  <div className=\"TF_wrapper_content\">\r\n                    <h2>Add Friends to Your Session</h2>\r\n                    <div className=\"TF_form\">\r\n                      <form onSubmit={updateSessionApi}>\r\n                        <h3>Enter your friend's details</h3>\r\n                        <div className=\"TF_inner_form\">\r\n                          {friendsInput.map((input, index) => {\r\n                            return (\r\n                              <div key={index} className=\"TF_wrapper_input\">\r\n                                <h4>Friend #{index + 1}</h4>\r\n                                <div className=\"inner_input\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"friendName\"\r\n                                    value={input.friendName}\r\n                                    onChange={(event) =>\r\n                                      handleChangeFriendInput(index, event)\r\n                                    }\r\n                                  />\r\n                                  <img src={Person} alt=\"icon\" />\r\n                                </div>\r\n\r\n                                <div className=\"TF_input\">\r\n                                  <div className=\"inner_input\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Email\"\r\n                                      name=\"friendEmail\"\r\n                                      value={input.friendEmail}\r\n                                      onChange={(event) =>\r\n                                        handleChangeFriendInput(index, event)\r\n                                      }\r\n                                    />\r\n                                    <img src={Mail} alt=\"icon\" />\r\n\r\n                                    <ReactPhoneInput\r\n                                      disableDropdown\r\n                                      countryCodeEditable={false}\r\n                                      country=\"us\"\r\n                                      placeholder=\"Phone\"\r\n                                      inputProps={{\r\n                                        name: \"phone\",\r\n                                      }}\r\n                                      specialLabel=\"\"\r\n                                      value={input.friendPhone}\r\n                                      name=\"phoneNo\"\r\n                                      onChange={(e) => {\r\n                                        handleChangeFriendInput(index, {\r\n                                          target: {\r\n                                            name: \"friendPhone\",\r\n                                            value: e,\r\n                                          },\r\n                                        });\r\n                                      }}\r\n                                    />\r\n\r\n                                    {/* <input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Phone Number\"\r\n                                      name=\"phone\"\r\n                                      value={input.friendPhone}\r\n                                      onChange={(event) =>\r\n                                        handleChangeFriendInput(index, event)\r\n                                      }\r\n                                    /> */}\r\n                                    <img src={Phone} alt=\"icon\" />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                          <div className=\"TF_remember_left\">\r\n                            <input\r\n                              className=\"TF_check\"\r\n                              type=\"checkbox\"\r\n                              name=\"iWillPay\"\r\n                              checked={iWillPay}\r\n                              onChange={() => setIPay(!iWillPay)}\r\n                            />\r\n                            <label>\r\n                              I will pay for all the people that I will be\r\n                              inviting to my social session or class\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"TF_button\">\r\n                          <button onClick={updateSessionApi}>\r\n                            Invite Friends <ArrowHoverBlacked />{\" \"}\r\n                          </button>\r\n                          {(sessionType.includes(\"SOCIAL\") &&\r\n                            friendsInput.length < 3) ||\r\n                          (sessionType.includes(\"CLASS\") &&\r\n                            friendsInput.length < 14) ? (\r\n                            <h5 onClick={handleAddFriendFields}>\r\n                              + Add More Friends\r\n                            </h5>\r\n                          ) : null}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"TF_wrapper_right\">\r\n                  <div className=\"TF_right\">\r\n                    <div className=\"TF_profile\">\r\n                      <img\r\n                        src={tempTrainerData?.profilePicture || Jenny}\r\n                        alt={`Trainer ${tempTrainerData?.firstName}`}\r\n                      />\r\n                      <div className=\"TF_name\">\r\n                        <h2>{`${tempTrainerData?.firstName || \"\"} ${\r\n                          tempTrainerData?.lastName || \"\"\r\n                        }`}</h2>\r\n                        <p>{areaOfExpertise}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"TF_wrapper\">\r\n                      <div className=\"TF_details\">\r\n                        <h3>I WANT TO TRAIN IN</h3>\r\n                        <div className=\"TF_data_inner\">\r\n                          <img src={StrengthIcon} alt=\"icon\" />\r\n                          <h4>\r\n                            {bookingData?.activity?.label ||\r\n                              sessionData?.trainingType?.label}\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TF_details\">\r\n                        <h3>I want to train on</h3>\r\n                        <div className=\"TF_data_inner\">\r\n                          <img src={SheduleIcon} alt=\"icon\" />\r\n                          <h4>\r\n                            {trainingDate ||\r\n                              getFormatDate(selectedTimes[0], \"YYYY-MM-DD\")}\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TF_details\">\r\n                        <h3>I WANT TO TRAIN AT</h3>\r\n                        <div className=\"TF_data_inner\">\r\n                          <img src={LocationIcon} alt=\"icon\" />\r\n                          <h4>{`${sessionData?.trainingVenue?.label}`}</h4>\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n\r\n                      <div className=\"TF_service_details\">\r\n                        <div className=\"TF_service_wrapper\">\r\n                          <div className=\"TF_service_left\">\r\n                            <div className=\"TF_service_header\">\r\n                              <div className=\"TF_inner_header\">\r\n                                <h3>Service Details</h3>\r\n                                <h3>Price / Hour</h3>\r\n                              </div>\r\n                              <AccordationService data={accordionData} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"TF_skip\">\r\n                <h2 className=\"w-100 text-right\">Not right now? </h2>\r\n                <Link onClick={getUserSessions}>\r\n                  CONTINUE TO ACCOUNT <BlueHoverButton />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst AccordationService = ({ data }) => {\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const toggle = (index) => {\r\n    if (selected === index) {\r\n      return setSelected(null);\r\n    }\r\n\r\n    setSelected(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data.map((item, index) => {\r\n        // console.log(item);\r\n\r\n        return (\r\n          <div\r\n            className={`TF_data_item ${\r\n              index === data.length - 1 ? \"no-border\" : \"\"\r\n            }`}\r\n            key={index}\r\n          >\r\n            <div className=\"TF_data_title\" onClick={() => toggle(index)}>\r\n              <h3>{item.title}</h3>\r\n              {/* <div className={selected === index ? \"line show\" : \"line\"}></div> */}\r\n            </div>\r\n\r\n            <div className=\"session-block\">\r\n              {item?.price && (\r\n                <div className=\"session-item d-flex aling-items-center\">\r\n                  <p>{item.session}</p>\r\n                  <p className=\"ml-auto\">\r\n                    {item.isPrice ? `$${item?.price} / Person` : item?.price}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {item.price1 && (\r\n                <div className=\"session-item d-flex aling-items-center\">\r\n                  <p>{item.session1}</p>\r\n                  <p className=\"ml-auto\">{`$${item?.price1} / Person`}</p>\r\n                </div>\r\n              )}\r\n              {item.price2 && (\r\n                <div className=\"session-item d-flex aling-items-center\">\r\n                  <p>{item.session2}</p>\r\n                  <p className=\"ml-auto\">{`$${item?.price2} / Person`}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  bookingData: state.userReducer.bookingData,\r\n  selectedTimes: state.userReducer.selectedTimes,\r\n  defaulCardDetails: state.userReducer.defaulCardDetails,\r\n  queryQbject: state.trainerReducer.query,\r\n  sessionData: state.userReducer.sessionData,\r\n  trainerData: state.userReducer.selectedTrainerData?.trainerData,\r\n  selectedTrainerData: state.userReducer.selectedTrainerData,\r\n  submittedData: state.userReducer.submittedData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      userSession,\r\n      updateUserDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainWithFriends = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainWithFriendsClass);\r\n\r\nexport default TrainWithFriends;\r\n","export var COMMON_URL = \"https://apis.bookmotto.com/user\";\r\nexport var MESSAGING_URL = \"https://apis.bookmotto.com/messaging\";\r\nexport var SESSION_URL = \"https://apis.bookmotto.com/session\";\r\nexport var NOTIFICATION_URL = \"\";\r\nexport var PAYMENT_URL = \"https://apis.bookmotto.com/payments\";\r\nexport var STRIPE_URL =\r\n  \"pk_live_51IJnd4BqgEC4bFYp4gC7EoInjpEKKjJXZMZGZurak1aK2ft1XN72QU355hRhLry3QmEucSKialeSBOGevqDJqfIJ00sU4zSO7O\";\r\n\r\n// export var COMMON_URL = \"http://doodlebluelive.com:2307\";\r\n// export var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\r\n// export var SESSION_URL = \"http://doodlebluelive.com:2337\";\r\n// export var NOTIFICATION_URL = \"\";\r\n// export var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\r\n// export var STRIPE_URL =\r\n//   \"pk_test_51IJnd4BqgEC4bFYpGGizgTzbIgTjeilOIQ1ht7qe6UfgB3yfVYRrcJbEZp37oPu7ACIFACqNc6hWVIPcIAbGqHyA00aa6T2SRm\";\r\n","export default __webpack_public_path__ + \"static/media/Jenny.c50273b9.png\";","export default __webpack_public_path__ + \"static/media/Phone Icon.f207d1b4.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.c8540d80.svg\";","export default __webpack_public_path__ + \"static/media/Shedule Icon.c434a0ee.svg\";","export default __webpack_public_path__ + \"static/media/Strength Icon.533b1e81.svg\";"],"sourceRoot":""}