{"version":3,"sources":["helpers/baseURL.js","component/TrainerDashBoard/DashboardCompontents/TrainerSchedule/Tfc.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg"],"names":["COMMON_URL","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL","timeZone","label","value","ButtonSection","className","Tfc","connect","dispatch","bindActionCreators","getTrainerCalenderDetails","trainerSlot","makeDefaultApi","addTrainerSlotApi","useState","makeDefault","setMakeDefault","editMode","setEditMode","tempcells","early_bird","EarlyInActive","rise_shine","RiseInActive","mid_day","MidInActive","mid_day_2","happy_hour","HappyInActive","never_too_late","NeverTooInActive","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","selectedCell","setSelectedCell","cells","setCells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","token","localStorage","getItem","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","ta","keys","map","item","a","push","temp","date","column","key","row","sortDate","columnkey","length","rowkey","sort","b","Date","startDate","endDate","availabilitySlot","availableMode","availableSlots","add","format","then","catch","error","console","start","end","now","clone","dates","isSameOrBefore","fetch","method","headers","Authorization","response","json","editSlot","datee","editData","mode","blockedSlot","state","log","body","JSON","stringify","tableData","tableData2","toggleEditMode","saveDefaultWeeks","def_body","defaultWeeks","alert","onChange","disabled","src","style","width","height","wordWrap","lineHeight","paddingLeft","paddingRight","paddingBottom","fontFamily","fontWeight","color","margin","slice","find","el","l","onClick","backgroundColor","isAfter","BackIcon","subtract","opacity","NextIcon","title","list","e","name","type","id","target","checked","for"],"mappings":"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","file":"static/js/100.cfcaa52b.chunk.js","sourcesContent":["export var COMMON_URL = \"http://doodlebluelive.com:2307\";\r\nexport var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\r\nexport var SESSION_URL = \"http://doodlebluelive.com:2337\";\r\nexport var NOTIFICATION_URL = \"\";\r\nexport var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TableDragSelect from \"react-table-drag-select\";\r\nimport \"react-table-drag-select/style.css\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport EarlyInActive from \"../../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg\";\r\nimport RiseInActive from \"../../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg\";\r\nimport MidInActive from \"../../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg\";\r\nimport HappyInActive from \"../../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg\";\r\nimport NeverTooInActive from \"../../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg\";\r\nimport {\r\n    getTrainerCalenderDetails,\r\n    trainerSlot,\r\n    makeDefaultApi,\r\n    addTrainerSlotApi,\r\n} from \"action/trainerAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { COMMON_URL } from \"helpers/baseURL\";\r\nconst timeZone = [\r\n    {\r\n        label: \"Early Bird\",\r\n        value: \"EarlyBird\",\r\n    },\r\n    {\r\n        label: \"Rise & Shine\",\r\n        value: \"RiseAndShine\",\r\n    },\r\n    {\r\n        label: \"Mid-Day Break\",\r\n        value: \"MidDayBreak1\",\r\n    },\r\n    {\r\n        label: \"Mid-Day Lunchtime\",\r\n        value: \"MidDayBreak2\",\r\n    },\r\n    {\r\n        label: \"Happy Hour\",\r\n        value: \"HappyHours\",\r\n    },\r\n    {\r\n        label: \"Never Too Late\",\r\n        value: \"NeverTooLate\",\r\n    },\r\n];\r\n\r\nfunction TfcClass({\r\n    getTrainerCalenderDetails,\r\n    trainerSlot,\r\n    makeDefaultApi,\r\n    addTrainerSlotApi,\r\n}) {\r\n    const [makeDefault, setMakeDefault] = useState(false);\r\n    //refer style in node module's react-table-drag\r\n    const [editMode, setEditMode] = useState(false);\r\n    const tempcells = [\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ];\r\n    //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    let early_bird = [\r\n        \"05:00 AM\",\r\n        \"05:30 AM\",\r\n        \"06:00 AM\",\r\n        \"06:30 AM\",\r\n        \"07:00 AM\",\r\n        \"07:30 AM\",\r\n        \"Early Bird\",\r\n        EarlyInActive,\r\n    ];\r\n\r\n    let rise_shine = [\r\n        \"08:00 AM\",\r\n        \"08:30 AM\",\r\n        \"09:00 AM\",\r\n        \"09:30 AM\",\r\n        \"10:00 AM\",\r\n        \"10:30 AM\",\r\n        \"Rise & Shine\",\r\n        RiseInActive,\r\n    ]; //1\r\n    // let rise_shine = [\"Rise & Shine\"]; //1\r\n    let mid_day = [\r\n        \"11:00 AM\",\r\n        \"11:30 AM\",\r\n        \"12:00 PM\",\r\n        \"12:30 PM\",\r\n        \"01:00 PM\",\r\n        \"01:30 PM\",\r\n        \"Mid-Day Break\",\r\n        MidInActive,\r\n    ]; //230 - 4\r\n\r\n    let mid_day_2 = [\r\n        \"02:00 PM\",\r\n        \"02:30 PM\",\r\n        \"03:00 PM\",\r\n        \"03:30 PM\",\r\n        \"04:00 PM\",\r\n        \"04:30 PM\",\r\n        \"Mid-Day Lunchtime\",\r\n        MidInActive,\r\n    ];\r\n\r\n    let happy_hour = [\r\n        \"05:00 PM\",\r\n        \"05:30 PM\",\r\n        \"06:00 PM\",\r\n        \"06:30 PM\",\r\n        \"07:00 PM\",\r\n        \"07:30 PM\",\r\n        \"Happy Hour\",\r\n        HappyInActive,\r\n    ];\r\n\r\n    let never_too_late = [\r\n        \"08:00 PM\",\r\n        \"08:30 PM\",\r\n        \"09:00 PM\",\r\n        \"09:30 PM\",\r\n        \"10:00 PM\",\r\n        \"10:30 PM\",\r\n        \"Never Too Late\",\r\n        NeverTooInActive,\r\n    ];\r\n\r\n    const [time, setTime] = useState(early_bird);\r\n    const [TimeSlot, setTimeSlot] = useState(\"EarlyBird\");\r\n\r\n    const [cellData, setCellData] = useState([]);\r\n    const [selectedCell, setSelectedCell] = useState([]);\r\n\r\n    const [cells, setCells] = useState([\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ]);\r\n\r\n    const [cal, setCal] = useState([]);\r\n    const [startWeek, setstartWeek] = useState(moment().startOf(\"isoWeek\"));\r\n    const [endWeek, setendWeek] = useState(moment().endOf(\"isoWeek\"));\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var dt = new Object();\r\n    var lt = new Object();\r\n    const [data, setData] = useState([]);\r\n\r\n    const [aslot, setAslot] = useState();\r\n    const [aslotKeys, setAslotKeys] = useState();\r\n\r\n    useEffect(() => {\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        populate(startWeek, endWeek);\r\n    }, [aslotKeys]);\r\n\r\n    useEffect(() => {\r\n        setSelectedCell([]);\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, [time]);\r\n\r\n    //   useEffect(() => {\r\n    //     // getAvailableSlots(startWeek, endWeek);\r\n    //     populate(startWeek, endWeek);\r\n\r\n    //  }, [TimeSlot])\r\n\r\n    useEffect(() => {\r\n        Object.keys(data).map((item) => {\r\n            dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n        });\r\n\r\n        var ta;\r\n        Object.keys(dt).map((item) => {\r\n            ta = [];\r\n            dt[item].map((a) => {\r\n                ta.push(a[\"start\"]);\r\n            });\r\n\r\n            lt[item] = ta;\r\n        });\r\n\r\n        setAslot(lt);\r\n        setAslotKeys(Object.keys(lt));\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setCellData([]);\r\n        time.map((time) => {\r\n            var temp = [];\r\n            cal.map((date) => {\r\n                // temp.push(date + \" \" + time);\r\n                temp.push({ date: date, time: time });\r\n            });\r\n\r\n            setCellData((cellData) => [...cellData, temp]);\r\n        });\r\n    }, [cal]);\r\n\r\n    useEffect(() => {\r\n        setSelectedCell([]);\r\n        cells.map((column, key) => {\r\n            var temp = [];\r\n            if (key !== 0) {\r\n                column.map((row, key) => {\r\n                    if (row === true) {\r\n                        temp.push(key - 1);\r\n                    }\r\n                });\r\n\r\n                setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n            }\r\n        });\r\n    }, [cells]);\r\n\r\n    useEffect(() => {\r\n        // setSelectedCell([]);\r\n        var temp = [];\r\n        var sortDate = [];\r\n\r\n        selectedCell.map((column, columnkey) => {\r\n            if (column.length !== 0) {\r\n                column.map((row, rowkey) => {\r\n                    temp.push(cellData[columnkey][row]);\r\n                });\r\n            }\r\n        });\r\n\r\n        // NOTE \"date\" is sorted reverse and \"time\" is sorted normally within the same object\r\n\r\n        if (temp.length !== 0) {\r\n            sortDate = temp.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n        }\r\n\r\n        // if (temp.length === 1) {\r\n        //     alert(\"Select more than Half an hour\");\r\n        //     setCells(tempcells);\r\n        // } else {\r\n        if (sortDate.length !== 0) {\r\n            var data = {\r\n                startDate: sortDate[sortDate.length - 1].date,\r\n                endDate: sortDate[0].date,\r\n                timeZone: \"America/New_York\",\r\n                availabilitySlot: [\r\n                    {\r\n                        availableMode: TimeSlot,\r\n                        availableSlots: [\r\n                            sortDate[0].time +\r\n                                \"-\" +\r\n                                moment(\r\n                                    sortDate[sortDate.length - 1].time,\r\n                                    \"HH:mm a\"\r\n                                )\r\n                                    .add(30, \"minutes\")\r\n                                    .format(\"hh:mm A\"),\r\n                        ],\r\n                    },\r\n                ],\r\n            };\r\n\r\n            addTrainerSlotApi(data)\r\n                .then(() => {\r\n                    setCells(tempcells);\r\n                    getAvailableSlots(startWeek, endWeek);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error:\", error);\r\n                });\r\n        }\r\n        // }\r\n\r\n        // setCells(tempcells)\r\n    }, [selectedCell]);\r\n\r\n    const PreviousWeek = () => {\r\n        //Reset current cells\r\n\r\n        setCells(tempcells);\r\n        setstartWeek(startWeek.subtract(7, \"days\"));\r\n        setendWeek(endWeek.subtract(7, \"days\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    };\r\n\r\n    useEffect(() => {}, [startWeek]);\r\n\r\n    const NextWeek = () => {\r\n        //Reset current cells\r\n\r\n        setCells(tempcells);\r\n        setstartWeek(startWeek.add(7, \"days\"));\r\n        setendWeek(endWeek.add(7, \"days\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n\r\n        populate(startWeek, endWeek);\r\n\r\n        // getAvailableSlots(startWeek, endWeek)\r\n    };\r\n\r\n    const populate = (start, end) => {\r\n        setCellData([]);\r\n        var now = start.clone(),\r\n            dates = [];\r\n\r\n        while (now.isSameOrBefore(end)) {\r\n            dates.push(now.format(\"YYYY-MM-DD\"));\r\n            now.add(1, \"days\");\r\n        }\r\n        setCal(dates);\r\n\r\n        if (cellData.length === 0) {\r\n            time.map((time) => {\r\n                var temp = [];\r\n                dates.map((date) => {\r\n                    // temp.push(date + \" \" + time);\r\n                    temp.push({ date: date, time: time });\r\n                });\r\n\r\n                setCellData((cellData) => [...cellData, temp]);\r\n            });\r\n        } else {\r\n            //   console.log(\"pop\");\r\n        }\r\n    };\r\n\r\n    const getAvailableSlots = (start, end) => {\r\n        var startDate = start.format(\"YYYY-MM-DD\");\r\n        var endDate = end.format(\"YYYY-MM-DD\");\r\n        fetch(\r\n            `${COMMON_URL}/v1/trainer/calenderView?startDate=` +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=\" +\r\n                TimeSlot +\r\n                `&timeZone=America/New_York`,\r\n            {\r\n                method: \"GET\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setData(json.data);\r\n            });\r\n    };\r\n    function editSlot(datee, time) {\r\n        var editData = {\r\n            date: datee,\r\n            mode: TimeSlot,\r\n            blockedSlot: time,\r\n            state: \"BLOCK\",\r\n            timeZone: \"America/New_York\",\r\n        };\r\n        console.log(\"wwwwwwwwwwww\", editData);\r\n        fetch(`${COMMON_URL}/v1/block/trainerSlot`, {\r\n            method: \"PUT\", // or 'PUT'\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(editData),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCells(tempcells);\r\n                getAvailableSlots(startWeek, endWeek);\r\n                console.log(\"yui\", data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    }\r\n    const toggleEditMode = () => {\r\n        if (makeDefault) {\r\n            saveDefaultWeeks();\r\n            setMakeDefault(!makeDefault);\r\n        }\r\n        setEditMode(!editMode);\r\n    };\r\n\r\n    const saveDefaultWeeks = () => {\r\n        var def_body = {\r\n            startDate: startWeek.format(\"YYYY-MM-DD\"),\r\n            endDate: endWeek.format(\"YYYY-MM-DD\"),\r\n            defaultWeeks: 2,\r\n            mode: TimeSlot,\r\n        };\r\n        makeDefaultApi(def_body)\r\n            .then(() => {\r\n                alert(\"Slot def blocked\");\r\n                setCells(tempcells);\r\n                getAvailableSlots(startWeek, endWeek);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    };\r\n    let tableData;\r\n\r\n    let tableData2;\r\n    if (cellData.length === 0) {\r\n        console.log(\"hitu\");\r\n    } else {\r\n        tableData = (\r\n            <TableDragSelect\r\n                value={cells}\r\n                onChange={(cells) => setCells(cells)}\r\n            >\r\n                <thead>\r\n                    <td disabled>\r\n                        <img\r\n                            src={time[7]}\r\n                            style={{ width: \"30px\", height: \"30px\" }}\r\n                        />\r\n                        <h6\r\n                            style={{\r\n                                wordWrap: \"break-word\",\r\n                                lineHeight: \"18px\",\r\n                                paddingLeft: \"0.5em\",\r\n                                paddingRight: \"0.5em\",\r\n                                paddingBottom: \"0em\",\r\n                                fontFamily: \"Montserrat\",\r\n                                fontWeight: \"800\",\r\n                                color: \"#898989\",\r\n                                margin: 0,\r\n                            }}\r\n                        >\r\n                            {\" \"}\r\n                            {time[6]}\r\n                        </h6>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[0].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">MON</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[1].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">TUES</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[2].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">WED</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[3].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">THURS</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[4].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">FRI</div>\r\n                    </td>\r\n                    <td disabled>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[5].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">SAT</div>\r\n                    </td>\r\n                    <td disabled style={{ height: \"120px\" }}>\r\n                        <div className=\"table_header_number\">\r\n                            {cal[6].slice(8, 10)}\r\n                        </div>\r\n                        <div className=\"table_header_txt\">SUN</div>\r\n                    </td>\r\n                </thead>\r\n                <tr style={{ height: \"70px\" }}>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[0]}\r\n                    </td>\r\n                    {cellData[0].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr style={{ height: \"70px\" }}>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[1]}\r\n                    </td>\r\n                    {cellData[1].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr style={{ height: \"70px\" }}>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[2]}\r\n                    </td>\r\n                    {cellData[2].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr style={{ height: \"70px\" }}>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[3]}\r\n                    </td>\r\n                    {cellData[3].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr style={{ height: \"70px\" }}>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[4]}\r\n                    </td>\r\n                    {cellData[4].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n                <tr style={{ height: \"70px\" }}>\r\n                    <td disabled className=\"slot_time\">\r\n                        {time[5]}\r\n                    </td>\r\n                    {cellData[5].map((item) => {\r\n                        if (aslotKeys.length !== 0) {\r\n                            if (aslotKeys.find((el) => el === item.date)) {\r\n                                if (\r\n                                    aslot[item.date].find(\r\n                                        (l) => l === item.time\r\n                                    )\r\n                                ) {\r\n                                    return (\r\n                                        <td\r\n                                            disabled\r\n                                            onClick={() =>\r\n                                                editSlot(item.date, item.time)\r\n                                            }\r\n                                        ></td>\r\n                                    );\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        } else {\r\n                            return <td></td>;\r\n                        }\r\n                    })}\r\n                </tr>\r\n            </TableDragSelect>\r\n        );\r\n        tableData2 = (\r\n            <table className=\"table2\">\r\n                <thead>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <th disabled>\r\n                            <img\r\n                                src={time[7]}\r\n                                style={{ width: \"30px\", height: \"30px\" }}\r\n                            />\r\n                            <h6\r\n                                style={{\r\n                                    wordWrap: \"break-word\",\r\n                                    lineHeight: \"18px\",\r\n                                    paddingLeft: \"0.5em\",\r\n                                    paddingRight: \"0.5em\",\r\n                                    paddingBottom: \"0em\",\r\n                                    fontFamily: \"Montserrat\",\r\n                                    fontWeight: \"600\",\r\n                                    color: \"#898989\",\r\n                                    margin: 0,\r\n                                }}\r\n                            >\r\n                                {\" \"}\r\n                                {time[6]}\r\n                            </h6>\r\n                            {/* {early_bird} */}\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[0].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">MON</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[1].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">TUES</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[2].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">WED</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[3].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">THURS</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[4].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">FRI</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[5].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SAT</div>\r\n                        </th>\r\n                        <th disabled>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[6].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SUN</div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <td\r\n                            disabled\r\n                            className=\"slot_time\"\r\n                            style={{ backgroundColor: \"fff\" }}\r\n                        >\r\n                            {time[0]}\r\n                        </td>\r\n                        {cellData[0].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[1]}\r\n                        </td>\r\n                        {cellData[1].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[2]}\r\n                        </td>\r\n                        {cellData[2].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[3]}\r\n                        </td>\r\n                        {cellData[3].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[4]}\r\n                        </td>\r\n                        {cellData[4].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr style={{ height: \"70px\" }}>\r\n                        <td disabled className=\"slot_time\">\r\n                            {time[5]}\r\n                        </td>\r\n                        {cellData[5].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return (\r\n                                            <td\r\n                                                disabled\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_table_trainer\">\r\n                <div className=\"table_trainer\">\r\n                    <div className=\"table_inner_trainer\">\r\n                        <div className=\"table_date\">\r\n                            {/* <img\r\n                                src={BackIcon}\r\n                                onClick={PreviousWeek}\r\n                                disabled=\"true\"\r\n                            />{\" \"} */}\r\n                            &ensp;\r\n                            {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n                                moment()\r\n                                    .startOf(\"isoWeek\")\r\n                                    .format(\"YYYY-MM-DD\"),\r\n                                \"day\"\r\n                            ) ? (\r\n                                <div>\r\n                                    <img\r\n                                        src={BackIcon}\r\n                                        onClick={PreviousWeek}\r\n                                    />{\" \"}\r\n                                    &ensp;\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <img\r\n                                        src={BackIcon}\r\n                                        disabled=\"true\"\r\n                                        style={{ opacity: \"0.5\" }}\r\n                                    />{\" \"}\r\n                                    &ensp;\r\n                                </div>\r\n                            )}\r\n                            <div className=\"date_week\">\r\n                                {startWeek.format(\"DD\")} -{\" \"}\r\n                                {endWeek.format(\"DD\")} &ensp;\r\n                                {startWeek.format(\"MMMM\")},{\" \"}\r\n                                {startWeek.format(\"yyyy\")}\r\n                            </div>\r\n                            <img src={NextIcon} onClick={NextWeek} /> &ensp;\r\n                            &ensp;\r\n                        </div>\r\n                        <div className=\"table_date\">\r\n                            <Dropdown\r\n                                className=\"custom_dropdown\"\r\n                                title=\"Select Time Zone\"\r\n                                list={timeZone}\r\n                                value={TimeSlot}\r\n                                onChange={(e) => {\r\n                                    setTimeSlot(e.value);\r\n                                    if (e.value === \"EarlyBird\") {\r\n                                        setTime(early_bird);\r\n                                    }\r\n\r\n                                    if (e.value === \"RiseAndShine\") {\r\n                                        setTime(rise_shine);\r\n                                    }\r\n\r\n                                    if (e.value === \"MidDayBreak1\") {\r\n                                        setTime(mid_day);\r\n                                    }\r\n\r\n                                    if (e.value === \"MidDayBreak2\") {\r\n                                        setTime(mid_day_2);\r\n                                    }\r\n\r\n                                    if (e.value === \"HappyHours\") {\r\n                                        setTime(happy_hour);\r\n                                    }\r\n\r\n                                    if (e.value === \"NeverTooLate\") {\r\n                                        setTime(never_too_late);\r\n                                    }\r\n                                }}\r\n                                name=\"TimeSlot\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* {tableData}\r\n                    {tableData2} */}\r\n                    {\r\n                        //Check if message failed\r\n                        editMode ? (\r\n                            <div style={{ height: \"530px\", width: \"960px\" }}>\r\n                                {\" \"}\r\n                                {tableData}{\" \"}\r\n                            </div>\r\n                        ) : (\r\n                            <div style={{ height: \"530px\", width: \"960px\" }}>\r\n                                {\" \"}\r\n                                {tableData2}{\" \"}\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className=\"scheduler_button\">\r\n                        {editMode ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"defualt\"\r\n                                    onChange={(e) => {\r\n                                        setMakeDefault(e.target.checked);\r\n                                    }}\r\n                                    checked={makeDefault}\r\n                                />\r\n                                <label\r\n                                    for=\"defualt\"\r\n                                    style={{ color: \"#898989\" }}\r\n                                    className=\"default_label\"\r\n                                >\r\n                                    {\" \"}\r\n                                    Make defualt\r\n                                </label>\r\n                                <br></br>\r\n                                <button\r\n                                    onClick={toggleEditMode}\r\n                                    className=\"scheduler_button\"\r\n                                    style={{\r\n                                        backgroundColor: \"#53d27d\",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                >\r\n                                    SAVE\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <button\r\n                                onClick={toggleEditMode}\r\n                                className=\"scheduler_button\"\r\n                                style={{\r\n                                    backgroundColor: \"#53bfd2\",\r\n\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                ADD YOUR SLOT\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ButtonSection />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ButtonSection = () => {\r\n    return (\r\n        <div className=\"schedular_slots\">\r\n            <div className=\"items_slots\">\r\n                <div className=\"item_slot1\">\r\n                    <div className=\"indicator\"></div>\r\n                    <h5>AVAILABLE</h5>\r\n                </div>\r\n                <div className=\"item_slot2\">\r\n                    <div className=\"indicator2\"></div>\r\n                    <h5>UNAVAILABLE</h5>{\" \"}\r\n                </div>\r\n                <div className=\"item_slot3\">\r\n                    <div className=\"indicator3\"></div>\r\n                    <h5>BOOKED SLOT</h5>{\" \"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            getTrainerCalenderDetails,\r\n            trainerSlot,\r\n            makeDefaultApi,\r\n            addTrainerSlotApi,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst Tfc = connect(null, mapDispatchToProps)(TfcClass);\r\n\r\nexport default Tfc;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";","export default __webpack_public_path__ + \"static/media/EarlyBird_Inactive.8646c23c.svg\";","export default __webpack_public_path__ + \"static/media/HappyHour_Inactive.bef73318.svg\";","export default __webpack_public_path__ + \"static/media/Mid-DayBreak_Inactive.edab2351.svg\";","export default __webpack_public_path__ + \"static/media/NeverTooLate_Inactive.0ac0364d.svg\";","export default __webpack_public_path__ + \"static/media/Rise_Shine_Inactive.fb11fce5.svg\";"],"sourceRoot":""}