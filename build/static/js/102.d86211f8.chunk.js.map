{"version":3,"sources":["component/UserDashBoard/UserDashboardCompontents/UserMyProfile/MyProfile.js","pages/UserDashboard/Settings/MyProfile.js","assets/files/SVG/Picture Icon.svg","assets/files/SVG/Profile Picture.svg"],"names":["options","label","value","name","MyProfile","connect","dispatch","bindActionCreators","getUserDetail","useState","firstName","lastName","email","phoneNo","paymentProfileId","mottoPasses","signUpType","userData","setUserData","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","then","data","className","src","style","objectFit","width","height","borderRadius","onClick","event","preventDefault","current","click","Profile","alt","ProfileAdd","type","ref","accept","onChange","file","target","files","substr","e","title","list","location","console","log","disableDropdown","countryCodeEditable","placeholder","country","inputProps","Main"],"mappings":"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","file":"static/js/102.d86211f8.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport Profile from \"../../../../assets/files/SVG/Profile Picture.svg\";\nimport ProfileAdd from \"../../../../assets/files/SVG/Picture Icon.svg\";\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\nimport { Dropdown } from \"reactjs-dropdown-component\";\nimport \"./dropdown.scss\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { getUserDetail } from \"action/userAct\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nconst options = [\n  { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\n  {\n    label: \"New York City\",\n    value: \"New York City\",\n    name: \"serviceableLocation\",\n  },\n  { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\n  { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\n];\nconst gender = [\n  { value: \"male\", label: \"Male\" },\n  { value: \"female\", label: \"Female\" },\n];\n\n// firstName\n// lastName\n// password\n// email\n// phoneNo\n// signUpType\n// mottoPasses\n// status\n// paymentProfileId\nconst MyProfileClass = ({ getUserDetail }) => {\n  const [userData, setUserData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    paymentProfileId: \"\",\n    mottoPasses: \"\",\n    signUpType: \"email\",\n  });\n  const [getUserData, setGetUserData] = useState();\n  const [image, setImage] = useState();\n  const [previewImage, setPreviewTmage] = useState();\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreviewTmage(reader.result);\n      };\n      reader.readAsDataURL(image);\n    } else {\n      setPreviewTmage(null);\n    }\n  }, [image]);\n\n  useEffect(() => {\n    getUserProfileData();\n  }, []);\n\n  function getUserProfileData() {\n    getUserDetail().then((data) => {\n      setUserData(data);\n    });\n  }\n\n  // const handleSaveChange = () => {\n  //     const { firstName } = userData;\n\n  //     let payload = {\n  //         firstName: firstName,\n  //     };\n\n  //     fetch(\"http://doodlebluelive.com:2307/v1/user/edit\", {\n  //         method: \"POST\",\n  //         headers: new Headers({\n  //             Authorization: localStorage.getItem(\"token\"),\n  //             \"Content-Type\": \"application/x-www-form-urlencoded\",\n  //         }),\n  //     })\n  //         .then((response) => response.json())\n  //         .then((data) => {\n  //             setUserData(data[\"data\"]);\n  //         });\n  // };\n\n  return (\n    <>\n      <div className=\"myprofile_outter_container\">\n        <div className=\"container\">\n          <div className=\"myprofile_inner_container\">\n            <div className=\"myprofile_header\">\n              <h2>My Profile</h2>\n            </div>\n            <div className=\"profile_wrapper\">\n              <div className=\"profile_grid\">\n                <div className=\"profile_pic_col\">\n                  <div className=\"profile_picture\">\n                    {previewImage ? (\n                      <img\n                        src={previewImage}\n                        style={{\n                          objectFit: \"cover\",\n                          width: \"200px\",\n                          height: \"200px\",\n                          borderRadius: \"100px\",\n                        }}\n                        onClick={() => {\n                          setPreviewTmage(null);\n                        }}\n                      />\n                    ) : (\n                      <div className=\"combin_profile\">\n                        <button\n                          onClick={(event) => {\n                            event.preventDefault();\n                            fileInputRef.current.click();\n                          }}\n                        >\n                          <img\n                            src={Profile}\n                            alt=\"icon\"\n                            style={{\n                              objectFit: \"cover\",\n                              width: \"100px\",\n                              height: \"100px\",\n                            }}\n                          />\n                        </button>\n                        <img\n                          src={ProfileAdd}\n                          alt=\"icon\"\n                          style={{\n                            objectFit: \"cover\",\n                            width: \"20px\",\n                            height: \"20px\",\n                            borderRadius: \"100px\",\n                          }}\n                          onClick={(event) => {\n                            event.preventDefault();\n                            fileInputRef.current.click();\n                          }}\n                        />\n                      </div>\n                    )}\n\n                    <input\n                      type=\"file\"\n                      ref={fileInputRef}\n                      accept=\"image/*\"\n                      onChange={(event) => {\n                        const file = event.target.files[0];\n                        if (file && file.type.substr(0, 5) === \"image\") {\n                          setImage(file);\n                        } else {\n                          setImage(null);\n                        }\n                      }}\n                    />\n                    <h5>Remove Profile Picture</h5>\n                  </div>\n                </div>\n                <div className=\"profile_form_col\">\n                  <div className=\"outter_profile_form\">\n                    <form>\n                      <div className=\"inner_profile_form\">\n                        <div className=\"input_profile\">\n                          <label>Name </label>\n                          <input\n                            type=\"text\"\n                            value={userData.firstName}\n                            onChange={(e) => {\n                              setUserData({\n                                ...userData,\n                                firstName: e.target.value,\n                              });\n                            }}\n                            name=\"firstName\"\n                          />\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Location </label>\n                          <Dropdown\n                            className=\"custom_dropdown\"\n                            title=\"Select Location\"\n                            list={options}\n                            value={userData.location}\n                            onChange={(e) => {\n                              setUserData({\n                                ...userData,\n                                location: e.value,\n                              });\n                              console.log(e.value);\n                            }}\n                            name=\"location\"\n                          />\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Date of Birth </label>\n                          <input type=\"date\" value={userData.location} />\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Gender </label>\n                          {/* <Dropdown\n                                        className=\"custom_dropdown\"\n                                        title=\"Select Gender\"\n                                        list={gender}\n                                        value={aboutTrainerData.gender}\n                                        onChange={(e) => {\n                                            setAboutTrainerData({\n                                                ...aboutTrainerData,\n                                                gender: e.value,\n                                            });\n                                        }}\n                                        name=\"gender\"\n                                    /> */}\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Email </label>\n                          <input\n                            type=\"text\"\n                            value={userData.email}\n                            onChange={(e) => {\n                              setUserData({\n                                ...userData,\n                                email: e.target.value,\n                              });\n                            }}\n                          />\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Phone </label>\n\n                          <ReactPhoneInput\n                            type=\"phone\"\n                            disableDropdown\n                            // disableAreaCodes\n                            countryCodeEditable={false}\n                            value={userData.phoneNo}\n                            placeholder=\"Phone Number\"\n                            country=\"us\"\n                            inputProps={{\n                              name: \"phoneNo\",\n                            }}\n                            name=\"phoneNo\"\n                            onChange={(e) =>\n                              setUserData({\n                                ...userData,\n                                phoneNo: e,\n                              })\n                            }\n                          />\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Payment Method </label>\n                          <input type=\"text\" />\n                        </div>\n                        <div className=\"input_profile\">\n                          <label>Password </label>\n                          <input type=\"text\" />\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <button className=\"profile_save\">\n                SAVE CHANGES <BlueHoverButton />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getUserDetail,\n    },\n    dispatch\n  );\n};\n\nconst MyProfile = connect(null, mapDispatchToProps)(MyProfileClass);\n\nexport default MyProfile;\n","import React from \"react\";\nimport MyProfile from \"component/UserDashBoard/UserDashboardCompontents/UserMyProfile/MyProfile\";\n\nexport default function Main() {\n  return (\n    <div>\n      {/* Banner  */}\n      <MyProfile />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Picture Icon.3e77f4f6.svg\";","export default __webpack_public_path__ + \"static/media/Profile Picture.5a574e6d.svg\";"],"sourceRoot":""}