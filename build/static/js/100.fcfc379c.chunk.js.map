{"version":3,"sources":["component/TrainerProfile/UserScheduler/UserScheduler.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ButtonSection","className","UserScheduler","props","early_bird","rise_shine","mid_day","mid_day_2","happy_hour","never_too_late","React","useState","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","setSelectedCell","userSlots","setuserSlots","cells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","token","localStorage","getItem","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","ta","keys","map","item","a","push","temp","date","column","key","row","selectedCell","start","end","now","clone","dates","isSameOrBefore","format","add","length","selectUserSlot","cellCollection","newTime","valueOf","find","el","prevTime","subtract","tableData2","startDate","endDate","fetch","id","method","headers","Authorization","then","response","json","slice","l","style","backgroundColor","onClick","isAfter","src","BackIcon","cursor","disabled","opacity","NextIcon","value","onChange","e","target","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/100.fcfc379c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\nimport \"./styles.scss\";\r\nfunction UserScheduler(props) {\r\n    //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    let early_bird = [\r\n        \"05:00 AM\",\r\n        \"05:30 AM\",\r\n        \"06:00 AM\",\r\n        \"06:30 AM\",\r\n        \"07:00 AM\",\r\n        \"07:30 AM\",\r\n    ];\r\n\r\n    let rise_shine = [\r\n        \"08:00 AM\",\r\n        \"08:30 AM\",\r\n        \"09:00 AM\",\r\n        \"09:30 AM\",\r\n        \"10:00 AM\",\r\n        \"10:30 AM\",\r\n    ]; //1\r\n\r\n    let mid_day = [\r\n        \"11:00 AM\",\r\n        \"11:30 AM\",\r\n        \"12:00 PM\",\r\n        \"12:30 PM\",\r\n        \"01:00 PM\",\r\n        \"01:30 PM\",\r\n    ]; //230 - 4\r\n\r\n    let mid_day_2 = [\r\n        \"02:00 PM\",\r\n        \"02:30 PM\",\r\n        \"03:00 PM\",\r\n        \"03:30 PM\",\r\n        \"04:00 PM\",\r\n        \"04:30 PM\",\r\n    ];\r\n\r\n    let happy_hour = [\r\n        \"05:00 PM\",\r\n        \"05:30 PM\",\r\n        \"06:00 PM\",\r\n        \"06:30 PM\",\r\n        \"07:00 PM\",\r\n        \"07:30 PM\",\r\n    ];\r\n\r\n    let never_too_late = [\r\n        \"08:00 PM\",\r\n        \"08:30 PM\",\r\n        \"09:00 PM\",\r\n        \"09:30 PM\",\r\n        \"10:00 PM\",\r\n        \"10:30 PM\",\r\n    ];\r\n\r\n    const [time, setTime] = React.useState(early_bird);\r\n    const [TimeSlot, setTimeSlot] = React.useState(\"EarlyBird\");\r\n\r\n    const [cellData, setCellData] = React.useState([]);\r\n    const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n    const [userSlots, setuserSlots] = React.useState([]);\r\n\r\n    const [cells, setCells] = React.useState([\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ]);\r\n\r\n    const [cal, setCal] = React.useState([]);\r\n    const [startWeek, setstartWeek] = React.useState(\r\n        moment().startOf(\"isoWeek\")\r\n    );\r\n    const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var dt = new Object();\r\n    var lt = new Object();\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const [aslot, setAslot] = React.useState();\r\n    const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n\r\n        // console.log(TimeSlot);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        setSelectedCell([]);\r\n        //console.log(\"time changed\");\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, [time]);\r\n\r\n    React.useEffect(() => {\r\n        Object.keys(data).map((item) => {\r\n            // console.log(data[item][\"slotDate\"], data[item][\"availabileTimes\"]);\r\n            dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n        });\r\n        //console.log(dt);\r\n\r\n        var ta;\r\n        Object.keys(dt).map((item) => {\r\n            ta = [];\r\n            dt[item].map((a) => {\r\n                // ta.push(a[\"end\"]);\r\n                ta.push(a[\"start\"]);\r\n                // console.log(ta, item);\r\n            });\r\n\r\n            lt[item] = ta;\r\n        });\r\n\r\n        setAslot(lt);\r\n        setAslotKeys(Object.keys(lt));\r\n        //  console.log(lt);\r\n    }, [data]);\r\n\r\n    React.useEffect(() => {\r\n        // console.log(cal);\r\n        setCellData([]);\r\n        time.map((time) => {\r\n            var temp = [];\r\n            cal.map((date) => {\r\n                // temp.push(date + \" \" + time);\r\n                temp.push({ date: date, time: time });\r\n            });\r\n\r\n            setCellData((cellData) => [...cellData, temp]);\r\n        });\r\n    }, [cal]);\r\n\r\n    React.useEffect(() => {\r\n        //    (\"change\", cells, cellData);\r\n        setSelectedCell([]);\r\n        cells.map((column, key) => {\r\n            var temp = [];\r\n            if (key !== 0) {\r\n                // (key);\r\n\r\n                column.map((row, key) => {\r\n                    if (row === true) {\r\n                        temp.push(key - 1);\r\n                    }\r\n                });\r\n\r\n                //   console.log(temp);\r\n                setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n            }\r\n        });\r\n    }, [cells]);\r\n\r\n    const PreviousWeek = () => {\r\n        //Reset current cells\r\n\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.subtract(7, \"days\"));\r\n        setendWeek(endWeek.subtract(7, \"days\"));\r\n        //console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    };\r\n\r\n    React.useEffect(() => {}, [startWeek]);\r\n\r\n    const NextWeek = () => {\r\n        //Reset current cells\r\n\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.add(7, \"days\"));\r\n        setendWeek(endWeek.add(7, \"days\"));\r\n        // console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n\r\n        populate(startWeek, endWeek);\r\n\r\n        // getAvailableSlots(startWeek, endWeek)\r\n    };\r\n\r\n    const populate = (start, end) => {\r\n        setCellData([]);\r\n        var now = start.clone(),\r\n            dates = [];\r\n\r\n        while (now.isSameOrBefore(end)) {\r\n            dates.push(now.format(\"YYYY-MM-DD\"));\r\n            now.add(1, \"days\");\r\n        }\r\n        setCal(dates);\r\n\r\n        if (cellData.length === 0) {\r\n            // console.log(\"0\");\r\n            time.map((time) => {\r\n                var temp = [];\r\n                dates.map((date) => {\r\n                    // temp.push(date + \" \" + time);\r\n                    temp.push({ date: date, time: time });\r\n                });\r\n\r\n                setCellData((cellData) => [...cellData, temp]);\r\n            });\r\n        } else {\r\n            //   console.log(\"pop\");\r\n        }\r\n    };\r\n\r\n    function selectUserSlot(date, time) {\r\n        // console.log(\"user slot\", date + time);\r\n\r\n        // var temp = [date + time]\r\n        // setuserSlots(temp);\r\n\r\n        var cellCollection = [];\r\n        var temp = aslot[date];\r\n        // console.log(time, date, temp);\r\n\r\n        cellCollection.push(time + date);\r\n\r\n        var newTime = moment(time, \"hh:mm A\")\r\n            .add(30, \"minutes\")\r\n            .format(\"hh:mm A\");\r\n        var ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\").valueOf();\r\n        var tss;\r\n        if (temp.find((el) => el === newTime)) {\r\n            // console.log(\"found\", date);\r\n            cellCollection.push(newTime + date);\r\n            //  console.log(cellCollection);\r\n            // tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n            //     .add(60, \"minutes\")\r\n            //     .valueOf();\r\n        } else {\r\n            //  console.log(\"not_found\");\r\n            var prevTime = moment(newTime, \"hh:mm A\")\r\n                .subtract(60, \"minutes\")\r\n                .format(\"hh:mm A\");\r\n            cellCollection.push(prevTime + date);\r\n            //  console.log(cellCollection);\r\n            // tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n            //     .subtract(30, \"minutes\")\r\n            //     .valueOf();\r\n        }\r\n\r\n        setuserSlots(cellCollection);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        populate(startWeek, endWeek);\r\n    }, [userSlots]);\r\n\r\n    const getAvailableSlots = (start, end) => {\r\n        var startDate = start.format(\"YYYY-MM-DD\");\r\n        var endDate = end.format(\"YYYY-MM-DD\");\r\n        //  console.log(startDate, endDate);\r\n        // console.log(\r\n        //   \"http://doodlebluelive.com:2307/v1/trainer/calenderView?startDate=\" +\r\n        //     startDate +\r\n        //     \"&endDate=\" +\r\n        //     endDate +\r\n        //     \"&timeBlock=\" +\r\n        //     TimeSlot\r\n        // );\r\n        fetch(\r\n            \"http://doodlebluelive.com:2307/v1/trainer/calenderView?trainerId=\" +\r\n                props.id +\r\n                \"&startDate=\" +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=\" +\r\n                TimeSlot,\r\n            {\r\n                method: \"GET\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    // Authorization: localStorage.getItem(\"token\"),\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setData(json.data);\r\n            });\r\n    };\r\n\r\n    let tableData2;\r\n\r\n    if (cellData.length === 0) {\r\n        //console.log(\"hitu\");\r\n    } else {\r\n        tableData2 = (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[0].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">MON</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[1].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">TUES</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[2].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">WED</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[3].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">THURS</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[4].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">FRI</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[5].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SAT</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[6].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SUN</div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[0]}</td>\r\n                        {cellData[0].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        // console.log(item.date + item.time, userSlots, \"blah\");\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                                className=\"avaiable_slot\"\r\n                                            >\r\n                                                {item.time}\r\n                                            </td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[1]}</td>\r\n                        {cellData[1].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[2]}</td>\r\n                        {cellData[2].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[3]}</td>\r\n                        {cellData[3].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[4]}</td>\r\n                        {cellData[4].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[5]}</td>\r\n                        {cellData[5].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"outter_table_user\">\r\n            <div className=\"table_user\">\r\n                <div className=\"table_inner_trainer\">\r\n                    <div className=\"table_date\">\r\n                        {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n                            moment().startOf(\"isoWeek\").format(\"YYYY-MM-DD\"),\r\n                            \"day\"\r\n                        ) ? (\r\n                            <div>\r\n                                <img\r\n                                    src={BackIcon}\r\n                                    onClick={PreviousWeek}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                />{\" \"}\r\n                                &ensp;\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <img\r\n                                    src={BackIcon}\r\n                                    disabled=\"true\"\r\n                                    style={{\r\n                                        opacity: \"0.5\",\r\n                                        cursor: \"not-allowed\",\r\n                                    }}\r\n                                />{\" \"}\r\n                                &ensp;\r\n                            </div>\r\n                        )}\r\n                        &ensp;\r\n                        <div className=\"date_week\">\r\n                            {startWeek.format(\"DD\")} - {endWeek.format(\"DD\")}{\" \"}\r\n                            &ensp;\r\n                            {startWeek.format(\"MMMM\")} &ensp;{\" \"}\r\n                            {startWeek.format(\"yyyy\")}{\" \"}\r\n                        </div>\r\n                        <img\r\n                            src={NextIcon}\r\n                            onClick={NextWeek}\r\n                            style={{ cursor: \"pointer\" }}\r\n                        />{\" \"}\r\n                        &ensp; &ensp;\r\n                    </div>\r\n                    <select\r\n                        value={TimeSlot}\r\n                        onChange={(e) => {\r\n                            setTimeSlot(e.target.value);\r\n                            // console.log(e.target.value);\r\n                            if (e.target.value === \"EarlyBird\") {\r\n                                setTime(early_bird);\r\n                                // console.log(\"early_bird\");\r\n                            }\r\n\r\n                            if (e.target.value === \"RiseAndShine\") {\r\n                                setTime(rise_shine);\r\n                                //console.log(\"RiseAndShine\");\r\n                            }\r\n\r\n                            if (e.target.value === \"MidDayBreak1\") {\r\n                                setTime(mid_day);\r\n                                // console.log(\"MidDayBreak\");\r\n                            }\r\n\r\n                            if (e.target.value === \"MidDayBreak2\") {\r\n                                setTime(mid_day_2);\r\n                                //console.log(\"MidDayBreak2\");\r\n                            }\r\n\r\n                            if (e.target.value === \"HappyHours\") {\r\n                                setTime(happy_hour);\r\n                                //console.log(\"HappyHours\");\r\n                            }\r\n\r\n                            if (e.target.value === \"NeverTooLate\") {\r\n                                setTime(never_too_late);\r\n                                //console.log(\"NeverTooLate\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        <option value=\"EarlyBird\">Early Bird</option>\r\n                        <option value=\"RiseAndShine\">Rise & Shine</option>\r\n                        <option value=\"MidDayBreak1\">Mid-Day Break</option>\r\n                        <option value=\"MidDayBreak2\">Mid-Day AfterNoon</option>\r\n                        <option value=\"HappyHours\">Happy Hour</option>\r\n                        <option value=\"NeverTooLate\">Never Too Late</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {/* {tableData} */}\r\n\r\n            <br></br>\r\n            {/* {tableData2} */}\r\n\r\n            {tableData2}\r\n\r\n            <ButtonSection />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ButtonSection = () => {\r\n    return (\r\n        <div className=\"schedular_slots\">\r\n            <div className=\"items_slots\">\r\n                <div className=\"item_slot1\">\r\n                    <div className=\"indicator\"></div>\r\n                    <h5>AVAILABLE</h5>\r\n                </div>\r\n                <div className=\"item_slot2\">\r\n                    <div className=\"indicator2\"></div>\r\n                    <h5>UNAVAILABLE</h5>{\" \"}\r\n                </div>\r\n                <div className=\"item_slot3\">\r\n                    <div className=\"indicator3\"></div>\r\n                    <h5>BOOKED SLOT</h5>{\" \"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserScheduler;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}