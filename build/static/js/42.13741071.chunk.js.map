{"version":3,"sources":["component/TrainWithFriends/index.js","assets/files/SignUp/Phone Icon.svg","assets/files/UserOnboard/PaymentAsset/Location Icon.svg","assets/files/UserOnboard/PaymentAsset/Shedule Icon.svg","assets/files/UserOnboard/PaymentAsset/Strength Icon.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["accordionData","title","session","session1","session2","price","price1","price2","AccordationService","useState","selected","setSelected","map","item","index","className","onClick","toggle","TrainWithFriends","friendName","friendEmail","friendPhone","friendsInput","setFriendsInput","handleChangeFriendInput","event","values","target","name","value","input","type","placeholder","onChange","src","Person","alt","Mail","Phone","id","Jenny","StrengthIcon","SheduleIcon","LocationIcon","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/42.13741071.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavBar } from \"../common/Navbar/NavBar\";\r\nimport \"./styles.scss\";\r\nimport Mail from \"../../assets/files/SignUp/Email Icon.svg\";\r\nimport Person from \"../../assets/files/SignUp/Person Icon.svg\";\r\nimport Phone from \"../../assets/files/SignUp/Phone Icon.svg\";\r\nimport Jenny from \"../../assets/files/TrainerDashboard/Message/Jenny.png\";\r\nimport StrengthIcon from \"../../assets/files/UserOnboard/PaymentAsset/Strength Icon.svg\";\r\nimport SheduleIcon from \"../../assets/files/UserOnboard/PaymentAsset/Shedule Icon.svg\";\r\nimport LocationIcon from \"../../assets/files/UserOnboard/PaymentAsset/Location Icon.svg\";\r\nimport ArrowHoverBlacked from \"../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport \"../HowItWork/TrainerMotto/styles.scss\";\r\nimport BlueHoverButton from \"../common/BlueArrowButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../common/Footer\";\r\n\r\nconst accordionData = [\r\n  {\r\n    title: \"Social Session\",\r\n    session: \"1 Session / 2 Session\",\r\n    session1: \"1 Session / 2 Session\",\r\n    session2: \"1 Session / 2 Session\",\r\n    price: \"$65.00 / Person\",\r\n    price1: \"$65.00 / Person\",\r\n    price2: \"$65.00 / Person\",\r\n  },\r\n  {\r\n    title: \"Class Session\",\r\n    session: \"Class (5-15 People)\",\r\n    price: \"$15.00 / Person\",\r\n  },\r\n  {\r\n    title: \"Cancellation Session\",\r\n    session: \"Cancellation Fee\",\r\n    price: \"Free upto 48 hours\",\r\n  },\r\n];\r\n\r\nconst TrainWithFriends = () => {\r\n  const [friendsInput, setFriendsInput] = useState([\r\n    {\r\n      friendName: \"\",\r\n      friendEmail: \"\",\r\n      friendPhone: \"\",\r\n    },\r\n  ]);\r\n  const handleChangeFriendInput = (index, event) => {\r\n    const values = [...friendsInput];\r\n    values[index][event.target.name] = event.target.value;\r\n    setFriendsInput(values);\r\n  };\r\n\r\n  const handleAddFriendFields = () => {\r\n    setFriendsInput([\r\n      ...friendsInput,\r\n      { friendName: \"\", friendEmail: \"\", friendPhone: \"\" },\r\n    ]);\r\n  };\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"TF_outter_container\">\r\n        <div className=\"container\">\r\n          <div className=\"TF_inner_container\">\r\n            <div className=\"TF_headers\">\r\n              <h2>Your session is booked! Start adding your friends</h2>\r\n              <p>\r\n                Invite as many friends as youâ€™d like, the friends that accept\r\n                will automatically be added in correspondence to session size!\r\n                Once they accept your session, your rate will automatically be\r\n                adjusted.\r\n              </p>\r\n            </div>\r\n            <div className=\"TF_wrapper\">\r\n              <div className=\"TF_inner_wrapper\">\r\n                <div className=\"TF_wrapper_left\">\r\n                  <div className=\"TF_wrapper_content\">\r\n                    <h2>Add Friends to Your Session</h2>\r\n                    <div className=\"TF_form\">\r\n                      <form>\r\n                        <h3>Enter your friend's details</h3>\r\n                        <div className=\"TF_inner_form\">\r\n                          {friendsInput.map((index, input) => {\r\n                            return (\r\n                              <div key={index} className=\"TF_wrapper_input\">\r\n                                <h4>Friend #{input}</h4>\r\n                                <div className=\"inner_input\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"name\"\r\n                                    value={input.friendName}\r\n                                    onChange={(event) =>\r\n                                      handleChangeFriendInput(index, event)\r\n                                    }\r\n                                  />\r\n                                  <img src={Person} alt=\"icon\" />\r\n                                </div>\r\n\r\n                                <div className=\"TF_input\">\r\n                                  <div className=\"inner_input\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Email\"\r\n                                      name=\"email\"\r\n                                      value={input.friendEmail}\r\n                                      onChange={(event) =>\r\n                                        handleChangeFriendInput(index, event)\r\n                                      }\r\n                                    />\r\n                                    <img src={Mail} alt=\"icon\" />\r\n\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Phone Number\"\r\n                                      name=\"phone\"\r\n                                      value={input.friendPhone}\r\n                                      onChange={(event) =>\r\n                                        handleChangeFriendInput(index, event)\r\n                                      }\r\n                                    />\r\n                                    <img src={Phone} alt=\"icon\" />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                          <div className=\"TF_remember_left\">\r\n                            <input\r\n                              className=\"TF_check\"\r\n                              type=\"checkbox\"\r\n                              value=\"lsRememberMe\"\r\n                              id=\"rememberMe\"\r\n                            />{\" \"}\r\n                            <label>\r\n                              I will pay for all the people that I will be\r\n                              inviting to my social session or class\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"TF_button\">\r\n                          <button>\r\n                            Invite Friends <ArrowHoverBlacked />{\" \"}\r\n                          </button>\r\n                          <h5 onClick={handleAddFriendFields}>\r\n                            + Add More Friends\r\n                          </h5>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"TF_wrapper_right\">\r\n                  <div className=\"TF_right\">\r\n                    <div className=\"TF_profile\">\r\n                      <img src={Jenny} alt=\"icon\" />\r\n                      <div className=\"TF_name\">\r\n                        <h2>John Doe</h2>\r\n                        <p>BOXING, STRENGTH & HIIT</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"TF_wrapper\">\r\n                      <div className=\"TF_details\">\r\n                        <h3>I WANT TO TRAIN IN</h3>\r\n                        <div className=\"TF_data_inner\">\r\n                          <img src={StrengthIcon} alt=\"icon\" />\r\n                          <h4>Strength & HIIT</h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TF_details\">\r\n                        <h3>I want to train on</h3>\r\n                        <div className=\"TF_data_inner\">\r\n                          <img src={SheduleIcon} alt=\"icon\" />\r\n                          <h4>February 16th, 2021 at 5:00 A.M.</h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"TF_details\">\r\n                        <h3>I WANT TO TRAIN AT</h3>\r\n                        <div className=\"TF_data_inner\">\r\n                          <img src={LocationIcon} alt=\"icon\" />\r\n                          <h4>The Trainerâ€™s Gym</h4>\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n\r\n                      <div className=\"TF_service_details\">\r\n                        <div className=\"TF_service_wrapper\">\r\n                          <div className=\"TF_service_left\">\r\n                            <div className=\"TF_service_header\">\r\n                              <div className=\"TF_inner_header\">\r\n                                <h3>Service Details</h3>\r\n                                <h3>Price / Hour</h3>\r\n                              </div>\r\n                              <AccordationService />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"TF_skip\">\r\n                <h2>Not right now? </h2>\r\n                <Link>\r\n                  CONTINUE TO ACCOUNT <BlueHoverButton />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nconst AccordationService = () => {\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const toggle = (index) => {\r\n    if (selected === index) {\r\n      return setSelected(null);\r\n    }\r\n\r\n    setSelected(index);\r\n  };\r\n  return (\r\n    <>\r\n      {accordionData.map((item, index) => (\r\n        <div className=\"TF_data_item\" key={index}>\r\n          <div className=\"TF_data_title\" onClick={() => toggle(index)}>\r\n            <h3>{item.title}</h3>\r\n            <div className={selected === index ? \"line show\" : \"line\"}></div>\r\n          </div>\r\n          <div className=\"TF_DT_grid\">\r\n            <div className=\"TF_DT_left\">\r\n              <div\r\n                className={\r\n                  selected === index ? \"TF_DT_contentshow\" : \"TF_DT_content\"\r\n                }\r\n              >\r\n                <p>{item.session}</p>\r\n                <p>{item.session1}</p>\r\n                <p>{item.session2}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"TF_DT_right\">\r\n              <div\r\n                className={\r\n                  selected === index ? \"TF_DT_contentshow\" : \"TF_DT_content\"\r\n                }\r\n              >\r\n                <p>{item.price}</p>\r\n                <p>{item.price1}</p>\r\n                <p>{item.price2}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainWithFriends;\r\n","export default __webpack_public_path__ + \"static/media/Phone Icon.f207d1b4.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.c8540d80.svg\";","export default __webpack_public_path__ + \"static/media/Shedule Icon.c434a0ee.svg\";","export default __webpack_public_path__ + \"static/media/Strength Icon.533b1e81.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}