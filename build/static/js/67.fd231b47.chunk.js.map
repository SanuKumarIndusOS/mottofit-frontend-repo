{"version":3,"sources":["component/TrainerSignUp/Banner/index.js","component/TrainerSignUp/Banner/useForm.js","component/TrainerSignUp/Banner/validation.js","assets/files/SignUp/Phone Icon.svg"],"names":["BannerTrainer","connect","dispatch","bindActionCreators","loginOrSignupAct","loginOrSignUp","submitForm","history","useHistory","useForm","validateInfo","data","handleFormSubmit","error","setData","dataSubmit","onChangeValue","e","persist","target","name","value","useState","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","apiError","setApiError","a","payload","email","password","cpassword","phoneNumber","signUpType","console","log","trainerSignUp","AuthApi","then","push","catch","message","className","onSubmit","placeholder","type","onChange","src","Person","alt","Mail","disableDropdown","countryCodeEditable","country","inputProps","Phone","Password","onClick","to","validate","setError","isSubmit","setSubmit","setdataSubmit","useEffect","Object","keys","length","preventDefault","errorData","validation","values","errors","test"],"mappings":"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","file":"static/js/67.fd231b47.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport Person from \"../../../assets/files/SignUp/Person Icon.svg\";\nimport Mail from \"../../../assets/files/SignUp/Email Icon.svg\";\nimport Phone from \"../../../assets/files/SignUp/Phone Icon.svg\";\nimport Password from \"../../../assets/files/SignUp/Password Icon.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\nimport BlueHoverButton from \"../../common/BlueArrowButton\";\nimport { connect } from \"react-redux\";\nimport { loginOrSignUp } from \"action/authAct\";\nimport { bindActionCreators } from \"redux\";\nimport { AuthApi } from \"service/apiVariables\";\nimport useForm from \"./useForm\";\nimport validateInfo from \"./validation\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nconst BannerTrainerFC = ({ loginOrSignupAct, submitForm }) => {\n    const history = useHistory();\n\n    const { data, handleFormSubmit, error, setData, dataSubmit } = useForm(\n        validateInfo,\n        submitForm\n    );\n\n    const onChangeValue = (e) => {\n        e.persist();\n        setData({ ...data, [e.target.name]: e.target.value });\n    };\n\n    const [passwordShown, setPasswordShown] = useState(false);\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\n    const [apiError, setApiError] = useState(\"\");\n    const showPassword = () => {\n        setPasswordShown(passwordShown ? false : true);\n    };\n    const showConfirmPassword = () => {\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\n    };\n\n    async function trainerSignUp() {\n        const payload = {\n            name: data.name,\n            email: data.email,\n            password: data.password,\n            cpassword: data.cpassword,\n            phoneNumber: data.phoneNumber,\n            signUpType: data.signUpType,\n        };\n        console.log(payload);\n\n        const { trainerSignUp } = AuthApi;\n\n        if (dataSubmit) {\n            loginOrSignupAct(trainerSignUp, payload)\n                .then(({ data }) => {\n                    history.push(\"/trainer/about\");\n                })\n                .catch((error) => {\n                    setApiError(error.message);\n                });\n        }\n    }\n\n    return (\n        <>\n            <div className=\"banner_container_trainer\">\n                <div className=\"wrapper_main container\">\n                    <div className=\"item_left\">\n                        <h2>Sign Up to be a part of the Motto Family</h2>\n                        <h6>\n                            Create an account to start the application process\n                            of becoming a Motto trainer in one of our live\n                            cities.\n                        </h6>\n                    </div>\n                    <div className=\"wrapper\">\n                        <div className=\"item_right\">\n                            <div className=\"inner_wrapper \">\n                                <div className=\"inner_items\">\n                                    <h3>Train with Motto!</h3>\n                                    <p>\n                                        Sign up to apply to become a Motto\n                                        Trainer\n                                    </p>\n                                    <div className=\"form_items_trainer\">\n                                        <form onSubmit={handleFormSubmit}>\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Full Name\"\n                                                    type=\"text\"\n                                                    value={data.name}\n                                                    name=\"name\"\n                                                    onChange={onChangeValue}\n                                                    className=\"fullname\"\n                                                />\n                                                <img src={Person} alt=\"icon\" />\n                                                {error.name && (\n                                                    <span>{error.name}</span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Email\"\n                                                    type=\"email\"\n                                                    value={data.email}\n                                                    name=\"email\"\n                                                    onChange={onChangeValue}\n                                                />\n                                                <img src={Mail} alt=\"icon\" />\n                                                {error.email && (\n                                                    <span>{error.email}</span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <ReactPhoneInput\n                                                    disableDropdown\n                                                    countryCodeEditable={false}\n                                                    country=\"us\"\n                                                    placeholder=\"Phone Number\"\n                                                    inputProps={{\n                                                        name: \"phoneNumber\",\n                                                    }}\n                                                    value={data.phoneNumber}\n                                                    name=\"phoneNumber\"\n                                                    onChange={(e) => {\n                                                        console.log(e);\n                                                        setData({\n                                                            ...data,\n                                                            phoneNumber: e,\n                                                        });\n                                                    }}\n                                                />\n\n                                                <img src={Phone} alt=\"icon\" />\n                                                {error.phoneNumber && (\n                                                    <span>\n                                                        {error.phoneNumber}\n                                                    </span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Create Password\"\n                                                    type={\n                                                        passwordShown\n                                                            ? \"text\"\n                                                            : \"password\"\n                                                    }\n                                                    value={data.password}\n                                                    name=\"password\"\n                                                    onChange={onChangeValue}\n                                                />\n                                                <img\n                                                    src={Password}\n                                                    alt=\"icon\"\n                                                    onClick={showPassword}\n                                                />\n                                                {error.password && (\n                                                    <span>\n                                                        {error.password}\n                                                    </span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Confirm Password\"\n                                                    type={\n                                                        confirmPasswordShown\n                                                            ? \"text\"\n                                                            : \"password\"\n                                                    }\n                                                    value={data.cpassword}\n                                                    name=\"cpassword\"\n                                                    onChange={onChangeValue}\n                                                />\n                                                <img\n                                                    src={Password}\n                                                    alt=\"icon\"\n                                                    onClick={\n                                                        showConfirmPassword\n                                                    }\n                                                />\n                                                {error.cpassword && (\n                                                    <span>\n                                                        {error.cpassword}\n                                                    </span>\n                                                )}\n                                            </div>\n                                            {apiError && (\n                                                <span className=\"errorMessage\">\n                                                    {apiError}\n                                                </span>\n                                            )}\n\n                                            <div className=\"submit_button\">\n                                                <button\n                                                    type=\"submit\"\n                                                    onClick={trainerSignUp()}\n                                                >\n                                                    <p>Continue to Account</p>\n                                                    <ArrowHoverBlacked />\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div className=\"login_items\">\n                                        <h4>Already have an account?</h4>\n\n                                        <Link to=\"/\">\n                                            Sign In now\n                                            <BlueHoverButton />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            loginOrSignupAct: loginOrSignUp,\n        },\n        dispatch\n    );\n};\n\nconst BannerTrainer = connect(null, mapDispatchToProps)(BannerTrainerFC);\n\nexport default BannerTrainer;\n","import { useState, useEffect } from \"react\";\n\nconst useForm = (validate) => {\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        cpassword: \"\",\n        signUpType: \"email\",\n    });\n\n    const [error, setError] = useState({});\n    const [isSubmit, setSubmit] = useState(false);\n    const [dataSubmit, setdataSubmit] = useState(false);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const errorData = validate(data);\n        setError(errorData);\n        setSubmit(true);\n    };\n\n    useEffect(() => {\n        if (Object.keys(error).length === 0 && isSubmit) {\n            setdataSubmit(true);\n        }\n    }, [error]);\n\n    return { data, handleFormSubmit, error, setData, dataSubmit };\n};\nexport default useForm;\n","const validation = (values) => {\n    let errors = {};\n\n    if (!values.name) {\n        errors.name = \"This field is required\";\n    } else if (values.name.length <= 1) {\n        errors.name = \"This field should contain more than one character\";\n    } else if (!/^[a-zA-Z]+(\\s[a-zA-Z]+)+$/gm.test(values.name)) {\n        errors.name = \"Enter full name\";\n    } else if (!/^[a-zA-Z]+\\s[a-zA-Z]+\\s?$/g.test(values.name)) {\n        errors.name = \" Enter a valid name\";\n    }\n\n    if (!values.email) {\n        errors.email = \"   This field is required\";\n    } else if (\n        !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(\n            values.email\n        )\n    ) {\n        errors.email = \" Please enter a valid email address\";\n    } else if (values.email.length < 8) {\n        errors.email = \" This field should contain greater then 8 charater\";\n    }\n\n    if (!values.phoneNumber) {\n        errors.phoneNumber = \"   This field is required\";\n    } else if (!/^[0-9]*$/i.test(values.phoneNumber)) {\n        errors.phoneNumber = \"Invalid Number\";\n    } else if (values.phoneNumber.length < 11) {\n        errors.phoneNumber = \"Enter a valid number\";\n    } else if (values.phoneNumber.length >= 12) {\n        errors.phoneNumber = \" This field exceed max length\";\n    }\n\n    if (!values.password) {\n        errors.password = \"This field is required\";\n    } else if (values.password.length < 6) {\n        errors.password = \" Password should be more then 6 Charcters\";\n    } else if (values.password.length > 8) {\n        errors.password = \" This field exceed max length\";\n    } else if (\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\n            values.password\n        )\n    ) {\n        errors.password =\n            \" Password should be 8 characters long and contain a Capital letter, Number & Special character\";\n    }\n\n    if (!values.cpassword) {\n        errors.cpassword = \"This field is required\";\n    } else if (values.cpassword.length < 6) {\n        errors.cpassword = \" Password should be more then 6 Charcters\";\n    } else if (values.cpassword.length > 8) {\n        errors.cpassword = \" This field exceed max length\";\n    } else if (\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\n            values.cpassword\n        )\n    ) {\n        errors.cpassword =\n            \" Password should be 8 characters long and contain a Capital letter, Number & Special character\";\n    } else if (values.password !== values.cpassword) {\n        errors.cpassword = \"  The passwords do not match\";\n    }\n\n    return errors;\n};\n\nexport default validation;\n","export default __webpack_public_path__ + \"static/media/Phone Icon.595b1737.svg\";"],"sourceRoot":""}