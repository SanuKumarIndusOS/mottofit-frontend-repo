{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerMyProfile/MyProfile.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Location Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Image 1.svg","assets/files/SVG/Youtube.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ImageReander","useState","image","setImage","previewImage","setPreviewTmage","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","className","src","style","objectFit","width","height","onClick","event","preventDefault","current","click","ImageBG","alt","type","ref","accept","onChange","file","target","files","substr","MyProfile","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","motto","trainingProcessDescription","trainingLocation","serviceableLocation","location","websiteLink","instaHandle","youtubeChannel","trainerData","setTrainerData","imageFields","setImageFields","certificate","year","remove","inputCertificatesFields","setInputCertificatesFields","handleChangeCertificateInput","index","values","name","value","handleInputChange","e","trainingType","tempData","label","isMultiSelect","Array","isArray","includes","filter","then","console","log","trainingProcess","myMotto","preferedTrainingMode","youtubeLink","instagramProfile","currentExperience","certification","servicableLocation","workLocation","storeData","map","tempCertification","certfiedYear","certificateName","catch","err","onSubmit","placeholder","input","inputCertificatesField","Location","Web","Instagram","Youtube","headers","Authorization","localStorage","getItem","axios","get","applicationStatus","res","payload","updateTrainerAvailabilityApi","TrainerApi","body","api","message","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/86.64ddd9dc.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\n// import Select from \"react-select\";\r\n\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport ImageBG from \"assets/files/SVG/Image 1.svg\";\r\nimport Instagram from \"assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"assets/files/SVG/Web Icon.svg\";\r\nimport Youtube from \"assets/files/SVG/Youtube.svg\";\r\nimport Location from \"assets/files/SVG/Location Icon.svg\";\r\nimport { getTrainerDetails, updateTrainerDetails } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport axios from \"axios\";\r\n\r\nconst MyProfileFC = ({\r\n    getTrainerDetails,\r\n    details,\r\n    updateTrainerDetails,\r\n    // trainerPersonalData,\r\n}) => {\r\n    // const [selectedOption, setSelectedOption] = useState([]);\r\n\r\n    const [trainerData, setTrainerData] = useState({\r\n        motto: \"\",\r\n        trainingProcessDescription: \"\",\r\n        trainingLocation: [],\r\n        serviceableLocation: \"\",\r\n        location: \"\",\r\n        websiteLink: \"\",\r\n        instaHandle: \"\",\r\n        youtubeChannel: \"\",\r\n    });\r\n\r\n    //Image\r\n    const [imageFields, setImageFields] = useState([\r\n        {\r\n            image: \"\",\r\n        },\r\n    ]);\r\n    const handleAddFields = () => {\r\n        setImageFields([...imageFields, { image: \"\" }]);\r\n    };\r\n\r\n    // input certification\r\n    const [inputCertificatesFields, setInputCertificatesFields] = useState([\r\n        {\r\n            certificate: \"\",\r\n            year: \"\",\r\n            remove: \"\",\r\n        },\r\n    ]);\r\n    const handleAddCertificateFields = () => {\r\n        setInputCertificatesFields([\r\n            ...inputCertificatesFields,\r\n            { certificate: \"\", year: \"\", remove: \"\" },\r\n        ]);\r\n    };\r\n    const handleChangeCertificateInput = (index, event) => {\r\n        const values = [...inputCertificatesFields];\r\n        values[index][event.target.name] = event.target.value;\r\n        setInputCertificatesFields(values);\r\n    };\r\n\r\n    const handleInputChange = (e, trainingType) => {\r\n        e.preventDefault && e.preventDefault();\r\n\r\n        const { name, value, label } = e.target || e || {};\r\n\r\n        const tempData = {\r\n            ...trainerData,\r\n        };\r\n\r\n        // if(label) value = {label , name , value};\r\n\r\n        const isMultiSelect = Array.isArray(e);\r\n\r\n        if (name === \"trainingLocation\") {\r\n            if (tempData[\"trainingLocation\"].includes(trainingType)) {\r\n                tempData[\"trainingLocation\"] = tempData[\r\n                    \"trainingLocation\"\r\n                ].filter((location) => location !== trainingType);\r\n            } else {\r\n                tempData[\"trainingLocation\"] = [\r\n                    ...tempData[\"trainingLocation\"],\r\n                    trainingType,\r\n                ];\r\n            }\r\n        } else {\r\n            tempData[`${isMultiSelect ? e[0].name : name}`] = isMultiSelect\r\n                ? e\r\n                : value;\r\n        }\r\n\r\n        setTrainerData(tempData);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"token\"),\r\n        };\r\n\r\n        axios\r\n            .get(\r\n                \"http://doodlebluelive.com:2307/v1/trainer\",\r\n                { applicationStatus: \"setupComplete\" },\r\n                {\r\n                    headers: headers,\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n            });\r\n        const {\r\n            instaHandle,\r\n            location,\r\n            motto,\r\n            serviceableLocation,\r\n            trainingLocation,\r\n            trainingProcessDescription,\r\n            websiteLink,\r\n            youtubeChannel,\r\n        } = trainerData;\r\n\r\n        let payload = {\r\n            trainingProcess: trainingProcessDescription,\r\n            myMotto: motto,\r\n            preferedTrainingMode: trainingLocation,\r\n            websiteLink,\r\n            youtubeLink: youtubeChannel,\r\n            instagramProfile: instaHandle,\r\n            currentExperience: { workLocation: location },\r\n            certification: inputCertificatesFields?.map(\r\n                ({ certificate, year }) => ({\r\n                    certificateName: \"\",\r\n                    certfiedYear: year,\r\n                    certification: certificate,\r\n                })\r\n            ),\r\n            servicableLocation: serviceableLocation?.map(({ value }) => value),\r\n        };\r\n        // updateTrainerDetails();\r\n\r\n        console.log(payload, \"payload\");\r\n\r\n        const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n        updateTrainerAvailabilityApi.body = payload;\r\n\r\n        api({ ...updateTrainerAvailabilityApi })\r\n            .then(({ data, message }) => {\r\n                console.log(data, message);\r\n            })\r\n            .catch((err) => console.log(err));\r\n\r\n        // history.push(\"/trainers/dashboard/session\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTrainerDetails()\r\n            .then((data) => {\r\n                console.log(data, \"api data\");\r\n\r\n                const {\r\n                    trainingProcess = \"\",\r\n                    myMotto = \"\",\r\n                    preferedTrainingMode = \"\",\r\n                    websiteLink = \"\",\r\n                    youtubeLink = \"\",\r\n                    instagramProfile = \"\",\r\n                    currentExperience = {},\r\n                    certification = \"\",\r\n                    servicableLocation = [],\r\n                } = data || {};\r\n\r\n                const { workLocation = \"\" } = currentExperience || {};\r\n\r\n                const storeData = {\r\n                    details: {\r\n                        motto: myMotto,\r\n                        trainingProcessDescription: trainingProcess,\r\n                        trainingLocation: preferedTrainingMode,\r\n                        serviceableLocation: servicableLocation?.map(\r\n                            (location) => ({\r\n                                label: location,\r\n                                value: location,\r\n                                name: \"serviceableLocation\",\r\n                            })\r\n                        ),\r\n                        location: workLocation,\r\n                        websiteLink,\r\n                        instaHandle: instagramProfile,\r\n                        youtubeChannel: youtubeLink,\r\n                        ...details,\r\n                    },\r\n                };\r\n\r\n                const tempCertification = certification?.map(\r\n                    ({ certfiedYear, certificateName }) => ({\r\n                        certificate: certificateName,\r\n                        year: certfiedYear,\r\n                    })\r\n                );\r\n\r\n                setInputCertificatesFields(tempCertification);\r\n                setTrainerData(storeData.details);\r\n                updateTrainerDetails(storeData);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"outter_tp_container\">\r\n                <div className=\"container\">\r\n                    <div className=\"inner_trinerpro_container\">\r\n                        <div className=\"tp_wrapper\">\r\n                            <div className=\"tp_header\">\r\n                                <h2>My Profile</h2>\r\n                            </div>\r\n                            <div className=\"tp_outter_form container\">\r\n                                <form onSubmit={(e) => e.preventDefault()}>\r\n                                    <div className=\"tp_inner_form\">\r\n                                        <div className=\"tp_item1\">\r\n                                            <label>What’s your Motto?</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                name=\"comment\"\r\n                                                placeholder=\"\"\r\n                                                onChange={handleInputChange}\r\n                                                value={trainerData.motto}\r\n                                                name=\"motto\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"tp_item1\">\r\n                                            <label>\r\n                                                Tell us about you and describe\r\n                                                your training process\r\n                                            </label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                placeholder=\"\"\r\n                                                onChange={handleInputChange}\r\n                                                value={\r\n                                                    trainerData.trainingProcessDescription\r\n                                                }\r\n                                                name=\"trainingProcessDescription\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"tp_item1\">\r\n                                            <label>\r\n                                                Throw in some photos showcasing\r\n                                                you & your skills\r\n                                            </label>\r\n                                            <div className=\"tp_image_render\">\r\n                                                {imageFields.map(\r\n                                                    (index, input) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={index}\r\n                                                                className=\"render_image\"\r\n                                                            >\r\n                                                                <ImageReander\r\n                                                                    value={\r\n                                                                        input.image\r\n                                                                    }\r\n                                                                />\r\n                                                                <ImageReander\r\n                                                                    value={\r\n                                                                        input.image\r\n                                                                    }\r\n                                                                />\r\n                                                                <ImageReander\r\n                                                                    value={\r\n                                                                        input.image\r\n                                                                    }\r\n                                                                />\r\n                                                                <ImageReander\r\n                                                                    value={\r\n                                                                        input.image\r\n                                                                    }\r\n                                                                />\r\n                                                                <ImageReander\r\n                                                                    value={\r\n                                                                        input.image\r\n                                                                    }\r\n                                                                />\r\n                                                            </div>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                                <h5\r\n                                                    onClick={() =>\r\n                                                        handleAddFields()\r\n                                                    }\r\n                                                >\r\n                                                    + Add More Image's\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"tp_item_certi\">\r\n                                            <label>\r\n                                                Throw in some photos showcasing\r\n                                                you & your skills\r\n                                            </label>\r\n                                            <div className=\"tp_certificates\">\r\n                                                {inputCertificatesFields?.map(\r\n                                                    (\r\n                                                        inputCertificatesField,\r\n                                                        index\r\n                                                    ) => (\r\n                                                        <div\r\n                                                            className=\"tp_input_certificate\"\r\n                                                            key={index}\r\n                                                        >\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Display Certification API \"\r\n                                                                value={\r\n                                                                    inputCertificatesField.certificate\r\n                                                                }\r\n                                                                name=\"certificate\"\r\n                                                                onChange={(\r\n                                                                    event\r\n                                                                ) =>\r\n                                                                    handleChangeCertificateInput(\r\n                                                                        index,\r\n                                                                        event\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Display Year API\"\r\n                                                                value={\r\n                                                                    inputCertificatesField.year\r\n                                                                }\r\n                                                                name=\"year\"\r\n                                                                onChange={(\r\n                                                                    event\r\n                                                                ) =>\r\n                                                                    handleChangeCertificateInput(\r\n                                                                        index,\r\n                                                                        event\r\n                                                                    )\r\n                                                                }\r\n                                                            />\r\n                                                            <button\r\n                                                                name=\"remove\"\r\n                                                                value={\r\n                                                                    inputCertificatesField.remove\r\n                                                                }\r\n                                                            >\r\n                                                                Remove{\" \"}\r\n                                                                <BlueHoverButton />\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    )\r\n                                                )}\r\n                                                <h5\r\n                                                    onClick={\r\n                                                        handleAddCertificateFields\r\n                                                    }\r\n                                                >\r\n                                                    + Add Certification\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"setup_card5\">\r\n                                            <div className=\"setupcontent_wrapper\">\r\n                                                <div className=\"setup_item\">\r\n                                                    <label>\r\n                                                        Where will you be\r\n                                                        training?\r\n                                                    </label>\r\n                                                    <div className=\"inputs_platform\">\r\n                                                        <button\r\n                                                            onClick={(e) =>\r\n                                                                handleInputChange(\r\n                                                                    e,\r\n                                                                    \"Online\"\r\n                                                                )\r\n                                                            }\r\n                                                            className={`${\r\n                                                                trainerData?.trainingLocation?.includes(\r\n                                                                    \"Online\"\r\n                                                                )\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`}\r\n                                                            name=\"trainingLocation\"\r\n                                                        >\r\n                                                            Virtual\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={(e) =>\r\n                                                                handleInputChange(\r\n                                                                    e,\r\n                                                                    \"inperson\"\r\n                                                                )\r\n                                                            }\r\n                                                            className={`${\r\n                                                                trainerData?.trainingLocation?.includes(\r\n                                                                    \"inperson\"\r\n                                                                )\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`}\r\n                                                            name=\"trainingLocation\"\r\n                                                        >\r\n                                                            In Person\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={(e) =>\r\n                                                                handleInputChange(\r\n                                                                    e,\r\n                                                                    \"outdoors\"\r\n                                                                )\r\n                                                            }\r\n                                                            className={`${\r\n                                                                trainerData?.trainingLocation?.includes(\r\n                                                                    \"outdoors\"\r\n                                                                )\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"\r\n                                                            }`}\r\n                                                            name=\"trainingLocation\"\r\n                                                        >\r\n                                                            Outdoors\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"setup_item1\">\r\n                                                    <h6>\r\n                                                        Which city will you\r\n                                                        train in?\r\n                                                    </h6>\r\n                                                    <div className=\"inputs_platform\">\r\n                                                        <div className=\"iconwrapper\">\r\n                                                            {/* <Select\r\n                                // defaultValue={trainingVenue}\r\n                                value={trainerData.serviceableLocation}\r\n                                onChange={handleInputChange}\r\n                                options={options}\r\n                                isMulti\r\n                                placeholder=\"List all areas that you will service\"\r\n                                // className=\"session_location_select\"\r\n                                className=\"w-100\"\r\n                              /> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"setup_item1\">\r\n                                                    <h6>\r\n                                                        Your preferred training\r\n                                                        location\r\n                                                    </h6>\r\n                                                    <div className=\"inputs_platform\">\r\n                                                        <div className=\"iconwrapper\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Select your Location\"\r\n                                                                onChange={\r\n                                                                    handleInputChange\r\n                                                                }\r\n                                                                value={\r\n                                                                    trainerData.location\r\n                                                                }\r\n                                                                name=\"location\"\r\n                                                            />\r\n                                                            <img\r\n                                                                src={Location}\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"setup_item1\">\r\n                                                    <h6>Website</h6>\r\n                                                    <div className=\"inputs_platform\">\r\n                                                        <div className=\"iconwrapper\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Add your Web Link\"\r\n                                                                onChange={\r\n                                                                    handleInputChange\r\n                                                                }\r\n                                                                value={\r\n                                                                    trainerData.websiteLink\r\n                                                                }\r\n                                                                name=\"websiteLink\"\r\n                                                            />\r\n                                                            <img\r\n                                                                src={Web}\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"setup_item1\">\r\n                                                    <h6>Instagram</h6>\r\n                                                    <div className=\"inputs_platform\">\r\n                                                        <div className=\"iconwrapper\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Add your Instagram Handle\"\r\n                                                                onChange={\r\n                                                                    handleInputChange\r\n                                                                }\r\n                                                                value={\r\n                                                                    trainerData.instaHandle\r\n                                                                }\r\n                                                                name=\"instaHandle\"\r\n                                                            />\r\n                                                            <img\r\n                                                                src={Instagram}\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"setup_item1\">\r\n                                                    <h6>Youtube</h6>\r\n                                                    <div className=\"inputs_platform\">\r\n                                                        <div className=\"iconwrapper\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Add your Youtube Channel\"\r\n                                                                onChange={\r\n                                                                    handleInputChange\r\n                                                                }\r\n                                                                value={\r\n                                                                    trainerData.youtubeChannel\r\n                                                                }\r\n                                                                name=\"youtubeChannel\"\r\n                                                            />\r\n                                                            <img\r\n                                                                src={Youtube}\r\n                                                                alt=\"icon\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tp_button_save\">\r\n                                        <button onClick={handleSubmit}>\r\n                                            Save changes <BlueHoverButton />\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst ImageReander = () => {\r\n    const [image, setImage] = useState();\r\n    const [previewImage, setPreviewTmage] = useState();\r\n    const fileInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewTmage(reader.result);\r\n            };\r\n            reader.readAsDataURL(image);\r\n        } else {\r\n            setPreviewTmage(null);\r\n        }\r\n    }, [image]);\r\n    return (\r\n        <>\r\n            <div className=\"renderImage\">\r\n                {previewImage ? (\r\n                    <img\r\n                        src={previewImage}\r\n                        style={{\r\n                            objectFit: \"cover\",\r\n                            width: \"180px\",\r\n                            height: \"180px\",\r\n                        }}\r\n                        onClick={() => {\r\n                            setPreviewTmage(null);\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <div className=\"combin_profile\">\r\n                        <button\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                fileInputRef.current.click();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                // src={Profile}\r\n                                src={ImageBG}\r\n                                alt=\"icon\"\r\n                                style={{\r\n                                    objectFit: \"cover\",\r\n                                    width: \"180px\",\r\n                                    height: \"180px\",\r\n                                }}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    accept=\"image/*\"\r\n                    onChange={(event) => {\r\n                        const file = event.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                            setImage(file);\r\n                        } else {\r\n                            setImage(null);\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst MyProfile = connect(mapStateToProps, mapDispatchToProps)(MyProfileFC);\r\n\r\nexport default MyProfile;\r\n","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Image 1.8f33ee1e.svg\";","export default __webpack_public_path__ + \"static/media/Youtube.1eb126cd.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}