{"version":3,"sources":["component/FindYourTrainer/TrainerOutsideTime/index.js","helpers/baseURL.js"],"names":["HeadingTrainer","otherRef","className","ref","TrainerCardOutside","connect","state","sessionData","userReducer","dispatch","bindActionCreators","updateUserDetails","props","useState","outSideData","setOutSideData","useEffect","content","handleClick","data","isReadMore","reduxData","selectedTrainerData","trainerId","trainerData","history","push","pathname","Object","keys","map","index","imgdb","COMMON_URL","areaOfExpertise","toString","src","style","objectFit","onError","e","target","onerror","textTransform","firstName","lastName","description","onClick","backgroundColor","oneOnOnePricing","inPersonAtClientLocation","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL"],"mappings":"iNAuHMA,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,mBAAmBC,IAAKF,EAAvC,SACE,+DAyCJG,EAAqBC,aAbH,SAACC,GAAD,MAAY,CAClCC,YAAaD,EAAME,YAAYD,gBAGN,SAACE,GAC1B,OAAOC,YACL,CACEC,uCAEFF,KAIuBJ,EA3JE,SAACO,GAC5B,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRD,EAAeH,EAAMK,WACpB,IAEHD,qBAAU,WACRD,EAAeH,EAAMK,WACpB,CAACL,EAAMK,UAEV,IAAMC,EAAc,SAACC,GAA8B,IAAxBC,EAAuB,wDAC5CC,EAAY,CACdC,oBAAqB,CACnBC,UAAWT,EAAYK,GAAZ,GACXK,YAAaV,EAAYK,KAG7BP,EAAMD,kBAAkBU,GAEnBD,EAKHK,UAAQC,KAAK,CACXC,SAAS,oBAAD,OAAsBb,EAAYK,GAAZ,MALhCM,UAAQC,KAAK,CACXC,SAAU,qBAShB,OACE,mCACE,sBAAKzB,UAAU,YAAf,UACE,cAACF,EAAD,CAAgBC,SAAUW,EAAMX,WAEhC,qBAAKC,UAAU,MAAf,SACG0B,OAAOC,KAAKf,GAAagB,KAAI,SAACX,EAAMY,GAAW,IAAD,cACzCC,EAAK,UAAMC,cAAN,OAAmBnB,EAAYK,GAAZ,gBACtBe,EAAe,UAAGpB,EACtBK,UADmB,iBAAG,EAErBe,uBAFkB,aAAG,EAEJC,WACpB,OACE,sBAAKjC,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBACEA,UAAU,wBACVkC,IAAKJ,EACLK,MAAO,CAAEC,UAAW,SACpBC,QAAS,SAACC,GACRA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOL,IACP,6EAIN,qBAAKlC,UAAU,eAAf,SACE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,sDAMR,sBAAKA,UAAU,YAAf,UACE,qBAAImC,MAAO,CAAEM,cAAe,cAA5B,oBACG7B,EAAYK,UADf,aACG,EAAmByB,UADtB,iBAEG9B,EAAYK,UAFf,aAEG,EAAmB0B,YAEtB,6BAAKX,IACL,wCACGpB,EAAYK,UADf,aACG,EAAmB2B,YAEpB,wBAAQC,QAAS,kBAAM7B,EAAYC,GAAM,IAAzC,6BAKJ,qBAAKjB,UAAU,cAAf,SACE,yBACEmC,MAAO,CACLW,gBAAiB,WAEnBD,QAAS,kBAAM7B,EAAYC,IAJ7B,2BAOE,cAAC,UAAD,IACA,qCAEE,2CAEIL,EAAYK,UAFhB,iBAEI,EAAmB8B,uBAFvB,aAEI,EACIC,yBACJ,IAJJ,iBA/CmBnB,gBAqH1B3B,a,iCC1Kf,yOAMO,IAAI6B,EAAa,iCACbkB,EAAgB,iCAChBC,EAAc,iCACdC,EAAmB,GACnBC,EAAc,kC","file":"static/js/66.73174b69.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { history } from \"helpers\";\r\nimport BlackCircleButton from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { COMMON_URL } from \"helpers/baseURL\";\r\nimport \"./styleCard.scss\";\r\nimport { updateUserDetails } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst TrainerCardOutsideFC = (props) => {\r\n  const [outSideData, setOutSideData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOutSideData(props.content);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOutSideData(props.content);\r\n  }, [props.content]);\r\n\r\n  const handleClick = (data, isReadMore = false) => {\r\n    let reduxData = {\r\n      selectedTrainerData: {\r\n        trainerId: outSideData[data][\"id\"],\r\n        trainerData: outSideData[data],\r\n      },\r\n    };\r\n    props.updateUserDetails(reduxData);\r\n\r\n    if (!isReadMore) {\r\n      history.push({\r\n        pathname: \"/user/scheduler\",\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: `/trainer/profile/${outSideData[data][\"id\"]}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <HeadingTrainer otherRef={props.otherRef} />\r\n\r\n        <div className=\"row\">\r\n          {Object.keys(outSideData).map((data, index) => {\r\n            let imgdb = `${COMMON_URL}${outSideData[data][\"profilePicture\"]}`;\r\n            const areaOfExpertise = outSideData[\r\n              data\r\n            ]?.areaOfExpertise?.toString();\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"inner_card\">\r\n                  <img\r\n                    className=\"card-img-top card-img\"\r\n                    src={imgdb}\r\n                    style={{ objectFit: \"cover\" }}\r\n                    onError={(e) => {\r\n                      e.target.onerror = null;\r\n                      e.target.src =\r\n                        \"https://qphs.fs.quoracdn.net/main-qimg-2b21b9dd05c757fe30231fac65b504dd\";\r\n                    }}\r\n                  />\r\n\r\n                  <div className=\"overlay_card\">\r\n                    <div className=\"content_card\">\r\n                      <div className=\"circle_hover_card\">\r\n                        <p>check me out</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <h3 style={{ textTransform: \"capitalize\" }}>\r\n                    {outSideData[data]?.firstName}&nbsp;\r\n                    {outSideData[data]?.lastName}\r\n                  </h3>\r\n                  <h6>{areaOfExpertise}</h6>\r\n                  <p>\r\n                    {outSideData[data]?.description}\r\n\r\n                    <button onClick={() => handleClick(data, true)}>\r\n                      Read More\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-button\">\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"#53BFD2\",\r\n                    }}\r\n                    onClick={() => handleClick(data)}\r\n                  >\r\n                    book a session\r\n                    <BlackCircleButton />\r\n                    <p>\r\n                      from\r\n                      <span>\r\n                        {\r\n                          outSideData[data]?.oneOnOnePricing\r\n                            ?.inPersonAtClientLocation\r\n                        }{\" \"}\r\n                        $\r\n                      </span>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeadingTrainer = ({ otherRef }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"wrapper_headings\" ref={otherRef}>\r\n          <h2>just outside your time</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ReadMore = ({ children, maxChar = 110 }) => {\r\n  const text = children;\r\n  const [isTruncated, setIsTruncated] = useState(true);\r\n\r\n  const resultString = isTruncated ? text.slice(0, maxChar) : text;\r\n  function toggleIsTruncated() {\r\n    setIsTruncated(!isTruncated);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p className=\"has-text-left\">\r\n        {resultString}\r\n        <span onClick={toggleIsTruncated} className=\"readmore\">\r\n          {isTruncated ? \"Read more\" : \"Read less\"}\r\n        </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sessionData: state.userReducer.sessionData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateUserDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerCardOutside = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainerCardOutsideFC);\r\n\r\nexport default TrainerCardOutside;\r\n","// export var COMMON_URL = \"https://apis.bookmotto.com/user\";\r\n// export var MESSAGING_URL = \"https://apis.bookmotto.com/messaging\";\r\n// export var SESSION_URL = \"https://apis.bookmotto.com/session\";\r\n// export var NOTIFICATION_URL = \"\";\r\n// export var PAYMENT_URL = \"https://apis.bookmotto.com/payments\";\r\n\r\nexport var COMMON_URL = \"http://doodlebluelive.com:2307\";\r\nexport var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\r\nexport var SESSION_URL = \"http://doodlebluelive.com:2337\";\r\nexport var NOTIFICATION_URL = \"\";\r\nexport var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\r\n"],"sourceRoot":""}