{"version":3,"sources":["action/adminAct.js"],"names":["changeApproval","body","id","dispatch","getState","api","Promise","resolve","reject","TrainerApi","then","data","catch","err","getTrainerDetail","isAdmin","getAllTrainerLists","page","getAllUsersLists","fetchTrainersLists"],"mappings":"mXAGaA,EACT,SAACC,EAAMC,GAAP,OACA,SAACC,EAAUC,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAQR,EAAmBS,aAAnBT,eACRA,EAAeE,GAAKA,EACpBG,EAAI,2BAAKL,GAAN,IAAsBC,UACpBS,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAQI,MAEXC,OAAM,SAACC,GACJL,EAAOK,WAMdC,EACT,SAACZ,GAAD,IAAKa,IAAL,gEACA,SAACZ,EAAUC,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAQM,EAAqBL,aAArBK,iBACRA,EAAiBZ,GAAKA,EACtBG,EAAI,2BAAKS,GAAN,IAAwBC,aACtBL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAQI,MAEXC,OAAM,SAACC,GACJL,EAAOK,WAMdG,EACT,SAACC,GAAD,IAAOF,IAAP,gEACA,SAACZ,EAAUC,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAQQ,EAAuBP,aAAvBO,mBACRA,EAAmBC,KAAOA,EAC1BZ,EAAI,2BAAKW,GAAN,IAA0BD,aACxBL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAQI,MAEXC,OAAM,SAACC,GACJL,EAAOK,WAMdK,EACT,SAACD,GAAD,IAAOF,IAAP,gEACA,SAACZ,EAAUC,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAQU,EAAqBT,aAArBS,iBACRA,EAAiBD,KAAOA,EACxBZ,EAAI,2BAAKa,GAAN,IAAwBH,aACtBL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAQI,MAEXC,OAAM,SAACC,GACJL,EAAOK,WAMdM,EACT,SAACF,GAAD,IAAOF,IAAP,gEACA,SAACZ,EAAUC,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAQW,EAAuBV,aAAvBU,mBACRA,EAAmBF,KAAOA,EAC1BZ,EAAI,2BAAKc,GAAN,IAA0BJ,aACxBL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLJ,EAAQI,MAEXC,OAAM,SAACC,GACJL,EAAOK","file":"static/js/133.f0fdadb7.chunk.js","sourcesContent":["import { TrainerApi } from \"service/apiVariables\";\r\n\r\n//change Approval\r\nexport const changeApproval =\r\n    (body, id) =>\r\n    (dispatch, getState, { api }) => {\r\n        return new Promise((resolve, reject) => {\r\n            const { changeApproval } = TrainerApi;\r\n            changeApproval.id = id;\r\n            api({ ...changeApproval, body })\r\n                .then(({ data }) => {\r\n                    resolve(data);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    };\r\n\r\n//get Trainer Detail\r\nexport const getTrainerDetail =\r\n    (id, isAdmin = true) =>\r\n    (dispatch, getState, { api }) => {\r\n        return new Promise((resolve, reject) => {\r\n            const { getTrainerDetail } = TrainerApi;\r\n            getTrainerDetail.id = id;\r\n            api({ ...getTrainerDetail, isAdmin })\r\n                .then(({ data }) => {\r\n                    resolve(data);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    };\r\n\r\n//get All Trainer Lists\r\nexport const getAllTrainerLists =\r\n    (page, isAdmin = true) =>\r\n    (dispatch, getState, { api }) => {\r\n        return new Promise((resolve, reject) => {\r\n            const { getAllTrainerLists } = TrainerApi;\r\n            getAllTrainerLists.page = page;\r\n            api({ ...getAllTrainerLists, isAdmin })\r\n                .then(({ data }) => {\r\n                    resolve(data);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    };\r\n\r\n//get All Users Lists\r\nexport const getAllUsersLists =\r\n    (page, isAdmin = true) =>\r\n    (dispatch, getState, { api }) => {\r\n        return new Promise((resolve, reject) => {\r\n            const { getAllUsersLists } = TrainerApi;\r\n            getAllUsersLists.page = page;\r\n            api({ ...getAllUsersLists, isAdmin })\r\n                .then(({ data }) => {\r\n                    resolve(data);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    };\r\n\r\n//fetct Trainers Lists\r\nexport const fetchTrainersLists =\r\n    (page, isAdmin = true) =>\r\n    (dispatch, getState, { api }) => {\r\n        return new Promise((resolve, reject) => {\r\n            const { fetchTrainersLists } = TrainerApi;\r\n            fetchTrainersLists.page = page;\r\n            api({ ...fetchTrainersLists, isAdmin })\r\n                .then(({ data }) => {\r\n                    resolve(data);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                });\r\n        });\r\n    };\r\n"],"sourceRoot":""}