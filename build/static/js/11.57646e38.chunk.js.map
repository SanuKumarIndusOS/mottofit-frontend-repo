{"version":3,"sources":["component/common/YearDropdown/index.js","component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/PaymentSectionSetup.js","component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/TrainerSetup.js","assets/files/SVG/Arrow Back.svg","assets/files/SVG/Drop Down 4.svg","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","assets/files/SVG/Image 1.svg","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/colors/cyan.js","component/common/NormalMultiSelect/index.js"],"names":["YearDropDown","label","name","restProps","options","getFormattedYears","map","year","toString","value","placeholder","arrow","info","PaymentSectionSetup","connect","dispatch","bindActionCreators","fileUploadApi","fileUpload","trainerSetupData","setTrainerSetupData","showSaveBtn","className","identityNameUS","onChange","e","target","list","index","type","governmentIdNumber","image","files","undefined","fd","FormData","append","then","data","governmentId","urlPath","uploadAreaId","src","Tick","alt","href","insuranceNameUS","coverAmount","insurance","uploadArea","CyanRadio","withStyles","root","color","cyan","checked","props","TrainerSetup","trainerDetail","getStripeAccLink","useState","motto","training_process","facility_details","neighborhood_list","haveAFacility","willingToTravel","instagram","website","serviceableLocation","certificateFields","certificate","trainingLocation","zoom_link","imagesList","setImageList","checkButtonVirtual","setCheckButtonVirtual","checkButtonInPerson","setCheckButtonInPerson","isLoading","setLoading","agreed","setAgreed","trainerdetailData","setTrainerDetails","useEffect","res","images","length","identityInfromation","insuranceInformation","myMotto","trainingProcess","certification","instagramProfile","websiteLink","trainingFacility","trainingFacilityLocation","virtualMeetingLink","servicableLocation","identityName","identityNo","insuranceName","insuranceAmount","identity","handleChangeCertificateInput","event","values","open","setOpen","getStripeURL","url","window","location","catch","ArrowBack","to","onClick","prev","maxlength","accept","id","CloseIcon","handleRemoveImage","ImageBG","handleUploadArea","push","field","Fragment","handleChange","splice","handleRemoveCertificateFields","Instagram","Web","payload","filter","x","applicationStatus","firstName","lastName","areaOfExpertise","description","oneOnOnePricing","socialSessionPricing","classSessionPricing","updateTrainerAvailabilityApi","TrainerApi","body","api","handleSubmit","disabled","createChainedFunction","_len","arguments","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","RadioGroupContext","React","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","ref","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","NormalMultiSelect","newValue","isMulti","forEach","array","obj","handleInputChange","handleinputChange","isReadOnly","isClearable","isSearchable","isBoldLabel","showArrow","customStyles","base","fontWeight","lineHeight","justifyContent","alignItems","height","fontFamily","indicatorSeparator","valueContainer","padding","singleValue","dropdownIndicator","width","option","isFocused","textAlign","control","borderRadius","border","boxShadow","outline","background","minHeight","classNamePrefix","isDisabled","styles","find","components","DropdownIndicator","logo","Component"],"mappings":"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","file":"static/js/11.57646e38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NormalMultiSelect } from \"../NormalMultiSelect\";\r\nimport { getFormattedYears } from \"service/helperFunctions\";\r\n\r\nexport const YearDropDown = ({ label = \"\", name = \"\", ...restProps }) => {\r\n  const options = getFormattedYears().map((year) => ({\r\n    label: year.toString(),\r\n    value: year.toString(),\r\n    name,\r\n  }));\r\n  return (\r\n    <NormalMultiSelect\r\n      placeholder={label}\r\n      arrow={true}\r\n      name={name}\r\n      options={options}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport \"./dropdown.scss\";\r\nimport BlueHoverButton from \"component/common/BlueArrowButton\";\r\nimport Tick from \"../../../../../assets/files/FindTrainer/Tick 1.svg\";\r\nimport { fileUpload } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nconst info = [\r\n  {\r\n    label: \"Passport\",\r\n    value: \"Passport\",\r\n  },\r\n  {\r\n    value: \"Driver's Licence\",\r\n    label: \"Driver's Licence\",\r\n  },\r\n  {\r\n    label: \"State Issued ID\",\r\n    value: \"State Issued ID\",\r\n  },\r\n];\r\n\r\nconst PaymentSectionSetupClass = ({\r\n  trainerSetupData,\r\n  setTrainerSetupData,\r\n  fileUploadApi,\r\n  showSaveBtn,\r\n}) => {\r\n  const uploadArea = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"insurance\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          insurance: data.urlPath,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadAreaId = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"identity\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          governmentId: data.urlPath,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"payment_container container\">\r\n        <div className=\"payment_wrapper\">\r\n          <div className=\"payment_heading\">\r\n            <h2>{\"Security & Payment Information\"}</h2>\r\n            <p>\r\n              The following information is mandatory to complete the onboarding\r\n              of all new trainers. Please ensure you check all the documents\r\n              before uploading them.\r\n            </p>\r\n          </div>\r\n          <div className=\"payment_inner \">\r\n            {/* <form> */}\r\n            <div className=\"payment_item1\">\r\n              <h6>Please upload any one of your US government issued ID’s</h6>\r\n              <div>\r\n                <div className=\"inputs_payment1\">\r\n                  <select\r\n                    value={trainerSetupData.identityNameUS}\r\n                    name=\"identityNameUS\"\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        identityNameUS: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                  >\r\n                    {info.map((list, index) => (\r\n                      <option value={list.value} key={index}>\r\n                        {list.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add your ID Number\"\r\n                    value={trainerSetupData.governmentIdNumber}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        governmentIdNumber: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"governmentIdNumber\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"governmentId\"\r\n                    className=\"custom-file-input\"\r\n                    onChange={(e) => {\r\n                      uploadAreaId(e);\r\n                    }}\r\n                  />\r\n\r\n                  {trainerSetupData.governmentId ? (\r\n                    <a className=\"checkarrow pl-3\">\r\n                      <img src={Tick} alt=\"Uploaded\" />\r\n                    </a>\r\n                  ) : (\r\n                    <a className=\"checkarrow\">\r\n                      <BlueHoverButton />\r\n                    </a>\r\n                  )}\r\n                </div>\r\n                {trainerSetupData.governmentId && (\r\n                  <a href={trainerSetupData.governmentId} target=\"_blank\">\r\n                    View File\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"payment_item1\">\r\n              <h6>Please upload your insurance information</h6>\r\n              <div>\r\n                <div className=\"inputs_payment1\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Insurance Name\"\r\n                    value={trainerSetupData.insuranceNameUS}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        insuranceNameUS: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"insuranceNameUS\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add your Cover Amount\"\r\n                    value={trainerSetupData.coverAmount}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        coverAmount: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"coverAmount\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"insurance\"\r\n                    className=\"custom-file-input\"\r\n                    onChange={(e) => uploadArea(e)}\r\n                  />\r\n\r\n                  {trainerSetupData.insurance ? (\r\n                    <a className=\"checkarrow pl-3\">\r\n                      <img src={Tick} alt=\"Uploaded\" />\r\n                    </a>\r\n                  ) : (\r\n                    <a className=\"checkarrow\">\r\n                      <BlueHoverButton />\r\n                    </a>\r\n                  )}\r\n                </div>\r\n                {trainerSetupData.insurance && (\r\n                  <a href={trainerSetupData.insurance} target=\"_blank\">\r\n                    View File\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      fileUploadApi: fileUpload,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PaymentSectionSetup = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PaymentSectionSetupClass);\r\n\r\nexport default PaymentSectionSetup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { trainerDetail, fileUpload, getStripeAccLink } from \"action/trainerAct\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport ArrowBack from \"../../../../assets/files/SVG/Arrow Back.svg\";\r\nimport \"./stylesSetup.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./dropdown.scss\";\r\nimport ArrowHoverBlacked from \"../../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport PaymentSectionSetup from \"./SetUpPaymentSection/PaymentSectionSetup\";\r\nimport SetupPrevModal from \"./SetupPrevModal\";\r\nimport Instagram from \"../../../../assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"../../../../assets/files/SVG/Web Icon.svg\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"service/api\";\r\nimport CloseIcon from \"../../../../assets/files/FindTrainer/Cross.svg\";\r\nimport { YearDropDown } from \"component/common/YearDropdown\";\r\nimport ImageBG from \"../../../../assets/files/SVG/Image 1.svg\";\r\nconst CyanRadio = withStyles({\r\n  root: {\r\n    \"&$checked\": {\r\n      color: cyan[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\n// Dropdown Data\r\nconst options = [\r\n  { label: \"Palm Beach\", value: \"Palm Beach\", name: \"serviceableLocation\" },\r\n  {\r\n    label: \"New York City\",\r\n    value: \"New York City\",\r\n    name: \"serviceableLocation\",\r\n  },\r\n  { label: \"Hamptons\", value: \"Hamptons\", name: \"serviceableLocation\" },\r\n  { label: \"Miami\", value: \"Miami\", name: \"serviceableLocation\" },\r\n];\r\nfunction TrainerSetupClass(props) {\r\n  const [trainerSetupData, setTrainerSetupData] = useState({\r\n    motto: \"\",\r\n    training_process: \"\",\r\n    facility_details: \"\",\r\n    neighborhood_list: \"\",\r\n    haveAFacility: \"\",\r\n    willingToTravel: \"\",\r\n    instagram: \"\",\r\n    website: \"\",\r\n    serviceableLocation: \"\",\r\n    certificateFields: [{ certificate: \"\", year: \"\" }],\r\n    trainingLocation: [],\r\n    zoom_link: \"\",\r\n    identityNameUS: \"\",\r\n    insuranceNameUS: \"\",\r\n    coverAmount: \"\",\r\n    governmentId: \"\",\r\n    governmentIdNumber: \"\",\r\n    insurance: \"\",\r\n  });\r\n\r\n  const [imagesList, setImageList] = useState([\"\", \"\", \"\", \"\", \"\"]);\r\n\r\n  //buttons virtual and in person active\r\n  const [checkButtonVirtual, setCheckButtonVirtual] = useState(true);\r\n  const [checkButtonInPerson, setCheckButtonInPerson] = useState(true);\r\n\r\n  // loading the submit button\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  // Agree check\r\n  const [agreed, setAgreed] = useState(false);\r\n  const [trainerdetailData, setTrainerDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    props.trainerDetail().then((res) => {\r\n      setTrainerDetails(res);\r\n      if (res.images && res.images.length !== 0) {\r\n        setImageList(res.images);\r\n      }\r\n      let { identityInfromation = {}, insuranceInformation = {} } = res;\r\n      setTrainerSetupData({\r\n        ...trainerSetupData,\r\n        motto: res.myMotto,\r\n        training_process: res.trainingProcess,\r\n        certificateFields: res.certification,\r\n        instagram: res.instagramProfile,\r\n        website: res.websiteLink,\r\n        willingToTravel: res.willingToTravel,\r\n        haveAFacility: res.trainingFacility,\r\n        facility_details: res.trainingFacilityLocation,\r\n        zoom_link: res.virtualMeetingLink,\r\n        neighborhood_list: res.servicableLocation,\r\n        identityNameUS: identityInfromation\r\n          ? identityInfromation.identityName\r\n          : \"\",\r\n        governmentIdNumber: identityInfromation\r\n          ? identityInfromation.identityNo\r\n          : \"\",\r\n        insuranceNameUS: insuranceInformation\r\n          ? insuranceInformation.insuranceName\r\n          : \"\",\r\n        coverAmount: insuranceInformation\r\n          ? insuranceInformation.insuranceAmount\r\n          : \"\",\r\n        insurance: insuranceInformation ? insuranceInformation.insurance : \"\",\r\n        governmentId: identityInfromation ? identityInfromation.identity : \"\",\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  function handleCertificateField() {\r\n    setTrainerSetupData({\r\n      ...trainerSetupData,\r\n      certificateFields: [\r\n        ...trainerSetupData.certificateFields,\r\n        { certificate: \"\", year: \"\" },\r\n      ],\r\n    });\r\n  }\r\n\r\n  const handleRemoveCertificateFields = (index) => {\r\n    trainerSetupData.certificateFields.splice(index, 1);\r\n    setTrainerSetupData({ ...trainerSetupData });\r\n  };\r\n\r\n  const handleChangeCertificateInput = (index, event) => {\r\n    const values = [...trainerSetupData.certificateFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setTrainerSetupData({ ...trainerSetupData, certificateFields: values });\r\n  };\r\n\r\n  // handle virtual button active\r\n  const handleVirtual = () => {\r\n    setCheckButtonVirtual((checkButtonVirtual) => !checkButtonVirtual);\r\n  };\r\n  // handle InPerson button active\r\n  const handleInPerson = () => {\r\n    setCheckButtonInPerson((checkButtonInPerson) => !checkButtonInPerson);\r\n  };\r\n\r\n  // handle agree check\r\n  const handleAgreedCheck = () => {\r\n    setAgreed(!agreed);\r\n  };\r\n\r\n  // for Modal Operation\r\n  const [open, setOpen] = useState(false);\r\n  const openModal = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let payload = {\r\n      images: imagesList.filter((x) => x != \"\"),\r\n      myMotto: trainerSetupData.motto,\r\n      applicationStatus: \"setupComplete\",\r\n      trainingProcess: trainerSetupData.training_process,\r\n      certification: trainerSetupData.certificateFields,\r\n      virtualMeetingLink: trainerSetupData.zoom_link,\r\n      trainingFacility: trainerSetupData.haveAFacility,\r\n      willingToTravel: trainerSetupData.willingToTravel,\r\n      servicableLocation: [trainerSetupData.neighborhood_list],\r\n      instagramProfile: trainerSetupData.instagram,\r\n      websiteLink: trainerSetupData.website,\r\n      firstName: trainerdetailData.firstName,\r\n      lastName: trainerdetailData.lastName,\r\n      areaOfExpertise: trainerdetailData.areaOfExpertise,\r\n      description: trainerdetailData.description,\r\n      oneOnOnePricing: trainerdetailData.oneOnOnePricing,\r\n      socialSessionPricing: trainerdetailData.socialSessionPricing,\r\n      classSessionPricing: trainerdetailData.classSessionPricing,\r\n      identityName: trainerSetupData.identityNameUS,\r\n      identityNo: trainerSetupData.governmentIdNumber,\r\n      insuranceName: trainerSetupData.insuranceNameUS,\r\n      insuranceAmount: trainerSetupData.coverAmount,\r\n      insurance: trainerSetupData.insurance,\r\n      identity: trainerSetupData.governmentId,\r\n    };\r\n    const { updateTrainerAvailabilityApi } = TrainerApi;\r\n    updateTrainerAvailabilityApi.body = payload;\r\n    setLoading(true);\r\n    api({ ...updateTrainerAvailabilityApi })\r\n      .then(() => {\r\n        getStripeURL();\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n  const getStripeURL = () => {\r\n    props\r\n      .getStripeAccLink()\r\n      .then((data) => {\r\n        const { url } = data;\r\n        window.location.href = url;\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n  const handleUploadArea = (e, index) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"images\", image);\r\n      props.fileUploadApi(fd).then((data) => {\r\n        imagesList[index] = data.urlPath;\r\n        setImageList([...imagesList]);\r\n      });\r\n    }\r\n  };\r\n  const handleMoreImageUploadArea = () => {\r\n    imagesList.push(\"\");\r\n    setImageList([...imagesList]);\r\n  };\r\n  const handleRemoveImage = (index) => {\r\n    imagesList[index] = \"\";\r\n    setImageList([...imagesList]);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"inner_setup_container\">\r\n          <div className=\"setup_link\">\r\n            <div className=\"inner_link\">\r\n              <img src={ArrowBack} alt=\"icon\" />\r\n              <Link to=\"/trainer/card\"> Edit Trainer Card </Link>\r\n            </div>\r\n            <div className=\"inner_link_preview\">\r\n              <div onClick={openModal} className=\"prev_profile\">\r\n                Preview Your Trainer Profile\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <SetupPrevModal\r\n            open={open}\r\n            setOpen={setOpen}\r\n            trainerdetailData={trainerdetailData}\r\n            trainerSetupData={trainerSetupData}\r\n          />\r\n          <div className=\"setup_headings\">\r\n            <h2>Build out the rest of your Profile!</h2>\r\n            <p>\r\n              Your trainer profile is what clients will see when they click on\r\n              your trainer card while filtering results. The below information\r\n              and training settings can be changed at any time.\r\n            </p>\r\n          </div>\r\n          <div className=\"textarea_content\">\r\n            <label>What’s your Motto?</label>\r\n            <br />\r\n            <textarea\r\n              placeholder=\"Tell us all about it\"\r\n              value={trainerSetupData.motto}\r\n              onChange={(e) => {\r\n                setTrainerSetupData({\r\n                  ...trainerSetupData,\r\n                  motto: e.target.value,\r\n                });\r\n              }}\r\n              maxlength=\"500\"\r\n            />\r\n          </div>\r\n          <div className=\"textarea_content\">\r\n            <label>Tell us about you and describe your training process</label>\r\n            <br />\r\n            <textarea\r\n              placeholder=\"Tell us all about it\"\r\n              value={trainerSetupData.training_process}\r\n              onChange={(e) => {\r\n                setTrainerSetupData({\r\n                  ...trainerSetupData,\r\n                  training_process: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"certificate_content\">\r\n            <label>Throw in some photos showcasing you & your skills</label>\r\n            <div className=\"row\">\r\n              {imagesList.map((list, index) => {\r\n                return (\r\n                  <div className=\" image_upload_init\" key={index}>\r\n                    <div className=\"image-upload-card btn-file-input\">\r\n                      {list !== \"\" ? (\r\n                        <button className=\"uploaded-image\">\r\n                          <img src={list} alt={\"card-image\"} accept=\"image/*\" />\r\n                          <div id=\"overlay\"></div>\r\n                          <img\r\n                            src={CloseIcon}\r\n                            className=\"remove-image\"\r\n                            alt=\"close\"\r\n                            onClick={() => handleRemoveImage(index)}\r\n                          />\r\n                        </button>\r\n                      ) : (\r\n                        <button>\r\n                          <img\r\n                            src={ImageBG}\r\n                            alt={\"card-image\"}\r\n                            accept=\"image/*\"\r\n                          />\r\n                          <input\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            onChange={(e) => handleUploadArea(e, index)}\r\n                          />\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            {imagesList.length < 10 ? (\r\n              <button\r\n                className=\"certificate_button\"\r\n                type=\"button\"\r\n                onClick={() => handleMoreImageUploadArea()}\r\n              >\r\n                + Add More Images\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"certificate_content\">\r\n            <label>Certifications</label>\r\n            {trainerSetupData.certificateFields.map((field, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <div\r\n                    key={`${field}-${index}`}\r\n                    className=\"certificate_fields row no-gutters\"\r\n                  >\r\n                    <div className=\"col-6 px-2\">\r\n                      <input\r\n                        placeholder=\"Certification Title\"\r\n                        name=\"certificate\"\r\n                        value={field.certificate}\r\n                        onChange={(event) =>\r\n                          handleChangeCertificateInput(index, event)\r\n                        }\r\n                        className=\"w-100\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-6 px-2\">\r\n                      <YearDropDown\r\n                        label=\"Year you were Certified\"\r\n                        value={field.year}\r\n                        name=\"year\"\r\n                        handleChange={(event) =>\r\n                          handleChangeCertificateInput(index, event)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {index + 1 === trainerSetupData.certificateFields.length ? (\r\n                    <div className=\"d-flex\">\r\n                      <button\r\n                        className=\"certificate_button\"\r\n                        type=\"button\"\r\n                        onClick={() => handleCertificateField()}\r\n                      >\r\n                        + Add Certificate's\r\n                      </button>\r\n                      {index + 1 ===\r\n                        trainerSetupData.certificateFields.length &&\r\n                      trainerSetupData.certificateFields.length !== 1 ? (\r\n                        <button\r\n                          className=\"certificate_button text-danger pl-3\"\r\n                          type=\"button\"\r\n                          onClick={() => handleRemoveCertificateFields(index)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"trainDetails_container\">\r\n            <div className=\"training_options\">\r\n              <label>Where will you be training</label>\r\n              <div className=\"options_button\">\r\n                <button\r\n                  onClick={(e) => handleVirtual(e, \"virtual\")}\r\n                  className={checkButtonVirtual ? \"buttonTrue\" : \"buttonFalse\"}\r\n                >\r\n                  Virtual\r\n                </button>\r\n                <button\r\n                  onClick={(e) => handleInPerson(e, \"inPerson\")}\r\n                  className={checkButtonInPerson ? \"buttonTrue\" : \"buttonFalse\"}\r\n                >\r\n                  In Person\r\n                </button>\r\n              </div>\r\n              {checkButtonVirtual === true ? (\r\n                <div className=\"textarea_content\">\r\n                  <label>Add zoom app meeting link</label>\r\n                  <br />\r\n                  <textarea\r\n                    placeholder=\"add you're meeting link\"\r\n                    value={trainerSetupData.zoom_link}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        zoom_link: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"dd_content\">\r\n              <h5>Which city will you train in?</h5>\r\n              <select\r\n                value={trainerSetupData.neighborhood_list}\r\n                name=\"location\"\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    neighborhood_list: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                {options.map((list, index) => (\r\n                  <option value={list.value} key={index}>\r\n                    {list.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"radio_content\">\r\n              <label>\r\n                Do you have a facility or location where you will train clients?\r\n              </label>\r\n              <br />\r\n              <CyanRadio\r\n                checked={trainerSetupData.haveAFacility == true}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    haveAFacility: !trainerSetupData.haveAFacility,\r\n                  });\r\n                }}\r\n                value={trainerSetupData.haveAFacility}\r\n              />\r\n              &ensp;<span className=\"radio\">Yes</span> &ensp;\r\n              <Radio\r\n                checked={trainerSetupData.haveAFacility == false}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    haveAFacility: !trainerSetupData.haveAFacility,\r\n                  });\r\n                }}\r\n                value={trainerSetupData.haveAFacility}\r\n              />\r\n              &ensp;<span className=\"radio\">No</span>\r\n            </div>\r\n            <div className=\"textarea_content\">\r\n              <label>Details of the facility/location</label>\r\n\r\n              <br />\r\n              <textarea\r\n                placeholder=\"Enter the Details of the location\"\r\n                value={trainerSetupData.facility_details}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    facility_details: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"radio_content\">\r\n              <label>\r\n                Are you willing to travel to clients in your city/region?\r\n              </label>\r\n              <br />\r\n              <CyanRadio\r\n                checked={trainerSetupData.willingToTravel === true}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    willingToTravel: !trainerSetupData.willingToTravel,\r\n                  });\r\n                }}\r\n                value={trainerSetupData.willingToTravel}\r\n              />\r\n              &ensp;<span className=\"radio\">Yes</span> &ensp;\r\n              <CyanRadio\r\n                checked={trainerSetupData.willingToTravel === false}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    willingToTravel: !trainerSetupData.willingToTravel,\r\n                  });\r\n                }}\r\n                value={trainerSetupData.willingToTravel}\r\n              />\r\n              &ensp;<span className=\"radio\">No</span>\r\n            </div>\r\n            <div className=\"textarea_content\">\r\n              <label>\r\n                List the areas/neighborhoods you’re willing to travel to\r\n              </label>\r\n              <br />\r\n              <textarea\r\n                placeholder=\"Neighborhood List\"\r\n                value={trainerSetupData.neighborhood_list}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    neighborhood_list: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input_content\">\r\n              <label>Instagram</label>\r\n              <br />\r\n              <input\r\n                placeholder=\"Add your Instagram Handle\"\r\n                value={trainerSetupData.instagram}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    instagram: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n              <img src={Instagram} alt=\"icon\" />\r\n            </div>\r\n            <div className=\"input_content\">\r\n              <label>Website</label>\r\n              <br />\r\n              <input\r\n                placeholder=\"Add your Web Link\"\r\n                value={trainerSetupData.website}\r\n                onChange={(e) => {\r\n                  setTrainerSetupData({\r\n                    ...trainerSetupData,\r\n                    website: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n              <img src={Web} alt=\"icon\" />\r\n            </div>\r\n          </div>\r\n\r\n          <PaymentSectionSetup\r\n            trainerSetupData={trainerSetupData}\r\n            setTrainerSetupData={setTrainerSetupData}\r\n          />\r\n\r\n          <div className=\"card_agree\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"agree\"\r\n              name=\"agree\"\r\n              onChange={handleAgreedCheck}\r\n            />\r\n            <label>\r\n              Check here to acknowledge that you have read and agree to the\r\n              Motto trainer\r\n              <a href=\"/agreement\" target=\"_blank\">\r\n                terms and conditions\r\n              </a>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"submit_button\">\r\n            <button\r\n              onClick={() => handleSubmit()}\r\n              type=\"submit\"\r\n              disabled={(isLoading, !agreed)}\r\n              className={`${isLoading ? \"loading\" : \"btn\"}`}\r\n            >\r\n              {isLoading ? (\r\n                \"Loading...\"\r\n              ) : (\r\n                <a>\r\n                  {\" \"}\r\n                  Continue to account\r\n                  <ArrowHoverBlacked />\r\n                </a>\r\n              )}\r\n            </button>\r\n            <div className=\"terms_msg\">\r\n              {agreed ? null : (\r\n                <span>\r\n                  Please Agree to the above terms and conditions to continue\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      fileUploadApi: fileUpload,\r\n      trainerDetail,\r\n      getStripeAccLink,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerSetup = connect(null, mapDispatchToProps)(TrainerSetupClass);\r\n\r\nexport default TrainerSetup;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Drop Down 4.50302f8e.svg\";","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","export default __webpack_public_path__ + \"static/media/Image 1.8f33ee1e.svg\";","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;","import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"./select.scss\";\r\nimport logo from \"../../../assets/files/SVG/Drop Down 4.svg\";\r\nexport class NormalMultiSelect extends Component {\r\n    //change select\r\n    handleChange = (newValue) => {\r\n        let { isMulti } = this.props;\r\n        if (!!isMulti) {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: [],\r\n                },\r\n            };\r\n            if (!!newValue && newValue.length) {\r\n                newValue.forEach((array) => {\r\n                    let obj = {\r\n                        value: array.value,\r\n                        label: array.label,\r\n                    };\r\n                    body.target.value.push(obj);\r\n                });\r\n            }\r\n            this.props.handleChange(body);\r\n        } else {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: newValue ? newValue.value : \"\",\r\n                    label: newValue ? newValue.label : \"\",\r\n                },\r\n            };\r\n\r\n            this.props.handleChange(body);\r\n        }\r\n    };\r\n\r\n    //handle Input Change\r\n    handleInputChange = (newValue) => {\r\n        let body = {\r\n            target: {\r\n                name: this.props.name,\r\n                value: newValue ? newValue : \"\",\r\n            },\r\n        };\r\n        this.props.handleinputChange && this.props.handleinputChange(body);\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            className = \"select-form-control w-100\",\r\n            options = [],\r\n            value = \"\",\r\n            name = \"\",\r\n            placeholder = \"Select\",\r\n            disabled = false,\r\n            arrow = false,\r\n            isReadOnly = false,\r\n            label = \"\",\r\n            isMulti = false,\r\n            isClearable = false,\r\n            isSearchable = false,\r\n            isBoldLabel = false,\r\n            showArrow = true,\r\n        } = this.props;\r\n\r\n        const DropdownIndicator = (props) => {\r\n            return (\r\n                components.DropdownIndicator && (\r\n                    <components.DropdownIndicator {...props}>\r\n                        <img src={logo} alt=\"dropdown\" className=\"dd_icon\" />\r\n                    </components.DropdownIndicator>\r\n                )\r\n            );\r\n        };\r\n        const customStyles = {\r\n            placeholder: (base) => ({\r\n                ...base,\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            indicatorSeparator: (base) => ({\r\n                ...base,\r\n                display: \"none\",\r\n            }),\r\n            valueContainer: (base) => ({\r\n                ...base,\r\n                padding: \"0px 20px\",\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            singleValue: (base) => ({\r\n                ...base,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n            }),\r\n            dropdownIndicator: (base) => ({\r\n                ...base,\r\n                padding: 0,\r\n                height: \"26px\",\r\n                width: \"26px\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            option: (base, { isFocused }) => ({\r\n                ...base,\r\n                backgroundColor: isFocused ? \"#53BFD2\" : \"#fff\",\r\n                color: isFocused ? \"#fff\" : \"#000\",\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            control: (base) => ({\r\n                ...base,\r\n                borderRadius: 50,\r\n                border: \"2px solid #bcbcbc\",\r\n                boxShadow: \"0 0 !important\",\r\n                outline: \"0 \",\r\n                background: \"white\",\r\n                height: 45,\r\n                minHeight: 45,\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n        };\r\n        return (\r\n            <>\r\n                {!isReadOnly ? (\r\n                    <div\r\n                        className={`${\r\n                            arrow ? \"select-section w-100\" : \"Select\"\r\n                        } ${isBoldLabel ? \"mt-0\" : \"\"}`}\r\n                    >\r\n                        {label !== \"\" ? (\r\n                            <div>\r\n                                <label\r\n                                    className={\r\n                                        isBoldLabel\r\n                                            ? \"mb-1 text-black-22\"\r\n                                            : \"font-weight-normal mb-1\"\r\n                                    }\r\n                                >\r\n                                    {label}\r\n                                </label>\r\n                            </div>\r\n                        ) : null}\r\n                        <Select\r\n                            className={className}\r\n                            classNamePrefix=\"Select\"\r\n                            isDisabled={disabled}\r\n                            isClearable={isClearable}\r\n                            isSearchable={isSearchable}\r\n                            name={name}\r\n                            options={options}\r\n                            onChange={this.handleChange}\r\n                            isMulti={isMulti}\r\n                            showArrow={showArrow}\r\n                            placeholder={placeholder}\r\n                            styles={customStyles}\r\n                            value={\r\n                                !!options && options.length > 0\r\n                                    ? options.find(\r\n                                          (data) => data.value === value\r\n                                      )\r\n                                        ? options.find(\r\n                                              (data) => data.value === value\r\n                                          )\r\n                                        : null\r\n                                    : null\r\n                            }\r\n                            components={{ DropdownIndicator }}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <p>{value}</p>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}