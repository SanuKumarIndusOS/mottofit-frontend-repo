{"version":3,"sources":["component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/PaymentSectionSetup.js","pages/TrainerDashboard/Settings/PaymentHistory.js","assets/files/FindTrainer/Tick 1.svg"],"names":["info","label","value","PaymentSectionSetup","connect","dispatch","bindActionCreators","fileUploadApi","fileUpload","trainerSetupData","setTrainerSetupData","showSaveBtn","updateUploadedFile","name","url","updateTrainerAvailabilityApi","TrainerApi","payload","body","api","then","message","Toast","type","catch","err","className","identityNameUS","onChange","e","target","map","list","index","placeholder","governmentIdNumber","image","files","undefined","fd","FormData","append","data","governmentId","urlPath","uploadAreaId","src","Tick","alt","href","insuranceNameUS","coverAmount","insurance","uploadArea","PaymentHistory","getStripeAccLink","trainerDetail","props","useState","agreeToTerms","setAgreeToTerms","isLoading","setLoading","setShowSaveBtn","useEffect","res","identityInfromation","insuranceInformation","tempData","identityName","identityNo","insuranceName","insuranceAmount","identity","isAllUploaded","Object","values","every","hasAllFieldsFilled","disableBtn","id","onClick","disabled","window","open"],"mappings":"yOAWMA,EAAO,CACX,CACEC,MAAO,WACPC,MAAO,YAET,CACEA,MAAO,mBACPD,MAAO,oBAET,CACEA,MAAO,kBACPC,MAAO,oBA2MLC,EAAsBC,YAC1B,MAVyB,SAACC,GAC1B,OAAOC,YACL,CACEC,cAAeC,cAEjBH,KAIwBD,EAvMK,SAAC,GAK3B,IAJLK,EAII,EAJJA,iBACAC,EAGI,EAHJA,oBACAH,EAEI,EAFJA,cACAI,EACI,EADJA,YAmBMC,EAAqB,SAACC,EAAMC,GAChC,IAAQC,EAAiCC,aAAjCD,6BAEJE,EAAO,eACRJ,EAAOC,GAEVC,EAA6BG,KAAOD,EACpCE,cAAI,eAAKJ,IACNK,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPC,gBAAM,CAAEC,KAAM,UAAWF,QAASA,GAAW,eAE9CG,OAAM,SAACC,GACNH,gBAAM,CAAEC,KAAM,QAASF,QAASI,EAAIJ,SAAW,cAqBrD,OACE,mCACE,qBAAKK,UAAU,8BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,6BAAK,mCACL,2LAMF,sBAAKA,UAAU,iBAAf,UAEE,sBAAKA,UAAU,gBAAf,UACE,8FACA,gCACE,sBAAKA,UAAU,kBAAf,UACE,wBACExB,MAAOO,EAAiBkB,eACxBd,KAAK,iBACLe,SAAU,SAACC,GACTnB,EAAoB,2BACfD,GADc,IAEjBkB,eAAgBE,EAAEC,OAAO5B,SAE3BS,KARJ,SAWGX,EAAK+B,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAQ/B,MAAO8B,EAAK9B,MAApB,SACG8B,EAAK/B,OADwBgC,QAKpC,uBACEV,KAAK,OACLW,YAAY,qBACZhC,MAAOO,EAAiB0B,mBACxBP,SAAU,SAACC,GACTnB,EAAoB,2BACfD,GADc,IAEjB0B,mBAAoBN,EAAEC,OAAO5B,SAE/BS,KAEFE,KAAK,uBAEP,uBACEU,KAAK,OACLV,KAAK,eACLa,UAAU,oBACVE,SAAU,SAACC,IArER,SAACA,GACpB,IAAIO,EAAQP,EAAEC,OAAOO,MAAM,GAC3B,QAAcC,IAAVF,EAAqB,CACvB,IAAMG,EAAK,IAAIC,SAEfD,EAAGE,OAAO,WAAYL,GACtB7B,EAAcgC,GAAInB,MAAK,SAACsB,GACtBhC,EAAoB,2BACfD,GADc,IAEjBkC,aAAcD,EAAKE,WAGrBF,EAAKE,SAAWhC,EAAmB,WAAY8B,EAAKE,aA0DtCC,CAAahB,MAIhBpB,EAAiBkC,aAChB,mBAAGjB,UAAU,kBAAb,SACE,qBAAKoB,IAAKC,UAAMC,IAAI,eAGtB,mBAAGtB,UAAU,aAAb,SACE,cAAC,UAAD,SAILjB,EAAiBkC,cAChB,mBAAGM,KAAMxC,EAAiBkC,aAAcb,OAAO,SAA/C,6BAMN,sBAAKJ,UAAU,gBAAf,UACE,0EACA,gCACE,sBAAKA,UAAU,kBAAf,UACE,uBACEH,KAAK,OACLW,YAAY,4BACZhC,MAAOO,EAAiByC,gBACxBtB,SAAU,SAACC,GACTnB,EAAoB,2BACfD,GADc,IAEjByC,gBAAiBrB,EAAEC,OAAO5B,SAE5BS,KAEFE,KAAK,oBAEP,uBACEU,KAAK,OACLW,YAAY,wBACZhC,MAAOO,EAAiB0C,YACxBvB,SAAU,SAACC,GACTnB,EAAoB,2BACfD,GADc,IAEjB0C,YAAatB,EAAEC,OAAO5B,SAExBS,KAEFE,KAAK,gBAEP,uBACEU,KAAK,OACLV,KAAK,YACLa,UAAU,oBACVE,SAAU,SAACC,GAAD,OA9JT,SAACA,GAClB,IAAIO,EAAQP,EAAEC,OAAOO,MAAM,GAC3B,QAAcC,IAAVF,EAAqB,CACvB,IAAMG,EAAK,IAAIC,SAEfD,EAAGE,OAAO,YAAaL,GACvB7B,EAAcgC,GAAInB,MAAK,SAACsB,GACtBhC,EAAoB,2BACfD,GADc,IAEjB2C,UAAWV,EAAKE,WAGlBF,EAAKE,SAAWhC,EAAmB,YAAa8B,EAAKE,aAkJxBS,CAAWxB,MAG7BpB,EAAiB2C,UAChB,mBAAG1B,UAAU,kBAAb,SACE,qBAAKoB,IAAKC,UAAMC,IAAI,eAGtB,mBAAGtB,UAAU,aAAb,SACE,cAAC,UAAD,SAILjB,EAAiB2C,WAChB,mBAAGH,KAAMxC,EAAiB2C,UAAWtB,OAAO,SAA5C,0CA0BH3B,a,0ICzDTmD,EAAiBlD,YAAQ,MAVJ,SAACC,GAC1B,OAAOC,YACL,CACEiD,oCACAC,+BAEFnD,KAImBD,EAnKE,SAACqD,GACxB,MAAgDC,mBAAS,CACvD/B,eAAgB,WAChBuB,gBAAiB,GACjBC,YAAa,GACbR,aAAc,GACdR,mBAAoB,GACpBiB,UAAW,KANb,mBAAO3C,EAAP,KAAyBC,EAAzB,KASA,EAAwCgD,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAO/C,EAAP,KAAoBoD,EAApB,KAuCAC,qBAAU,WACRP,EAAMD,gBAAgBpC,MAAK,SAAC6C,GAC1B,MAA8DA,EAAxDC,2BAAN,MAA4B,GAA5B,IAA8DD,EAA9BE,4BAAhC,MAAuD,GAAvD,EAEIC,EAAW,CACbzC,eAAgBuC,EACZA,EAAoBG,aACpB,GACJlC,mBAAoB+B,EAChBA,EAAoBI,WACpB,GACJpB,gBAAiBiB,EACbA,EAAqBI,cACrB,GACJpB,YAAagB,EACTA,EAAqBK,gBACrB,GACJpB,UAAWe,EAAuBA,EAAqBf,UAAY,GACnET,aAAcuB,EAAsBA,EAAoBO,SAAW,IAG/DC,EAAgBC,OAAOC,OAAOR,GAAUS,OAC5C,SAAC3E,GAAD,MAAqB,KAAVA,KAGb6D,GAAgBW,GAEhBhE,EAAoB,2BAAKD,GAAqB2D,SAE/C,IAEH,IAAMU,EAAqBH,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAAmBlE,IAAoBoE,OAChE,SAACnC,GAAD,MAAmB,KAATA,KAORqC,EAAalB,IAAciB,EAI/B,OAFInE,IAAgBgD,IAAcoB,GAAa,GAG7C,gCACE,cAAC,UAAD,CACEtE,iBAAkBA,EAClBC,oBAAqBA,EACrBC,YAAa,kBAAMoD,GAAe,MAGnCpD,GACC,sBAAKe,UAAU,aAAf,UACE,uBACEH,KAAK,WACLyD,GAAG,QACHnE,KAAK,QACLe,SAtBgB,WACxBgC,GAAiBD,MAuBX,gHAGE,mBAAGV,KAAK,aAAanB,OAAO,SAA5B,wCAON,qBAAKJ,UAAU,2CAAf,SACGf,EACC,wBACEsE,QA7GW,WACnB,IAAIhE,EAAU,CACZoD,aAAc5D,EAAiBkB,gBAAkB,GACjD2C,WAAY7D,EAAiB0B,oBAAsB,GACnDoC,cAAe9D,EAAiByC,iBAAmB,GACnDsB,gBAAiB/D,EAAiB0C,aAAe,GACjDC,UAAW3C,EAAiB2C,WAAa,GACzCqB,SAAUhE,EAAiBkC,cAAgB,IAKrC5B,EAAiCC,aAAjCD,6BACRA,EAA6BG,KAAOD,EACpC6C,GAAW,GACX3C,cAAI,eAAKJ,IACNK,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAEPyC,GAAW,GACXxC,gBAAM,CAAEC,KAAM,UAAWF,QAASA,GAAW,YAC7C0C,GAAe,GACfH,GAAgB,MAEjBpC,OAAM,kBAAMsC,GAAW,OAuFlBvC,KAAK,SACL2D,SAAUH,EACVrD,UAAS,UAAKmC,EAAY,UAAY,MAA7B,eAJX,SAMGA,EACC,aAEA,8BACG,IADH,eAGE,cAAC,UAAD,SAKN,wBAAQoB,QAnGK,WACnBxB,EACGF,mBACAnC,MAAK,SAACsB,GACL,IAAQ5B,EAAQ4B,EAAR5B,IACRA,GAAOqE,OAAOC,KAAKtE,GACnBgD,GAAW,MAEZtC,OAAM,kBAAMsC,GAAW,OA2FWvC,KAAK,SAASG,UAAS,aAAtD,SACE,8BACG,IADH,uBAGE,cAAC,UAAD,iBAoBC4B,a,iCC9Kf,OAAe,cAA0B,oC","file":"static/js/120.5f18e18f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport \"./dropdown.scss\";\r\nimport BlueHoverButton from \"component/common/BlueArrowButton\";\r\nimport Tick from \"../../../../../assets/files/FindTrainer/Tick 1.svg\";\r\nimport { fileUpload } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"service/api\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { Toast } from \"service/toast\";\r\nconst info = [\r\n  {\r\n    label: \"Passport\",\r\n    value: \"Passport\",\r\n  },\r\n  {\r\n    value: \"Driver's Licence\",\r\n    label: \"Driver's Licence\",\r\n  },\r\n  {\r\n    label: \"State Issued ID\",\r\n    value: \"State Issued ID\",\r\n  },\r\n];\r\n\r\nconst PaymentSectionSetupClass = ({\r\n  trainerSetupData,\r\n  setTrainerSetupData,\r\n  fileUploadApi,\r\n  showSaveBtn,\r\n}) => {\r\n  const uploadArea = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"insurance\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          insurance: data.urlPath,\r\n        });\r\n\r\n        data.urlPath && updateUploadedFile(\"insurance\", data.urlPath);\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateUploadedFile = (name, url) => {\r\n    const { updateTrainerAvailabilityApi } = TrainerApi;\r\n\r\n    let payload = {\r\n      [name]: url,\r\n    };\r\n    updateTrainerAvailabilityApi.body = payload;\r\n    api({ ...updateTrainerAvailabilityApi })\r\n      .then(({ message }) => {\r\n        Toast({ type: \"success\", message: message || \"Success\" });\r\n      })\r\n      .catch((err) => {\r\n        Toast({ type: \"error\", message: err.message || \"Error\" });\r\n      });\r\n  };\r\n\r\n  const uploadAreaId = (e) => {\r\n    let image = e.target.files[0];\r\n    if (image !== undefined) {\r\n      const fd = new FormData();\r\n\r\n      fd.append(\"identity\", image);\r\n      fileUploadApi(fd).then((data) => {\r\n        setTrainerSetupData({\r\n          ...trainerSetupData,\r\n          governmentId: data.urlPath,\r\n        });\r\n\r\n        data.urlPath && updateUploadedFile(\"identity\", data.urlPath);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"payment_container container\">\r\n        <div className=\"payment_wrapper\">\r\n          <div className=\"payment_heading\">\r\n            <h2>{\"Security & Payment Information\"}</h2>\r\n            <p>\r\n              The following information is mandatory to complete the onboarding\r\n              of all new trainers. Please ensure you check all the documents\r\n              before uploading them.\r\n            </p>\r\n          </div>\r\n          <div className=\"payment_inner \">\r\n            {/* <form> */}\r\n            <div className=\"payment_item1\">\r\n              <h6>Please upload any one of your US government issued IDâ€™s</h6>\r\n              <div>\r\n                <div className=\"inputs_payment1\">\r\n                  <select\r\n                    value={trainerSetupData.identityNameUS}\r\n                    name=\"identityNameUS\"\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        identityNameUS: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                  >\r\n                    {info.map((list, index) => (\r\n                      <option value={list.value} key={index}>\r\n                        {list.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add your ID Number\"\r\n                    value={trainerSetupData.governmentIdNumber}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        governmentIdNumber: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"governmentIdNumber\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"governmentId\"\r\n                    className=\"custom-file-input\"\r\n                    onChange={(e) => {\r\n                      uploadAreaId(e);\r\n                    }}\r\n                  />\r\n\r\n                  {trainerSetupData.governmentId ? (\r\n                    <a className=\"checkarrow pl-3\">\r\n                      <img src={Tick} alt=\"Uploaded\" />\r\n                    </a>\r\n                  ) : (\r\n                    <a className=\"checkarrow\">\r\n                      <BlueHoverButton />\r\n                    </a>\r\n                  )}\r\n                </div>\r\n                {trainerSetupData.governmentId && (\r\n                  <a href={trainerSetupData.governmentId} target=\"_blank\">\r\n                    View File\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"payment_item1\">\r\n              <h6>Please upload your insurance information</h6>\r\n              <div>\r\n                <div className=\"inputs_payment1\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Insurance Name\"\r\n                    value={trainerSetupData.insuranceNameUS}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        insuranceNameUS: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"insuranceNameUS\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add your Cover Amount\"\r\n                    value={trainerSetupData.coverAmount}\r\n                    onChange={(e) => {\r\n                      setTrainerSetupData({\r\n                        ...trainerSetupData,\r\n                        coverAmount: e.target.value,\r\n                      });\r\n                      showSaveBtn();\r\n                    }}\r\n                    name=\"coverAmount\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"insurance\"\r\n                    className=\"custom-file-input\"\r\n                    onChange={(e) => uploadArea(e)}\r\n                  />\r\n\r\n                  {trainerSetupData.insurance ? (\r\n                    <a className=\"checkarrow pl-3\">\r\n                      <img src={Tick} alt=\"Uploaded\" />\r\n                    </a>\r\n                  ) : (\r\n                    <a className=\"checkarrow\">\r\n                      <BlueHoverButton />\r\n                    </a>\r\n                  )}\r\n                </div>\r\n                {trainerSetupData.insurance && (\r\n                  <a href={trainerSetupData.insurance} target=\"_blank\">\r\n                    View File\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      fileUploadApi: fileUpload,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PaymentSectionSetup = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PaymentSectionSetupClass);\r\n\r\nexport default PaymentSectionSetup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PaymentSectionSetup from \"component/TrainerOnBoard/TrainerCaptures/TrainerSetUpProfile/SetUpPaymentSection/PaymentSectionSetup\";\r\nimport ArrowHoverBlacked from \"component/common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getStripeAccLink, trainerDetail } from \"action/trainerAct\";\r\nimport { Toast } from \"../../../service/toast\";\r\n\r\nconst PaymentHistoryFC = (props) => {\r\n  const [trainerSetupData, setTrainerSetupData] = useState({\r\n    identityNameUS: \"Passport\",\r\n    insuranceNameUS: \"\",\r\n    coverAmount: \"\",\r\n    governmentId: \"\",\r\n    governmentIdNumber: \"\",\r\n    insurance: \"\",\r\n  });\r\n\r\n  const [agreeToTerms, setAgreeToTerms] = useState(false);\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [showSaveBtn, setShowSaveBtn] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    let payload = {\r\n      identityName: trainerSetupData.identityNameUS || \"\",\r\n      identityNo: trainerSetupData.governmentIdNumber || \"\",\r\n      insuranceName: trainerSetupData.insuranceNameUS || \"\",\r\n      insuranceAmount: trainerSetupData.coverAmount || \"\",\r\n      insurance: trainerSetupData.insurance || \"\",\r\n      identity: trainerSetupData.governmentId || \"\",\r\n    };\r\n\r\n    // console.log(payload);\r\n\r\n    const { updateTrainerAvailabilityApi } = TrainerApi;\r\n    updateTrainerAvailabilityApi.body = payload;\r\n    setLoading(true);\r\n    api({ ...updateTrainerAvailabilityApi })\r\n      .then(({ message }) => {\r\n        // getStripeURL();\r\n        setLoading(false);\r\n        Toast({ type: \"success\", message: message || \"Success\" });\r\n        setShowSaveBtn(false);\r\n        setAgreeToTerms(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n\r\n  const getStripeURL = () => {\r\n    props\r\n      .getStripeAccLink()\r\n      .then((data) => {\r\n        const { url } = data;\r\n        url && window.open(url);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.trainerDetail().then((res) => {\r\n      let { identityInfromation = {}, insuranceInformation = {} } = res;\r\n\r\n      let tempData = {\r\n        identityNameUS: identityInfromation\r\n          ? identityInfromation.identityName\r\n          : \"\",\r\n        governmentIdNumber: identityInfromation\r\n          ? identityInfromation.identityNo\r\n          : \"\",\r\n        insuranceNameUS: insuranceInformation\r\n          ? insuranceInformation.insuranceName\r\n          : \"\",\r\n        coverAmount: insuranceInformation\r\n          ? insuranceInformation.insuranceAmount\r\n          : \"\",\r\n        insurance: insuranceInformation ? insuranceInformation.insurance : \"\",\r\n        governmentId: identityInfromation ? identityInfromation.identity : \"\",\r\n      };\r\n\r\n      const isAllUploaded = Object.values(tempData).every(\r\n        (value) => value !== \"\"\r\n      );\r\n\r\n      setShowSaveBtn(!isAllUploaded);\r\n\r\n      setTrainerSetupData({ ...trainerSetupData, ...tempData });\r\n    });\r\n  }, []);\r\n\r\n  const hasAllFieldsFilled = Object.values({ ...trainerSetupData }).every(\r\n    (data) => data !== \"\"\r\n  );\r\n\r\n  const handleAgreedCheck = () => {\r\n    setAgreeToTerms(!agreeToTerms);\r\n  };\r\n\r\n  let disableBtn = isLoading || !hasAllFieldsFilled;\r\n\r\n  if (showSaveBtn && !agreeToTerms) disableBtn = true;\r\n\r\n  return (\r\n    <div>\r\n      <PaymentSectionSetup\r\n        trainerSetupData={trainerSetupData}\r\n        setTrainerSetupData={setTrainerSetupData}\r\n        showSaveBtn={() => setShowSaveBtn(true)}\r\n      />\r\n\r\n      {showSaveBtn && (\r\n        <div className=\"card_agree\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"agree\"\r\n            name=\"agree\"\r\n            onChange={handleAgreedCheck}\r\n          />\r\n          <label>\r\n            Check here to acknowledge that you have read and agree to the Motto\r\n            trainer\r\n            <a href=\"/agreement\" target=\"_blank\">\r\n              terms and conditions\r\n            </a>\r\n          </label>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"action-btn d-flex justify-content-center\">\r\n        {showSaveBtn ? (\r\n          <button\r\n            onClick={handleSubmit}\r\n            type=\"submit\"\r\n            disabled={disableBtn}\r\n            className={`${isLoading ? \"loading\" : \"btn\"} normal-btn`}\r\n          >\r\n            {isLoading ? (\r\n              \"Loading...\"\r\n            ) : (\r\n              <a>\r\n                {\" \"}\r\n                Save Details\r\n                <ArrowHoverBlacked />\r\n              </a>\r\n            )}\r\n          </button>\r\n        ) : (\r\n          <button onClick={getStripeURL} type=\"submit\" className={`normal-btn`}>\r\n            <a>\r\n              {\" \"}\r\n              Edit Payment Details\r\n              <ArrowHoverBlacked />\r\n            </a>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getStripeAccLink,\r\n      trainerDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PaymentHistory = connect(null, mapDispatchToProps)(PaymentHistoryFC);\r\nexport default PaymentHistory;\r\n","export default __webpack_public_path__ + \"static/media/Tick 1.bf0e36e8.svg\";"],"sourceRoot":""}