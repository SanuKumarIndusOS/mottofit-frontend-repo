{"version":3,"sources":["component/UserBookSession/UserSchedular/index.js","component/TrainerProfile/UserScheduler/UserScheduler.js","assets/files/SVG/Arrow Back.svg","assets/files/FindTrainer/Profile Picture.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["UserEventSchedular","React","useState","trainerName","setTrainerName","activity","trainerstartSlot","settrainerstartSlot","trainerEndSlot","settrainerEndSlot","DateSlot","setDateSlot","useEffect","location","state","console","log","localStorage","getItem","useLocation","className","src","ArrowBack","alt","to","Profile","style","textTransform","id","parentCallback","ts","tss","date","pathname","slotDetails","Name","start_slot","end_slot","marginBottom","ButtonSection","onClick","history","push","UserScheduler","props","early_bird","rise_shine","mid_day","mid_day_2","happy_hour","never_too_late","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","setSelectedCell","userSlots","setuserSlots","cells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","token","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","getAvailableSlots","populate","ta","keys","map","item","a","temp","column","key","row","selectedCell","start","end","now","clone","dates","isSameOrBefore","format","add","length","selectUserSlot","cellCollection","newTime","valueOf","find","el","prevTime","subtract","tableData2","startDate","endDate","fetch","method","headers","Authorization","then","response","json","slice","l","backgroundColor","isAfter","BackIcon","cursor","disabled","opacity","NextIcon","value","onChange","e","target","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/18.b00a5c50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport Profile from \"../../../assets/files/FindTrainer/Profile Picture.png\";\r\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport UserScheduler from \"../../UserScheduler/Scheduler\";\r\nimport UserScheduler2 from \"component/TrainerProfile/UserScheduler/UserScheduler\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst UserEventSchedular = () => {\r\n    const [trainerName, setTrainerName] = React.useState(\"\");\r\n    const [activity, setActivity] = React.useState(\"Boxing\");\r\n    const [trainerstartSlot, settrainerstartSlot] = React.useState();\r\n    const [trainerEndSlot, settrainerEndSlot] = React.useState();\r\n    const [DateSlot, setDateSlot] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        setTrainerName(location.state[\"trainerData\"][\"firstName\"]);\r\n        console.log(location.state[\"trainerData\"]);\r\n\r\n        console.log(localStorage.getItem(\"trainertime\"), \"ee\");\r\n    }, []);\r\n\r\n    const callbackFunction = (ts, tss, date) => {\r\n        console.log(ts, tss, \"Callback\");\r\n        settrainerstartSlot(ts);\r\n        settrainerEndSlot(tss);\r\n        setDateSlot(date);\r\n    };\r\n\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"event_outter_container\">\r\n                <div className=\"container\">\r\n                    <div className=\"event_inner_container\">\r\n                        <div className=\"link_wrapper\">\r\n                            <img src={ArrowBack} alt=\"icon\" />\r\n                            <div className=\"inner_links\">\r\n                                <Link to=\"/trainer/find\">\r\n                                    Choose another Trainer\r\n                                </Link>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"event_wrapper\">\r\n                            <div className=\"event_wrapper_inner\">\r\n                                <div className=\"event_header\">\r\n                                    <h2>Schedule your Training Time</h2>\r\n                                    <p>\r\n                                        Please select a preferable date and time\r\n                                        slot to schedule your training session.\r\n                                        All the listed timings are in your local\r\n                                        timezone (GMT + 5:30)\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"user_profile_details\">\r\n                                    <img src={Profile} alt=\"profile\" />\r\n                                    <div className=\"user_content\">\r\n                                        <h2\r\n                                            style={{\r\n                                                textTransform: \"capitalize\",\r\n                                            }}\r\n                                        >\r\n                                            {trainerName}\r\n                                        </h2>\r\n                                        <p>{activity}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container\">\r\n                                    {/* <UserScheduler\r\n                                        trainerID={location.state[\"trainerId\"]}\r\n                                        parentCallback={callbackFunction}\r\n                                    /> */}\r\n                                    <UserScheduler2\r\n                                        id={location.state[\"trainerId\"]}\r\n                                        parentCallback={callbackFunction}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: \"/user/session-type\",\r\n                                        state: {\r\n                                            slotDetails: {\r\n                                                Name: trainerName,\r\n                                                start_slot: trainerstartSlot,\r\n                                                end_slot: trainerEndSlot,\r\n                                                date: DateSlot,\r\n                                                activity: activity,\r\n                                                id: location.state[\"trainerId\"],\r\n                                            },\r\n                                        },\r\n                                    }}\r\n                                    style={{ marginBottom: \"500px\" }}\r\n                                >\r\n                                    CONTINUE <ArrowHoverBlacked />{\" \"}\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEventSchedular;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\nimport BlueArrowButton from \"../../common/BlueArrowButton\";\r\nimport \"./styles.scss\";\r\nimport { history } from \"helpers\";\r\nfunction UserScheduler(props) {\r\n    //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    let early_bird = [\r\n        \"05:00 AM\",\r\n        \"05:30 AM\",\r\n        \"06:00 AM\",\r\n        \"06:30 AM\",\r\n        \"07:00 AM\",\r\n        \"07:30 AM\",\r\n    ];\r\n\r\n    let rise_shine = [\r\n        \"08:00 AM\",\r\n        \"08:30 AM\",\r\n        \"09:00 AM\",\r\n        \"09:30 AM\",\r\n        \"10:00 AM\",\r\n        \"10:30 AM\",\r\n    ]; //1\r\n\r\n    let mid_day = [\r\n        \"11:00 AM\",\r\n        \"11:30 AM\",\r\n        \"12:00 PM\",\r\n        \"12:30 PM\",\r\n        \"01:00 PM\",\r\n        \"01:30 PM\",\r\n    ]; //230 - 4\r\n\r\n    let mid_day_2 = [\r\n        \"02:00 PM\",\r\n        \"02:30 PM\",\r\n        \"03:00 PM\",\r\n        \"03:30 PM\",\r\n        \"04:00 PM\",\r\n        \"04:30 PM\",\r\n    ];\r\n\r\n    let happy_hour = [\r\n        \"05:00 PM\",\r\n        \"05:30 PM\",\r\n        \"06:00 PM\",\r\n        \"06:30 PM\",\r\n        \"07:00 PM\",\r\n        \"07:30 PM\",\r\n    ];\r\n\r\n    let never_too_late = [\r\n        \"08:00 PM\",\r\n        \"08:30 PM\",\r\n        \"09:00 PM\",\r\n        \"09:30 PM\",\r\n        \"10:00 PM\",\r\n        \"10:30 PM\",\r\n    ];\r\n\r\n    const [time, setTime] = React.useState(early_bird);\r\n    const [TimeSlot, setTimeSlot] = React.useState(\"EarlyBird\");\r\n\r\n    const [cellData, setCellData] = React.useState([]);\r\n    const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n    const [userSlots, setuserSlots] = React.useState([]);\r\n\r\n    const [cells, setCells] = React.useState([\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n        [false, false, false, false, false, false, false, false],\r\n    ]);\r\n\r\n    const [cal, setCal] = React.useState([]);\r\n    const [startWeek, setstartWeek] = React.useState(\r\n        moment().startOf(\"isoWeek\")\r\n    );\r\n    const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var dt = new Object();\r\n    var lt = new Object();\r\n    const [data, setData] = React.useState([]);\r\n\r\n    const [aslot, setAslot] = React.useState();\r\n    const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n\r\n        // console.log(TimeSlot);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        setSelectedCell([]);\r\n        //console.log(\"time changed\");\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    }, [time]);\r\n\r\n    React.useEffect(() => {\r\n        Object.keys(data).map((item) => {\r\n            // console.log(data[item][\"slotDate\"], data[item][\"availabileTimes\"]);\r\n            dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n        });\r\n        //console.log(dt);\r\n\r\n        var ta;\r\n        Object.keys(dt).map((item) => {\r\n            ta = [];\r\n            dt[item].map((a) => {\r\n                // ta.push(a[\"end\"]);\r\n                ta.push(a[\"start\"]);\r\n                // console.log(ta, item);\r\n            });\r\n\r\n            lt[item] = ta;\r\n        });\r\n\r\n        setAslot(lt);\r\n        setAslotKeys(Object.keys(lt));\r\n        //  console.log(lt);\r\n    }, [data]);\r\n\r\n    React.useEffect(() => {\r\n        // console.log(cal);\r\n        setCellData([]);\r\n        time.map((time) => {\r\n            var temp = [];\r\n            cal.map((date) => {\r\n                // temp.push(date + \" \" + time);\r\n                temp.push({ date: date, time: time });\r\n            });\r\n\r\n            setCellData((cellData) => [...cellData, temp]);\r\n        });\r\n    }, [cal]);\r\n\r\n    React.useEffect(() => {\r\n        //    (\"change\", cells, cellData);\r\n        setSelectedCell([]);\r\n        cells.map((column, key) => {\r\n            var temp = [];\r\n            if (key !== 0) {\r\n                // (key);\r\n\r\n                column.map((row, key) => {\r\n                    if (row === true) {\r\n                        temp.push(key - 1);\r\n                    }\r\n                });\r\n\r\n                //   console.log(temp);\r\n                setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n            }\r\n        });\r\n    }, [cells]);\r\n\r\n    const PreviousWeek = () => {\r\n        //Reset current cells\r\n\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.subtract(7, \"days\"));\r\n        setendWeek(endWeek.subtract(7, \"days\"));\r\n        //console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n        populate(startWeek, endWeek);\r\n    };\r\n\r\n    React.useEffect(() => {}, [startWeek]);\r\n\r\n    const NextWeek = () => {\r\n        //Reset current cells\r\n\r\n        // console.log(startWeek.format(\"DD/MM\"));\r\n        setstartWeek(startWeek.add(7, \"days\"));\r\n        setendWeek(endWeek.add(7, \"days\"));\r\n        // console.log(startWeek.format(\"DD/MM\"), endWeek.format(\"DD/MM\"));\r\n\r\n        getAvailableSlots(startWeek, endWeek);\r\n\r\n        populate(startWeek, endWeek);\r\n\r\n        // getAvailableSlots(startWeek, endWeek)\r\n    };\r\n\r\n    const populate = (start, end) => {\r\n        setCellData([]);\r\n        var now = start.clone(),\r\n            dates = [];\r\n\r\n        while (now.isSameOrBefore(end)) {\r\n            dates.push(now.format(\"YYYY-MM-DD\"));\r\n            now.add(1, \"days\");\r\n        }\r\n        setCal(dates);\r\n\r\n        if (cellData.length === 0) {\r\n            // console.log(\"0\");\r\n            time.map((time) => {\r\n                var temp = [];\r\n                dates.map((date) => {\r\n                    // temp.push(date + \" \" + time);\r\n                    temp.push({ date: date, time: time });\r\n                });\r\n\r\n                setCellData((cellData) => [...cellData, temp]);\r\n            });\r\n        } else {\r\n            //   console.log(\"pop\");\r\n        }\r\n    };\r\n\r\n    function selectUserSlot(date, time) {\r\n        // console.log(\"user slot\", date + time);\r\n\r\n        // var temp = [date + time]\r\n        // setuserSlots(temp);\r\n\r\n        var cellCollection = [];\r\n        var temp = aslot[date];\r\n        // console.log(time, date, temp);\r\n\r\n        cellCollection.push(time + date);\r\n\r\n        var newTime = moment(time, \"hh:mm A\")\r\n            .add(30, \"minutes\")\r\n            .format(\"hh:mm A\");\r\n        var ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\").valueOf();\r\n        var tss;\r\n        if (temp.find((el) => el === newTime)) {\r\n            // console.log(\"found\", date);\r\n            cellCollection.push(newTime + date);\r\n            //  console.log(cellCollection);\r\n            tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n                .add(60, \"minutes\")\r\n                .valueOf();\r\n\r\n            props.parentCallback(ts, tss, date);\r\n        } else {\r\n            //  console.log(\"not_found\");\r\n            var prevTime = moment(newTime, \"hh:mm A\")\r\n                .subtract(60, \"minutes\")\r\n                .format(\"hh:mm A\");\r\n            cellCollection.push(prevTime + date);\r\n            //  console.log(cellCollection);\r\n            tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n                .subtract(30, \"minutes\")\r\n                .valueOf();\r\n\r\n            ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n                .add(30, \"minutes\")\r\n                .valueOf();\r\n\r\n            props.parentCallback(tss, ts, date);\r\n        }\r\n\r\n        setuserSlots(cellCollection);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        populate(startWeek, endWeek);\r\n    }, [userSlots]);\r\n\r\n    const getAvailableSlots = (start, end) => {\r\n        var startDate = start.format(\"YYYY-MM-DD\");\r\n        var endDate = end.format(\"YYYY-MM-DD\");\r\n        //  console.log(startDate, endDate);\r\n        // console.log(\r\n        //   \"http://doodlebluelive.com:2307/v1/trainer/calenderView?startDate=\" +\r\n        //     startDate +\r\n        //     \"&endDate=\" +\r\n        //     endDate +\r\n        //     \"&timeBlock=\" +\r\n        //     TimeSlot\r\n        // );\r\n        fetch(\r\n            \"http://doodlebluelive.com:2307/v1/trainer/calenderView?trainerId=\" +\r\n                props.id +\r\n                \"&startDate=\" +\r\n                startDate +\r\n                \"&endDate=\" +\r\n                endDate +\r\n                \"&timeBlock=\" +\r\n                TimeSlot,\r\n            {\r\n                method: \"GET\", // or 'PUT'\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    // Authorization: localStorage.getItem(\"token\"),\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setData(json.data);\r\n            });\r\n    };\r\n\r\n    let tableData2;\r\n\r\n    if (cellData.length === 0) {\r\n        //console.log(\"hitu\");\r\n    } else {\r\n        tableData2 = (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[0].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">MON</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[1].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">TUES</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[2].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">WED</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[3].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">THURS</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[4].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">FRI</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[5].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SAT</div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"table_header_number\">\r\n                                {cal[6].slice(8, 10)}\r\n                            </div>\r\n                            <div className=\"table_header_txt\">SUN</div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[0]}</td>\r\n                        {cellData[0].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        // console.log(item.date + item.time, userSlots, \"blah\");\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                                className=\"avaiable_slot\"\r\n                                            >\r\n                                                {item.time}\r\n                                            </td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[1]}</td>\r\n                        {cellData[1].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                                className=\"avaiable_slot\"\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[2]}</td>\r\n                        {cellData[2].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[3]}</td>\r\n                        {cellData[3].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[4]}</td>\r\n                        {cellData[4].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"user_time_slot\">{time[5]}</td>\r\n                        {cellData[5].map((item) => {\r\n                            if (aslotKeys.length !== 0) {\r\n                                if (aslotKeys.find((el) => el === item.date)) {\r\n                                    if (\r\n                                        aslot[item.date].find(\r\n                                            (l) => l === item.time\r\n                                        )\r\n                                    ) {\r\n                                        return userSlots.find(\r\n                                            (el) => el === item.time + item.date\r\n                                        ) ? (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#53bfd2\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        ) : (\r\n                                            <td\r\n                                                style={{\r\n                                                    backgroundColor: \"#fff\",\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    selectUserSlot(\r\n                                                        item.date,\r\n                                                        item.time\r\n                                                    )\r\n                                                }\r\n                                            ></td>\r\n                                        );\r\n                                    } else {\r\n                                        return <td></td>;\r\n                                    }\r\n                                } else {\r\n                                    return <td></td>;\r\n                                }\r\n                            } else {\r\n                                return <td></td>;\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"outter_table_user\">\r\n            <div className=\"table_user\">\r\n                <div className=\"table_inner_trainer\">\r\n                    <div className=\"table_date\">\r\n                        {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n                            moment().startOf(\"isoWeek\").format(\"YYYY-MM-DD\"),\r\n                            \"day\"\r\n                        ) ? (\r\n                            <div>\r\n                                <img\r\n                                    src={BackIcon}\r\n                                    onClick={PreviousWeek}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                />{\" \"}\r\n                                &ensp;\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <img\r\n                                    src={BackIcon}\r\n                                    disabled=\"true\"\r\n                                    style={{\r\n                                        opacity: \"0.5\",\r\n                                        cursor: \"not-allowed\",\r\n                                    }}\r\n                                />{\" \"}\r\n                                &ensp;\r\n                            </div>\r\n                        )}\r\n                        &ensp;\r\n                        <div className=\"date_week\">\r\n                            {startWeek.format(\"DD\")} - {endWeek.format(\"DD\")}{\" \"}\r\n                            &ensp;\r\n                            {startWeek.format(\"MMMM\")} &ensp;{\" \"}\r\n                            {startWeek.format(\"yyyy\")}{\" \"}\r\n                        </div>\r\n                        <img\r\n                            src={NextIcon}\r\n                            onClick={NextWeek}\r\n                            style={{ cursor: \"pointer\" }}\r\n                        />{\" \"}\r\n                        &ensp; &ensp;\r\n                    </div>\r\n                    <select\r\n                        value={TimeSlot}\r\n                        onChange={(e) => {\r\n                            setTimeSlot(e.target.value);\r\n                            // console.log(e.target.value);\r\n                            if (e.target.value === \"EarlyBird\") {\r\n                                setTime(early_bird);\r\n                                // console.log(\"early_bird\");\r\n                            }\r\n\r\n                            if (e.target.value === \"RiseAndShine\") {\r\n                                setTime(rise_shine);\r\n                                //console.log(\"RiseAndShine\");\r\n                            }\r\n\r\n                            if (e.target.value === \"MidDayBreak1\") {\r\n                                setTime(mid_day);\r\n                                // console.log(\"MidDayBreak\");\r\n                            }\r\n\r\n                            if (e.target.value === \"MidDayBreak2\") {\r\n                                setTime(mid_day_2);\r\n                                //console.log(\"MidDayBreak2\");\r\n                            }\r\n\r\n                            if (e.target.value === \"HappyHours\") {\r\n                                setTime(happy_hour);\r\n                                //console.log(\"HappyHours\");\r\n                            }\r\n\r\n                            if (e.target.value === \"NeverTooLate\") {\r\n                                setTime(never_too_late);\r\n                                //console.log(\"NeverTooLate\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        <option value=\"EarlyBird\">Early Bird</option>\r\n                        <option value=\"RiseAndShine\">Rise & Shine</option>\r\n                        <option value=\"MidDayBreak1\">Mid-Day Break</option>\r\n                        <option value=\"MidDayBreak2\">Mid-Day AfterNoon</option>\r\n                        <option value=\"HappyHours\">Happy Hour</option>\r\n                        <option value=\"NeverTooLate\">Never Too Late</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {/* {tableData} */}\r\n\r\n            <br></br>\r\n            {/* {tableData2} */}\r\n\r\n            {tableData2}\r\n\r\n            <ButtonSection />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ButtonSection = () => {\r\n    return (\r\n        <div className=\"schedular_slots\">\r\n            <div className=\"items_slots\">\r\n                <div className=\"item_slot1\">\r\n                    <div className=\"indicator\"></div>\r\n                    <h5>AVAILABLE</h5>\r\n                </div>\r\n                <div className=\"item_slot2\">\r\n                    <div className=\"indicator2\"></div>\r\n                    <h5>UNAVAILABLE</h5>{\" \"}\r\n                </div>\r\n                <div className=\"item_slot3\">\r\n                    <div className=\"indicator3\"></div>\r\n                    <h5>BOOKED SLOT</h5>{\" \"}\r\n                </div>\r\n                <div className=\"item_slot4\">\r\n                    <button\r\n                        onClick={() => {\r\n                            history.push(\"/user/session-type\");\r\n                        }}\r\n                    >\r\n                        BOOK a session <BlueArrowButton />{\" \"}\r\n                    </button>{\" \"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserScheduler;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Profile Picture.ca592372.png\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}