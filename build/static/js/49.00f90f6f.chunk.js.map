{"version":3,"sources":["component/FindYourTrainer/TrainersDetails/index.js","assets/files/FindTrainer/onHover.svg","assets/files/SignUp/Arrow.svg","assets/files/SignUp/ArrowSecondary.svg"],"names":["HeadingTrainer","className","TrainerCards","props","useState","bestMatchData","setbestMatchData","useEffect","content","Object","keys","map","item","console","log","value","setValue","ref","useRef","handleMouseOver","handleMouseOut","node","current","addEventListener","removeEventListener","useHover","hoverRef","isHovered","visible","setVisible","no_match","length","style","alignleft","data","index","src","objectFit","role","describe","to","backgroundColor","onClick","history","push","pathname","state","trainerId","trainerData","onImage","alt","showCard","Arrow"],"mappings":"kMAoCA,IAgGMA,EAAiB,WACrB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oDACA,sLAWKC,UAjHM,SAACC,GACpB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACRD,EAAiBH,EAAMK,SAEvBC,OAAOC,KAAKL,GAAeM,KAAI,SAACC,GAC9BC,QAAQC,IAAIT,EAAcO,GAAO,cAGrC,MArCF,WACE,MAA0BR,oBAAS,GAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAEMC,EAAMC,iBAAO,MAEbC,EAAkB,kBAAMH,GAAS,IACjCI,EAAiB,kBAAMJ,GAAS,IAkBtC,OAhBAT,qBACE,WACE,IAAMc,EAAOJ,EAAIK,QACjB,GAAID,EAIF,OAHAA,EAAKE,iBAAiB,YAAaJ,GACnCE,EAAKE,iBAAiB,WAAYH,GAE3B,WACLC,EAAKG,oBAAoB,YAAaL,GACtCE,EAAKG,oBAAoB,WAAYJ,MAI3C,CAACH,IAGI,CAACA,EAAKF,GAaiBU,GAA9B,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BvB,mBAAS,GAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KAKIC,EAAW,wBAKf,OAJ6B,IAAzBzB,EAAc0B,SAChBD,EAAW,oBAAI7B,UAAU,WAAd,+BAIX,mCACE,sBAAKA,UAAU,YAAf,UACE,cAACD,EAAD,IACC8B,EACD,qBAAK7B,UAAU,MAAM+B,MAAO,CAAEC,UAAW,QAAzC,SAGGxB,OAAOC,KAAKL,GAAeM,KAAI,SAACuB,EAAMC,GACrC,OACE,sBAAKlC,UAAU,OAAf,UACE,qBACEA,UAAU,eACVmC,IAAI,wKACJJ,MAAO,CAAEK,UAAW,WAEtB,sBAAKpC,UAAU,YAAf,UACE,+BACGI,EAAc6B,GAAd,UADH,SAEG7B,EAAc6B,GAAd,YAEH,6BAAKA,EAAKI,OACV,8BACGJ,EAAKK,SACN,cAAC,IAAD,CAAMC,GAAG,UAAT,6BAGJ,qBAAKvC,UAAU,cAAf,SACE,yBACEgB,IAAKS,EACLM,MAAO,CACLS,gBAAiBd,EAAY,MAAQ,WAEvCe,QAAS,WACP7B,QAAQC,IAAIT,EAAc6B,IAC1BS,UAAQC,KAAK,CACXC,SAAU,kBACVC,MAAO,CAAEC,UAAW1C,EAAc6B,GAAd,GAA2Bc,YAAa3C,EAAc6B,OAThF,2BAcE,qBAAKE,IAAKa,UAASC,IAAI,SAMvB,qCACO,IACL,+BAEI7C,EAAc6B,GAAd,qDA1CeC,QAsDjC,qBAAKlC,UAAU,WAAf,SACE,yBAAQA,UAAU,eAAeyC,QA1EnB,WACpBb,GAAW,SAACsB,GAAD,OAAcA,EAAW,MAyE9B,UACGvB,EAAU,sBAAwB,KACnC,qBAAKQ,IAAKgB,UAAOF,IAAI,qB,iCC5HjC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,4C","file":"static/js/49.00f90f6f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n// import { TrainerData } from \"./TrainerData\";\r\nimport \"./trainer.sass\";\r\nimport onHoverImage from \"../../../assets/files/FindTrainer/onHover.svg\";\r\nimport onImage from \"../../../assets/files/SignUp/Arrow.svg\";\r\nimport Arrow from \"../../../assets/files/SignUp/ArrowSecondary.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"helpers\";\r\n\r\nfunction useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener(\"mouseover\", handleMouseOver);\r\n        node.addEventListener(\"mouseout\", handleMouseOut);\r\n\r\n        return () => {\r\n          node.removeEventListener(\"mouseover\", handleMouseOver);\r\n          node.removeEventListener(\"mouseout\", handleMouseOut);\r\n        };\r\n      }\r\n    },\r\n    [ref] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}\r\n\r\nconst TrainerCards = (props) => {\r\n  const [bestMatchData, setbestMatchData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setbestMatchData(props.content);\r\n\r\n    Object.keys(bestMatchData).map((item) => {\r\n      console.log(bestMatchData[item], \"best\");\r\n    });\r\n  });\r\n  const [hoverRef, isHovered] = useHover();\r\n  const [visible, setVisible] = useState(3);\r\n  const showMoreItems = () => {\r\n    setVisible((showCard) => showCard + 3);\r\n  };\r\n\r\n  let no_match = <div></div>;\r\n  if (bestMatchData.length === 0) {\r\n    no_match = <h1 className=\"no_match\">No Matches found</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <HeadingTrainer />\r\n        {no_match}\r\n        <div className=\"row\" style={{ alignleft: \"auto\" }}>\r\n          {/* {console.log(\"dd\", bestMatchData[0][\"firstName\"])} */}\r\n\r\n          {Object.keys(bestMatchData).map((data, index) => {\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src=\"https://images.unsplash.com/photo-1484515991647-c5760fcecfc7?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTR8fG1lbnxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                  style={{ objectFit: \"cover\" }}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h3>\r\n                    {bestMatchData[data][\"firstName\"]}&ensp;\r\n                    {bestMatchData[data][\"lastName\"]}\r\n                  </h3>\r\n                  <h6>{data.role}</h6>\r\n                  <p>\r\n                    {data.describe}\r\n                    <Link to=\"profile\">Read More</Link>\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-button\">\r\n                  <button\r\n                    ref={hoverRef}\r\n                    style={{\r\n                      backgroundColor: isHovered ? \"red\" : \"#53BFD2\",\r\n                    }}\r\n                    onClick={() => {\r\n                      console.log(bestMatchData[data]);\r\n                      history.push({\r\n                        pathname: \"/user/scheduler\",\r\n                        state: { trainerId: bestMatchData[data][\"id\"], trainerData: bestMatchData[data] },\r\n                      });\r\n                    }}\r\n                  >\r\n                    book a session\r\n                    <img src={onImage} alt=\"icon\" />\r\n                    {/* {isHovered ? (\r\n                      <img src={onHoverImage} alt=\"icon\" />\r\n                    ) : (\r\n                      <img src={onImage} alt=\"icon\" />\r\n                    )} */}\r\n                    <p>\r\n                      from{\" \"}\r\n                      <span>\r\n                        {\r\n                          bestMatchData[data][\"oneOnOnePricing\"][\r\n                            \"inPersonAtClientLocation\"\r\n                          ]\r\n                        }\r\n                      </span>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"showmore\">\r\n          <button className=\"showmore_btn\" onClick={showMoreItems}>\r\n            {visible ? \"View More Trainers \" : null}\r\n            <img src={Arrow} alt=\"icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeadingTrainer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"wrapper_heading\">\r\n          <h2>Your Motto Matches</h2>\r\n          <p>\r\n            These matches are the perfect fit based on your filters. The prices\r\n            shown are for 1:1 sessions. Click on the trainer profile for group\r\n            rates!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainerCards;\r\n","export default __webpack_public_path__ + \"static/media/onHover.de7bc9ac.svg\";","export default __webpack_public_path__ + \"static/media/Arrow.43fbbb90.svg\";","export default __webpack_public_path__ + \"static/media/ArrowSecondary.2dfb6299.svg\";"],"sourceRoot":""}