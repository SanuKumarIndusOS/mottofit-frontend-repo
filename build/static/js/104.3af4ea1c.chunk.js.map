{"version":3,"sources":["component/AdminDashboard/AdminComponents/AdminUserSection/datatable/index.js","component/AdminDashboard/AdminComponents/AdminUserSection/UserMain/Pagination.js","component/AdminDashboard/AdminComponents/AdminUserSection/UserMain/Main.js","../node_modules/reactstrap/es/Input.js"],"names":["Datatable","userList","loading","fetchAllTrainers","noTrainer","columns","dataField","text","sort","filter","textFilter","column","Object","keys","console","log","trainer","bootstrap4","keyField","data","filterFactory","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","className","map","number","onClick","href","Main","React","useState","setUserList","noUser","setNoUser","currentPage","setCurrentPage","setLoading","q","setQ","useEffect","fetch","method","headers","Headers","Authorization","localStorage","getItem","then","response","json","rows","indexOfLastPost","indexOfFirstPost","currentPosts","slice","total","style","width","type","placeholder","value","onChange","e","target","row","email","toLowerCase","indexOf","firstName","length","pageNumber","propTypes","children","PropTypes","node","string","size","oneOfType","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","props","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","Component","defaultProps"],"mappings":"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","file":"static/js/104.3af4ea1c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.css\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.css\";\r\n// import \"node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\nconst Datatable = ({ userList, fetchAllTrainers, loading, noTrainer }) => {\r\n    if (loading) {\r\n        return <h2>loading...</h2>;\r\n    }\r\n\r\n    // const formateButton = () => {\r\n    //     function ChangeApproval(id, state) {\r\n    //         const data = { trainerStatus: state };\r\n    //         useEffect(() => {\r\n    //             fetch(\r\n    //                 \"http://doodlebluelive.com:2307/v1/trainer?trainerId=\" + id,\r\n    //                 {\r\n    //                     method: \"PUT\", // or 'PUT'\r\n    //                     headers: {\r\n    //                         \"Content-Type\": \"application/json\",\r\n    //                         Authorization:\r\n    //                             \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmYjQ4NzFkLTAyNjgtNDk3ZC04MWU3LTBhZTY5NjViNTAxNSIsInR5cGUiOiJhZG1pbiIsImlhdCI6MTYyMTUxMTM5OSwiZXhwIjoxNjIxNTE4NTk5fQ.N1CGenuza8yyR_FnczruJiqbFvl-crZmiw1lrvTYWnM\",\r\n    //                     },\r\n    //                     body: JSON.stringify(data),\r\n    //                 }\r\n    //             )\r\n    //                 .then((response) => response.json())\r\n    //                 .then((data) => {\r\n    //                     console.log(\"Success:\", data);\r\n    //                     fetchAllTrainers();\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     console.error(\"Error:\", error);\r\n    //                 });\r\n    //         }, []);\r\n    // }\r\n\r\n    //     return (\r\n    //         <>\r\n    //             {trainerList.map((item) => {\r\n    //                 var approve;\r\n    //                 if (item[\"trainerStatus\"] === \"approved\") {\r\n    //                     approve = (\r\n    //                         <div\r\n    //                             onClick={() =>\r\n    //                                 ChangeApproval(item[\"id\"], \"disapproved\")\r\n    //                             }\r\n    //                             className=\"btn btn-danger\"\r\n    //                         >\r\n    //                             Disapprove\r\n    //                         </div>\r\n    //                     );\r\n    //                 } else {\r\n    //                     approve = (\r\n    //                         <div\r\n    //                             onClick={() =>\r\n    //                                 ChangeApproval(item[\"id\"], \"approved\")\r\n    //                             }\r\n    //                             className=\"btn btn-success\"\r\n    //                         >\r\n    //                             Approve\r\n    //                         </div>\r\n    //                     );\r\n    //                 }\r\n    //                 return (\r\n    //                     <>\r\n    //                         <tr>\r\n    //                             <div>\r\n    //                                 {\" \"}\r\n    //                                 <button style={{ border: \"none\" }}>\r\n    //                                     {approve}\r\n    //                                 </button>{\" \"}\r\n    //                             </div>\r\n    //                         </tr>\r\n    //                     </>\r\n    //                 );\r\n    //             })}\r\n    //         </>\r\n    //     );\r\n    // };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"firstName\",\r\n            text: \"First Name\",\r\n            sort: true,\r\n            filter: textFilter(),\r\n        },\r\n        {\r\n            dataField: \"lastName\",\r\n            text: \"Last Name\",\r\n            sort: true,\r\n            filter: textFilter(),\r\n        },\r\n        { dataField: \"email\", text: \"Email\", filter: textFilter() },\r\n        { dataField: \"location\", text: \"Location\", filter: textFilter() },\r\n        {\r\n            dataField: \"phoneNo\",\r\n            text: \"Phone Number\",\r\n            filter: textFilter(),\r\n        },\r\n        // {\r\n        //     // dataField: \"trainerStatus\",\r\n        //     text: \"Approve\",\r\n        //     // formatter: formateButton,\r\n        //     // formatter: formateButton,\r\n        //     // filter: textFilter(),\r\n        // },\r\n    ];\r\n\r\n    const column = userList && Object.keys(userList);\r\n    console.log(column, \"column\");\r\n\r\n    const trainer = noTrainer && Object.keys(noTrainer);\r\n    console.log(trainer, \"noTrainer\");\r\n\r\n    // approveButton = () => {\r\n    //     {\r\n    //         trainerList.map((item) => {\r\n    //             var approve;\r\n    //             if (item[\"trainerStatus\"] === \"approved\") {\r\n    //                 approve = (\r\n    //                     <div\r\n    //                         onClick={() =>\r\n    //                             ChangeApproval(item[\"id\"], \"disapproved\")\r\n    //                         }\r\n    //                         className=\"btn btn-danger\"\r\n    //                     >\r\n    //                         Disapprove\r\n    //                     </div>\r\n    //                 );\r\n    //             } else {\r\n    //                 approve = (\r\n    //                     <div\r\n    //                         onClick={() =>\r\n    //                             ChangeApproval(item[\"id\"], \"approved\")\r\n    //                         }\r\n    //                         className=\"btn btn-success\"\r\n    //                     >\r\n    //                         Approve\r\n    //                     </div>\r\n    //                 );\r\n    //             }\r\n    //             return (\r\n    //                 <>\r\n    //                     <tr>\r\n    //                         <div>\r\n    //                             {\" \"}\r\n    //                             <button style={{ border: \"none\" }}>\r\n    //                                 {approve}\r\n    //                             </button>{\" \"}\r\n    //                         </div>\r\n    //                     </tr>\r\n    //                 </>\r\n    //             );\r\n    //         });\r\n    //     }\r\n    // };\r\n    console.log(noTrainer, \" data\");\r\n    return (\r\n        <>\r\n            <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                columns={columns}\r\n                data={userList}\r\n                filter={filterFactory()}\r\n            />\r\n            {/* <Table bordered hover size=\"sm\" responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"row\">First Name</th>\r\n                        <th scope=\"row\">Last Name</th>\r\n                        <th scope=\"row\">Email</th>\r\n                        <th scope=\"row\">Phone Number</th>\r\n                        <th scope=\"row\">Location</th>\r\n                        <th scope=\"row\">Expertise</th>\r\n                        <th scope=\"row\">servicableLocation</th>\r\n                        <th scope=\"row\">Trainer Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {trainerList.map((item) => {\r\n                        return (\r\n                            <>\r\n                                <tr>\r\n                                    <td> {item[\"firstName\"]}</td>\r\n                                    <td> {item[\"lastName\"]}</td>\r\n                                    <td> {item[\"email\"]}</td>\r\n                                    <td> {item[\"phoneNumber\"]}</td>\r\n                                    <td> {item[\"location\"]}</td>\r\n                                    <td> {item[\"areaOfExpertise\"]}</td>\r\n                                    <td> {item[\"servicableLocation\"]}</td>\r\n                                    <td> {item[\"trainerStatus\"]}</td>\r\n                                </tr>\r\n                            </>\r\n                        );\r\n                    })}\r\n                    \r\n                </tbody>\r\n            </Table> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Datatable;\r\n","import React from \"react\";\r\nimport { PaginationItem } from \"reactstrap\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map((number) => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a\r\n                            onClick={() => paginate(number)}\r\n                            href=\"!#\"\r\n                            className=\"page-link\"\r\n                        >\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Datatable from \"../datatable/index\";\r\nimport Pagination from \"../UserMain/Pagination\";\r\nimport { Input } from \"reactstrap\";\r\nimport \"./styles.scss\";\r\n\r\n// require(\"es6-promise\").polyfill();\r\n// require(\"isomorphic-fetch\");\r\n\r\nconst Main = () => {\r\n    const [userList, setUserList] = React.useState([]);\r\n    const [noUser, setNoUser] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2000);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [q, setQ] = useState(\"\");\r\n\r\n    console.log(userList, \"useState\");\r\n    console.log(noUser, \"trainer\");\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchAllTrainers();\r\n    }, []);\r\n\r\n    function fetchAllTrainers() {\r\n        setLoading(true);\r\n\r\n        fetch(\r\n            \"http://doodlebluelive.com:2307/v1/admin/users?limit=50&page=1\",\r\n            // `http://doodlebluelive.com:2307/v1/admin/trainers?limit=${postsPerPage}&page=${currentPage}`,\r\n\r\n            {\r\n                method: \"get\",\r\n                headers: new Headers({\r\n                    Authorization: localStorage.getItem(\"admin-token\"),\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setUserList(data[\"data\"][\"list\"]);\r\n                setNoUser(data[\"data\"][\"pageMetaData\"]);\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function search(rows) {\r\n        return rows.filter(\r\n            (row) =>\r\n                row.email.toLowerCase().indexOf(q.toLowerCase()) > -1 ||\r\n                row.firstName.toLowerCase().indexOf(q.toLowerCase()) > -1\r\n            // row.location.toString().indexOf(q.toLowerCase()) > -1\r\n        );\r\n    }\r\n\r\n    // get current page\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = userList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    //Change page\r\n\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n    return (\r\n        <div className=\"outter_container_AD container\">\r\n            <h2>Admin User's Data </h2>\r\n            <div className=\"trainer_admin\">\r\n                <div className=\"views_trainer\">\r\n                    <p>No of</p>\r\n                    <h3>\r\n                        User:{\" \"}\r\n                        {loading ? (\r\n                            <span>Loading...</span>\r\n                        ) : (\r\n                            <span>{noUser.total}</span>\r\n                        )}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <Input\r\n                style={{ width: \"20%\" }}\r\n                type=\"text\"\r\n                placeholder=\"Search for User's\"\r\n                value={q}\r\n                onChange={(e) => setQ(e.target.value)}\r\n            />\r\n\r\n            <Datatable\r\n                userList={search(currentPosts)}\r\n                loading={loading}\r\n                // trainerList={searchByLocation(trainerList)}\r\n            />\r\n            <Pagination\r\n                postsPerPage={postsPerPage}\r\n                totalPosts={userList.length}\r\n                paginate={paginate}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"sourceRoot":""}