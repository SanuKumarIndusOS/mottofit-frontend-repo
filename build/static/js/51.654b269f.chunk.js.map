{"version":3,"sources":["component/TrainerOnBoard/TrainerAboutYou/index.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg"],"names":["locations","label","value","gender","AboutTrainer","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","trainerDetail","useForm","register","errors","handleSubmit","useState","location","dob","email","phone","websiteURL","instagram","firstName","aboutTrainerData","setAboutTrainerData","error","useEffect","Object","keys","length","tempData","websiteLink","instaHandle","then","console","log","className","placeholder","type","name","style","textTransform","onChange","e","target","title","list","ref","required","message","moment","diff","disableDropdown","disableAreaCodes","countryCodeEditable","inputProps","src","Web","alt","Instagram","onClick","storeData","history","push","WaterMark"],"mappings":"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","file":"static/js/51.654b269f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport Instagram from \"../../../assets/files/SVG/Insta Icon.svg\";\nimport Web from \"../../../assets/files/SVG/Web Icon.svg\";\n\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\nimport { useForm } from \"react-hook-form\";\n\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { history } from \"helpers\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Dropdown } from \"reactjs-dropdown-component\";\nimport { trainerDetail } from \"action/trainerAct\";\nimport \"./dropdown.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\n// import useForm from \"./useForm\";\n// import validateInfo from \"./validation\";\n\nconst locations = [\n    {\n        label: \"New York City\",\n        value: \"New York City\",\n    },\n    {\n        label: \"Miami\",\n        value: \"Miami\",\n    },\n    {\n        label: \"Hamptons\",\n        value: \"Hamptons\",\n    },\n    {\n        label: \"Palm Beach\",\n        value: \"Palm Beach\",\n    },\n];\n\nconst gender = [\n    {\n        label: \"Male\",\n        value: \"male\",\n    },\n    {\n        label: \"Female\",\n        value: \"female\",\n    },\n];\nconst AboutTrainerFC = ({\n    updateTrainerDetails,\n    details,\n    trainerPersonalData,\n    trainerDetail,\n    // submitForm,\n}) => {\n    const { register, errors, handleSubmit } = useForm();\n    // const {\n    //     aboutTrainerData,\n    //     handleFormSubmit,\n    //     error,\n    //     setAboutTrainerData,\n    //     // dataSubmit,\n    // } = useForm(validateInfo, submitForm);\n    const [aboutTrainerData, setAboutTrainerData] = useState({\n        location: \"\",\n        dob: \"\",\n        email: \"\",\n        gender: \"\",\n        phone: \"\",\n        websiteURL: \"\",\n        instagram: \"\",\n        firstName: \"\",\n    });\n    const [error, setError] = useState({});\n\n    const handleTrainerBackground = () => {\n        const storeData = {\n            details: {\n                ...details,\n                firstName: aboutTrainerData.firstName,\n                dob: aboutTrainerData.dob,\n                email: aboutTrainerData.email,\n                gender: aboutTrainerData.gender,\n                phone: aboutTrainerData.phone,\n                location: aboutTrainerData.location,\n                websiteLink: aboutTrainerData.websiteURL,\n                instaHandle: aboutTrainerData.instagram,\n            },\n        };\n\n        history.push(`/trainer/background`);\n        updateTrainerDetails(storeData);\n    };\n\n    useEffect(() => {\n        if (Object.keys(details).length > 3) {\n            let tempData = {\n                location: details.location,\n                dob: details.dob,\n                email: details.email,\n                gender: details.gender,\n                phone: details.phone,\n                websiteURL: details.websiteLink,\n                instagram: details.instaHandle,\n                firstName: details.firstName,\n            };\n            setAboutTrainerData(tempData);\n        }\n\n        trainerDetail().then((data) => {\n            console.log(data, \"datadata\");\n            setAboutTrainerData({\n                ...aboutTrainerData,\n                phone: data[\"phoneNumber\"],\n                email: data[\"email\"],\n                firstName: data[\"firstName\"] + \" \" + data[\"lastName\"],\n            });\n        });\n    }, []);\n\n    return (\n        <>\n            <div className=\"container main\">\n                <div className=\"wrapper_about\">\n                    <h2>Tell us a little bit about you</h2>\n                    {/* <p>\n                        *Lorem Ipsum is simply dummy text of the printing and\n                        typesetting industry. Lorem ipsum has been the. *All\n                        these fields are mandatory.{\" \"}\n                    </p> */}\n                    <br></br>\n                    <div className=\"outter_form\">\n                        <form\n                            className=\"wrapper_inputs\"\n                            // onSubmit={handleFormSubmit}\n                        >\n                            <div className=\"wrapper_innerInput\">\n                                <label>Name*</label>\n                                <input\n                                    placeholder=\"Name\"\n                                    type=\"name\"\n                                    name=\"name\"\n                                    style={{ textTransform: \"capitalize\" }}\n                                    onChange={(e) =>\n                                        setAboutTrainerData({\n                                            ...aboutTrainerData,\n                                            firstName: e.target.value,\n                                        })\n                                    }\n                                    value={aboutTrainerData.firstName}\n                                    name=\"firstName\"\n                                />\n                                {error.firstName && (\n                                    <span>{error.firstName}</span>\n                                )}\n                            </div>\n\n                            <div className=\"wrapper_innerInput\">\n                                <label className=\"bg_down\">Location*</label>\n                                <div className=\"iconwrapper\">\n                                    <Dropdown\n                                        className=\"custom_dropdown\"\n                                        title=\"Select Location\"\n                                        list={locations}\n                                        value={aboutTrainerData.location}\n                                        onChange={(e) => {\n                                            setAboutTrainerData({\n                                                ...aboutTrainerData,\n                                                location: e.value,\n                                            });\n                                        }}\n                                        name=\"location\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"wrapper_innerInput\">\n                                <label>Date of Birth*</label>\n\n                                <input\n                                    placeholder=\"MM/DD/YYYY\"\n                                    type=\"date\"\n                                    value={aboutTrainerData.dob}\n                                    onChange={(e) =>\n                                        setAboutTrainerData({\n                                            ...aboutTrainerData,\n                                            dob: e.target.value,\n                                        })\n                                    }\n                                    name=\"dob\"\n                                    ref={register({\n                                        required:\n                                            \"Mandatory fields cannot be empty\",\n                                    })}\n                                />\n                                {errors.dob && (\n                                    <span>{errors.dob.message}</span>\n                                )}\n                                {aboutTrainerData.dob &&\n                                    moment().diff(\n                                        aboutTrainerData.dob,\n                                        \"years\",\n                                        false\n                                    ) <= 21 && (\n                                        <span>\n                                            Trainer should be more than 21 years\n                                            of age\n                                        </span>\n                                    )}\n                            </div>\n                            <div className=\"wrapper_innerInput\">\n                                <label>Gender*</label>\n                                <div className=\"iconwrapper\">\n                                    <Dropdown\n                                        className=\"custom_dropdown\"\n                                        title=\"Select Gender\"\n                                        list={gender}\n                                        value={aboutTrainerData.gender}\n                                        onChange={(e) => {\n                                            setAboutTrainerData({\n                                                ...aboutTrainerData,\n                                                gender: e.value,\n                                            });\n                                        }}\n                                        name=\"gender\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"wrapper_innerInput\">\n                                <label>Email*</label>\n                                <input\n                                    placeholder=\"Email\"\n                                    type=\"email\"\n                                    value={aboutTrainerData.email}\n                                    onChange={(e) =>\n                                        setAboutTrainerData({\n                                            ...aboutTrainerData,\n                                            email: e.target.value,\n                                        })\n                                    }\n                                    name=\"email\"\n                                />\n                            </div>\n                            <div className=\"wrapper_innerInput\">\n                                <label>Phone*</label>\n\n                                <ReactPhoneInput\n                                    type=\"phone\"\n                                    disableDropdown\n                                    disableAreaCodes\n                                    countryCodeEditable={false}\n                                    value={aboutTrainerData.phone}\n                                    placeholder=\"Phone Number\"\n                                    // country=\"us\"\n                                    inputProps={{\n                                        name: \"phone\",\n                                    }}\n                                    name=\"phoneNumber\"\n                                    onChange={(e) =>\n                                        setAboutTrainerData({\n                                            ...aboutTrainerData,\n                                            phone: e,\n                                        })\n                                    }\n                                />\n\n                                {aboutTrainerData.phone &&\n                                    aboutTrainerData.phone.length < 11 && (\n                                        <span>\n                                            Phone Number should contain 10\n                                            digits\n                                        </span>\n                                    )}\n                            </div>\n\n                            <div className=\"wrapper_innerInput\">\n                                <label>Website</label>\n                                <div className=\"iconwrapper\">\n                                    <input\n                                        placeholder=\"Add your website\"\n                                        type=\"text\"\n                                        value={aboutTrainerData.websiteURL}\n                                        onChange={(e) =>\n                                            setAboutTrainerData({\n                                                ...aboutTrainerData,\n                                                websiteURL: e.target.value,\n                                            })\n                                        }\n                                    />\n                                    <img src={Web} alt=\"icon\" />\n                                </div>\n                            </div>\n                            <div className=\"wrapper_innerInput\">\n                                <label>Instagram</label>\n                                <div className=\"iconwrapper\">\n                                    <input\n                                        placeholder=\"Add your Instagram Handle\"\n                                        type=\"text\"\n                                        value={aboutTrainerData.instagram}\n                                        onChange={(e) =>\n                                            setAboutTrainerData({\n                                                ...aboutTrainerData,\n                                                instagram: e.target.value,\n                                            })\n                                        }\n                                    />\n                                    <img src={Instagram} alt=\"icon\" />\n                                </div>\n                            </div>\n\n                            <div className=\"submit_button\">\n                                <button\n                                    type=\"submit\"\n                                    //react hook form\n                                    onClick={handleSubmit(\n                                        handleTrainerBackground\n                                    )}\n                                >\n                                    Continue\n                                    <ArrowHoverBlacked />\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <img\n                        src={WaterMark}\n                        alt=\"icon\"\n                        className=\"about_watermark\"\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    details: state.trainerReducer.details,\n    trainerPersonalData: state.trainerReducer.data,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            updateTrainerDetails,\n            getTrainerDetails,\n            trainerDetail,\n        },\n        dispatch\n    );\n};\n\nconst AboutTrainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AboutTrainerFC);\n\nexport default AboutTrainer;\n","export default __webpack_public_path__ + \"static/media/Insta Icon.1bd62639.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.c205b1b8.svg\";"],"sourceRoot":""}