{"version":3,"sources":["component/TrainerOnBoard/TrainerAvailability/index.js","assets/files/SVG/Arrow Back.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js"],"names":["CyanRadio","withStyles","root","color","cyan","checked","props","closeIcon","src","CloseIcon","alt","TrainerAvailability","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","useLocation","React","useState","selectedValue","setSelectedValue","selectedOneValue","setSelectedOneValue","checkButton","setCheckButton","checkButtonInPerson","setCheckButtonInPerson","open","setOpen","myRef","useRef","hoursPerWeek","preferedTrainingMode","trainingFacilityLocation","willingToTravel","servicableLocation","trainerAvailabilityData","setTrainerAvailabilityData","handleChange","event","target","value","handleOneChange","useEffect","Object","keys","length","trainingFacility","className","ArrowBack","to","onSubmit","e","preventDefault","type","placeholder","onChange","onClick","tempData","includes","filter","prefered","handleTrianingData","name","handleTrainingData","label","inputProps","storeData","location","DOB","dob","gender","instagramProfile","instaHandle","facebookProfile","linkedInProfile","referalCode","areaOfExpertise","trainingAvailability","currentExperience","previousExperience","map","job","orgnization","years","workMode","jobTitle","yearsOfExperience","trainingProcess","profilePicture","interestInMotto","clientAssessment","description","myMotto","images","identityInfromation","identityType","identityNumber","identityImg","insuranceInformation","stripeId","serviceableCity","websiteLink","youtubeLink","certification","certificate","certificateName","certfiedYear","year","oneOnOnePricing","inPersonAtClientLocation","inPersonAtTrainerLocation","virtualSession","passRatefor3Session","passRatefor10Session","socialSessionPricing","inPeronAtClientLocationfor2People","inPeronAtClientLocationfor3People","inPeronAtClientLocationfor4People","inPeronAtTrainerLocationfor2People","inPeronAtTrainerLocationfor3People","inPeronAtTrainerLocationfor4People","virtualSessionfor2People","virtualSessionfor3People","virtualSessionfor4People","classSessionPricing","inPersonAtclientLocationfor15People","inPersonAttrainerLocationfor15People","virtualAtclientLocationfor15People","virtualAttrainerLocationfor15People","virtualSessionfor15People","updateTrainerAvailabilityApi","TrainerApi","body","api","then","catch","error","console","onClose","history","push","center","container","current","styles","boaderRadius","style","textAlign","height","width","padding","WaterMark","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","ref","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","funcs","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"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","file":"static/js/52.ec425c13.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { cyan } from \"@material-ui/core/colors\";\nimport Radio from \"@material-ui/core/Radio\";\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\nimport { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport \"./model.scss\";\nimport CloseIcon from \"../../../assets/files/FindTrainer/Cross.svg\";\nimport { TrainerApi } from \"service/apiVariables\";\nimport { api } from \"service/api\";\nimport { useLocation } from \"react-router-dom\";\nimport { history } from \"helpers\";\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateTrainerDetails } from \"action/trainerAct\";\n\nconst CyanRadio = withStyles({\n    root: {\n        \"&$checked\": {\n            color: cyan[600],\n        },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst TrainerAvailabilityFC = ({ updateTrainerDetails, details }) => {\n    const location = useLocation();\n    const [selectedValue, setSelectedValue] = React.useState(\"a\");\n    const [selectedOneValue, setSelectedOneValue] = React.useState(\"\");\n    const [checkButton, setCheckButton] = useState(true);\n    const [checkButtonInPerson, setCheckButtonInPerson] = useState(true);\n\n    // const [trainerAbout, setTrainerAbout] = React.useState({});\n\n    const [open, setOpen] = useState(false);\n    const myRef = useRef(null);\n\n    const [trainerAvailabilityData, setTrainerAvailabilityData] =\n        React.useState({\n            hoursPerWeek: \"\",\n            preferedTrainingMode: [],\n            trainingFacilityLocation: \"\",\n            willingToTravel: \"0\",\n            servicableLocation: \"\",\n        });\n\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n\n    const handleOneChange = (event) => {\n        setSelectedOneValue(event.target.value);\n\n        setTrainerAvailabilityData({\n            ...trainerAvailabilityData,\n            willingToTravel: event.target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const storeData = {\n            details: {\n                ...details,\n                hoursPerWeek: trainerAvailabilityData.hoursPerWeek,\n                preferedTrainingMode:\n                    trainerAvailabilityData.preferedTrainingMode,\n                trainingFacilityLocation:\n                    trainerAvailabilityData.trainingFacilityLocation,\n                willingToTravel: trainerAvailabilityData.willingToTravel,\n                servicableLocation: trainerAvailabilityData.servicableLocation,\n            },\n        };\n\n        updateTrainerDetails(storeData);\n\n        let data = {\n            location: details.location,\n            DOB: details.dob,\n            gender: details.gender,\n            instagramProfile: details.instaHandle,\n            facebookProfile: \"https://facebook.com/kljdhpersonaltrainer\",\n            linkedInProfile: \"https://linkedin.com/kljdhpersonaltrainer\",\n            referalCode: \"gh678lJJ\",\n            areaOfExpertise: details.areaOfExpertise,\n            trainingAvailability: \"Fulltime\",\n            preferedTrainingMode: trainerAvailabilityData.preferedTrainingMode,\n            willingToTravel: trainerAvailabilityData.willingToTravel,\n            servicableLocation: trainerAvailabilityData.servicableLocation,\n            currentExperience: details.currentExperience,\n            previousExperience: details.previousExperience.map(\n                ({ job, orgnization, years }) => ({\n                    workMode: orgnization,\n                    jobTitle: job,\n                    yearsOfExperience: `${years}`,\n                })\n            ),\n            trainingProcess: details.trainingProcess,\n            profilePicture: \"img location\",\n            interestInMotto: details.interestInMotto,\n            clientAssessment: details.clientAssessment,\n            trainingFacility: selectedValue === \"a\",\n            trainingFacilityLocation: [\n                trainerAvailabilityData.trainingFacilityLocation,\n            ],\n            description: \"\",\n            myMotto: \"\",\n            images: [\"img Location\"],\n            identityInfromation: {\n                identityType: \"\",\n                identityNumber: \"\",\n                identityImg: \"S3 location\",\n            },\n            insuranceInformation: {},\n            stripeId: \"\",\n            hoursPerWeek: trainerAvailabilityData.hoursPerWeek,\n            serviceableCity: trainerAvailabilityData.servicableLocation,\n            websiteLink: details.websiteLink,\n            youtubeLink: \"jfjdld\",\n            certification: details.certification.map(\n                ({ certificate, year }) => ({\n                    certificateName: certificate,\n                    certfiedYear: year,\n                    certification: certificate,\n                })\n            ),\n            oneOnOnePricing: {\n                inPersonAtClientLocation: \"125$\",\n                inPersonAtTrainerLocation: \"130$\",\n                virtualSession: \"120$\",\n                passRatefor3Session: \"100$\",\n                passRatefor10Session: \"150$\",\n            },\n            socialSessionPricing: {\n                inPeronAtClientLocationfor2People: \"$123\",\n                inPeronAtClientLocationfor3People: \"$123\",\n                inPeronAtClientLocationfor4People: \"$123\",\n                inPeronAtTrainerLocationfor2People: \"$123\",\n                inPeronAtTrainerLocationfor3People: \"$123\",\n                inPeronAtTrainerLocationfor4People: \"$123\",\n                virtualSessionfor2People: \"$130\",\n                virtualSessionfor3People: \"$130\",\n                virtualSessionfor4People: \"$130\",\n            },\n            classSessionPricing: {\n                inPersonAtclientLocationfor15People: \"$300\",\n                inPersonAttrainerLocationfor15People: \"$290\",\n                virtualAtclientLocationfor15People: \"$300\",\n                virtualAttrainerLocationfor15People: \"$290\",\n                virtualSessionfor15People: \"$130\",\n            },\n        };\n\n        const { updateTrainerAvailabilityApi } = TrainerApi;\n\n        updateTrainerAvailabilityApi.body = data;\n\n        api({ ...updateTrainerAvailabilityApi })\n            .then(() => {\n                setOpen(true);\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                setOpen(false);\n            });\n    };\n\n    const handleTrianingData = (e, type) => {\n        let tempData = [...trainerAvailabilityData.preferedTrainingMode];\n\n        if (tempData.includes(type)) {\n            tempData = tempData.filter((prefered) => prefered !== type);\n        } else {\n            tempData = [...tempData, type];\n        }\n        setTrainerAvailabilityData({\n            ...trainerAvailabilityData,\n            preferedTrainingMode: tempData,\n        });\n        // console.log(tempData, \"tempDatas\");\n\n        setCheckButton((checkButton) => !checkButton);\n        // setCheckButtonInPerson((checkButtonInPerson) => !checkButtonInPerson);\n    };\n    const handleTrainingData = (e, type) => {\n        let tempData = [...trainerAvailabilityData.preferedTrainingMode];\n\n        if (tempData.includes(type)) {\n            tempData = tempData.filter((prefered) => prefered !== type);\n        } else {\n            tempData = [...tempData, type];\n        }\n        setTrainerAvailabilityData({\n            ...trainerAvailabilityData,\n            preferedTrainingMode: tempData,\n        });\n\n        setCheckButtonInPerson((checkButtonInPerson) => !checkButtonInPerson);\n    };\n\n    useEffect(() => {\n        if (Object.keys(details).length > 3) {\n            const tempData = {\n                hoursPerWeek: details.hoursPerWeek,\n                preferedTrainingMode: details.preferedTrainingMode,\n                trainingFacilityLocation: details.trainingFacilityLocation,\n                willingToTravel: details.willingToTravel,\n                servicableLocation: details.servicableLocation,\n            };\n\n            details.trainingFacility &&\n                setSelectedValue(details.trainingFacility ? \"a\" : \"b\");\n        }\n    }, []);\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"link_wrapper\">\n                    <img src={ArrowBack} alt=\"icon\" />\n                    <div className=\"inner_links\">\n                        <Link to=\"/trainer/background\">\n                            Back to Trainer Background\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"main_wrappercontainer\">\n                    <div className=\"wrapper_inneritem\">\n                        <h1>Highlight your availability on the platform</h1>\n                        <p>\n                            {/* Lorem Ipsum is simply dummy text of the printing and\n                            typesetting industry. Lorem ipsum has been the\n                            industry’s standard dummy text. */}\n                        </p>\n                        <form\n                            className=\"container\"\n                            onSubmit={(e) => e.preventDefault()}\n                        >\n                            <div className=\"content_wrapper\">\n                                <div className=\"item_1\">\n                                    <h6>\n                                        How many hours will you list on Motto?\n                                    </h6>\n                                    <div className=\"inputs_platform\">\n                                        <input\n                                            type=\"number\"\n                                            placeholder=\"10 Hours/Week\"\n                                            value={\n                                                trainerAvailabilityData.hoursPerWeek\n                                            }\n                                            onChange={(e) => {\n                                                setTrainerAvailabilityData({\n                                                    ...trainerAvailabilityData,\n                                                    hoursPerWeek:\n                                                        e.target.value,\n                                                });\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"item_2\">\n                                    <h6>Where are you willing to train?</h6>\n                                    <div className=\"inputs_platform\">\n                                        <button\n                                            onClick={(e) =>\n                                                handleTrianingData(e, \"Online\")\n                                            }\n                                            className={\n                                                checkButton\n                                                    ? \"buttonTrue\"\n                                                    : \"buttonFalse\"\n                                            }\n                                            name=\"trainingLocation\"\n                                        >\n                                            Virtual\n                                        </button>\n                                        <button\n                                            onClick={(e) =>\n                                                handleTrainingData(\n                                                    e,\n                                                    \"inperson\"\n                                                )\n                                            }\n                                            // className={`${\n                                            //     trainerAvailabilityData?.preferedTrainingMode?.includes(\n                                            //         \"inperson\"\n                                            //     )\n                                            //         ? \"active\"\n                                            //         : \"\"\n                                            // }`}\n                                            className={\n                                                checkButtonInPerson\n                                                    ? \"buttonTrue\"\n                                                    : \"buttonFalse\"\n                                            }\n                                            name=\"trainingLocation\"\n                                        >\n                                            In Person\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"item_3\">\n                                    <h6>\n                                        Do you have a facility or location where\n                                        you will train clients?\n                                    </h6>\n                                    <CyanRadio\n                                        checked={selectedValue === \"a\"}\n                                        onChange={handleChange}\n                                        value=\"a\"\n                                        name=\"radio-button-demo\"\n                                        label=\"Strength & Hitt\"\n                                        inputProps={{ \"aria-label\": \"a\" }}\n                                    />\n                                    <label>Yes</label>\n                                    <CyanRadio\n                                        checked={selectedValue === \"b\"}\n                                        onChange={handleChange}\n                                        value=\"b\"\n                                        name=\"radio-button-demo\"\n                                        label=\"Strength & Hitt\"\n                                        inputProps={{ \"aria-label\": \"b\" }}\n                                    />\n                                    <label>No</label>\n                                </div>\n                                <div className=\"item_4\">\n                                    <h6>Details of the facility/location</h6>\n                                    <div className=\"inputs_platform\">\n                                        <textarea\n                                            type=\"text\"\n                                            placeholder=\"Enter the Details of the location\"\n                                            value={\n                                                trainerAvailabilityData.trainingFacilityLocation\n                                            }\n                                            onChange={(e) => {\n                                                setTrainerAvailabilityData({\n                                                    ...trainerAvailabilityData,\n                                                    trainingFacilityLocation:\n                                                        e.target.value,\n                                                });\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"item_5\">\n                                    <h6>\n                                        Are you willing to travel to clients in\n                                        your city/region?\n                                    </h6>\n                                    <CyanRadio\n                                        checked={selectedOneValue === \"1\"}\n                                        onChange={handleOneChange}\n                                        value=\"1\"\n                                        label=\"Strength & Hitt\"\n                                        inputProps={{ \"aria-label\": \"1\" }}\n                                    />\n                                    <label> Yes!</label>\n                                    <CyanRadio\n                                        checked={selectedOneValue === \"0\"}\n                                        onChange={handleOneChange}\n                                        value=\"0\"\n                                        label=\"Strength & Hitt\"\n                                        inputProps={{ \"aria-label\": \"0\" }}\n                                    />\n                                    <label>No</label>\n                                </div>\n                                <div className=\"item_6\">\n                                    <h6>\n                                        List the areas/neighborhoods you’re\n                                        willing to travel to\n                                    </h6>\n                                    <div className=\"inputs_platform\">\n                                        <textarea\n                                            type=\"text\"\n                                            placeholder=\"Neighborhood List\"\n                                            value={\n                                                trainerAvailabilityData.servicableLocation\n                                            }\n                                            onChange={(e) => {\n                                                setTrainerAvailabilityData({\n                                                    ...trainerAvailabilityData,\n                                                    servicableLocation:\n                                                        e.target.value,\n                                                });\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"submit_button\">\n                                <button type=\"submit\" onClick={handleSubmit}>\n                                    Submit\n                                    <ArrowHoverBlacked />\n                                </button>\n                                {open ? (\n                                    <Modal\n                                        open={open}\n                                        onClose={() => {\n                                            setOpen(false);\n                                            history.push(\"card\");\n                                        }}\n                                        center\n                                        closeIcon={closeIcon}\n                                        container={myRef.current}\n                                        styles={{\n                                            boaderRadius: \"10px\",\n                                        }}\n                                    >\n                                        <div\n                                            style={{\n                                                textAlign: \"center\",\n                                                height: \"300px\",\n                                                width: \"600px\",\n                                                padding: \"2em\",\n                                            }}\n                                            className=\"model_styles\"\n                                        >\n                                            <h2>\n                                                Background Information\n                                                collection complete. Click the\n                                                “x” to move to next section!\n                                            </h2>\n                                            <p>\n                                                Time to move on to building your\n                                                public Motto profile. This\n                                                profile will be published only\n                                                after you are approved!\n                                            </p>\n                                        </div>\n                                    </Modal>\n                                ) : null}\n                            </div>\n                        </form>\n                    </div>\n                    <img src={WaterMark} alt=\"icon\" className=\"ava_watermark\" />\n                </div>\n            </div>\n        </>\n    );\n};\nconst closeIcon = <img src={CloseIcon} alt=\"close\" />;\n\nconst mapStateToProps = (state) => ({\n    details: state.trainerReducer.details,\n    trainerPersonalData: state.trainerReducer.data,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            updateTrainerDetails,\n        },\n        dispatch\n    );\n};\n\nconst TrainerAvailability = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TrainerAvailabilityFC);\n\nexport default TrainerAvailability;\n","export default __webpack_public_path__ + \"static/media/Arrow Back.eda9c053.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;"],"sourceRoot":""}