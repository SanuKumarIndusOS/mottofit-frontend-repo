{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","component/TrainerOnBoard/TrainerBackground/index.js","assets/files/SVG/Arrow Back.svg","assets/files/SVG/Location Icon.svg"],"names":["createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","TrainerBackground","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","useState","checkedBoxing","setCheckedBoxing","checkedHIIT","setCheckedHIIT","checkedYoga","setCheckedYoga","checkedPilates","setCheckedPilates","workMode","workLocation","currentExperiencee","setCurrentExperiencee","areaOfExpertise","previousExperience","certification","clientAssessment","trainingProcess","interestInMotto","currentExperience","trainerbackgroundData","setTrainerbackgroundData","orgnization","job","years","inputFields","setInputField","certificate","year","upload","inputCertificatesFields","setinputCertificatesField","handleChangeInput","index","event","values","target","value","console","log","handleChangeCertificateInput","useEffect","Object","keys","length","tempData","className","src","ArrowBack","alt","to","ArrowNext","onChange","e","indexOf","splice","style","map","input","placeholder","onClick","inputCertificatesField","required","selected","Location","textDecoration","storeData","history","push","WaterMark"],"mappings":"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","file":"static/js/10.5c961af0.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBack from \"../../../assets/files/SVG/Arrow Back.svg\";\r\nimport ArrowNext from \"../../../assets/files/SVG/Arrow Next.svg\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport Location from \"../../../assets/files/SVG/Location Icon.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\r\nimport { history } from \"helpers\";\r\n\r\n/* areaOfExpertise\r\n   previousExperience\r\n   currentExperience\r\n   interestInMotto\r\n   trainingProcess\r\n   clientAssessment\r\n   \"myMotto\":\"\",\r\n   certification\r\n\r\n   hoursPerWeek\r\n   preferedTrainingMode\r\n//    serviceableCity\r\n   servicableLocation\r\n   trainingFacilityLocation\r\n   willingToTravel\r\n\r\n\r\n   \r\n*/\r\n\r\nconst TrainerBackgroundFC = ({ updateTrainerDetails, details }) => {\r\n  const [checkedBoxing, setCheckedBoxing] = React.useState(false);\r\n  const [checkedHIIT, setCheckedHIIT] = React.useState(false);\r\n  const [checkedYoga, setCheckedYoga] = React.useState(false);\r\n  const [checkedPilates, setCheckedPilates] = React.useState(false);\r\n\r\n  const [currentExperiencee, setCurrentExperiencee] = useState({\r\n    workMode: \"\",\r\n    workLocation: \"\",\r\n  });\r\n  const [trainerbackgroundData, setTrainerbackgroundData] = useState({\r\n    areaOfExpertise: [],\r\n    previousExperience: [],\r\n    certification: [],\r\n    clientAssessment: \"\",\r\n    trainingProcess: \"\",\r\n    interestInMotto: \"\",\r\n    currentExperience: \"\",\r\n  });\r\n\r\n  const [checkstate, setCheckState] = React.useState(\"\");\r\n\r\n  // const history = useHistory();\r\n\r\n  const [selectedValue, setSelectedValue] = useState(\"a\");\r\n  const [inputFields, setInputField] = useState([\r\n    {\r\n      orgnization: \"\",\r\n      job: \"\",\r\n      years: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputCertificatesFields, setinputCertificatesField] = useState([\r\n    {\r\n      certificate: \"\",\r\n      year: \"\",\r\n      upload: \"\",\r\n    },\r\n  ]);\r\n  const handleChangeInput = (index, event) => {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputField(values);\r\n\r\n    console.log(inputFields);\r\n\r\n    setTrainerbackgroundData({\r\n      ...trainerbackgroundData,\r\n      previousExperience: inputFields,\r\n    });\r\n  };\r\n  const handleChangeCertificateInput = (index, event) => {\r\n    const values = [...inputCertificatesFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setinputCertificatesField(values);\r\n\r\n    // console.log(inputCertificatesFields);\r\n    setTrainerbackgroundData({\r\n      ...trainerbackgroundData,\r\n      certification: inputCertificatesFields,\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputField([...inputFields, { orgnization: \"\", job: \"\", years: \"\" }]);\r\n  };\r\n\r\n  const handleAddCertificateFields = () => {\r\n    setinputCertificatesField([\r\n      ...inputCertificatesFields,\r\n      { certificate: \"\", year: \"\", upload: \"\" },\r\n    ]);\r\n\r\n    console.log(inputCertificatesFields);\r\n  };\r\n\r\n  // const handleRemoveFields = (index) => {\r\n  //     const values = [...inputFields];\r\n  //     values.splice(index, 1);\r\n  //     setInputField(values);\r\n  // };\r\n\r\n  const handleSubmit = () => {\r\n    const storeData = {\r\n      details: {\r\n        ...details,\r\n        areaOfExpertise: trainerbackgroundData.areaOfExpertise,\r\n        previousExperience: trainerbackgroundData.previousExperience,\r\n        certification: trainerbackgroundData.certification,\r\n        clientAssessment: trainerbackgroundData.clientAssessment,\r\n        trainingProcess: trainerbackgroundData.trainingProcess,\r\n        interestInMotto: trainerbackgroundData.interestInMotto,\r\n        currentExperience: currentExperiencee,\r\n      },\r\n    };\r\n\r\n    updateTrainerDetails(storeData);\r\n\r\n    history.push(`/trainer/avaliability`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(details).length > 3) {\r\n      let tempData = {\r\n        areaOfExpertise: details?.areaOfExpertise || [],\r\n        previousExperience: details?.previousExperience || [],\r\n        certification: details?.certificate || [],\r\n        clientAssessment: details.clientAssessment,\r\n        trainingProcess: details.trainingProcess,\r\n        interestInMotto: details.interestInMotto,\r\n      };\r\n\r\n      details.currentExperience &&\r\n        setCurrentExperiencee(details.currentExperience);\r\n\r\n      details.previousExperience && setInputField(details.previousExperience);\r\n\r\n      details.certification && setinputCertificatesField(details.certification);\r\n\r\n      setTrainerbackgroundData(tempData);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"outter_container_bg\">\r\n        <div className=\"container\">\r\n          <div className=\"links_wrapper\">\r\n            <div className=\"outter_links\">\r\n              <img src={ArrowBack} alt=\"icon\" />\r\n              <div className=\"inner_links\">\r\n                <Link to=\"/trainer/about\"> Back to About You</Link>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"outter_links\">\r\n              <div className=\"inner_links\">\r\n                <Link to=\"/trainer/avaliability\">Go to Avaliability</Link>\r\n                <div></div>\r\n              </div>\r\n              <img src={ArrowNext} alt=\"icon\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"main_wrapper\">\r\n            <div className=\"wrapper_inneritems\">\r\n              <h1>Detail out your training background</h1>\r\n\r\n              <p>\r\n                {/* We want to know it all! Share with us your\r\n                                experience & philosophy as a trainer to progress\r\n                                in your application process and join the Motto\r\n                                Family.{\" \"} */}\r\n              </p>\r\n\r\n              <div className=\"contents_wrapper\">\r\n                <form>\r\n                  <div className=\"item1\">\r\n                    <h6>\r\n                      Tell us what you train! Select all the verticals that\r\n                      apply\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <Checkbox\r\n                        checked={checkedHIIT}\r\n                        onChange={(e) => {\r\n                          setCheckedHIIT(e.target.checked);\r\n                          console.log(e.target.checked);\r\n\r\n                          if (e.target.checked) {\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Strength & HIIT\",\r\n                              ],\r\n                            });\r\n\r\n                            console.log(trainerbackgroundData.areaOfExpertise);\r\n                          } else {\r\n                            const index = trainerbackgroundData.areaOfExpertise.indexOf(\r\n                              \"Strength & HIIT\"\r\n                            );\r\n                            // console.log(index);\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                            console.log(trainerbackgroundData.areaOfExpertise);\r\n                          }\r\n\r\n                          console.log(trainerbackgroundData);\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n\r\n                        // onChange={() => {\r\n                        //   setCheckState(\"Strength & HIIT\");\r\n                        // }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Strength & HIIT</div>\r\n                      <Checkbox\r\n                        checked={checkedBoxing}\r\n                        // checked={true}\r\n                        onChange={(e) => {\r\n                          setCheckedBoxing(e.target.checked);\r\n                          console.log(e.target.checked);\r\n\r\n                          if (e.target.checked) {\r\n                            console.log(\"setBoxing\");\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Boxing\",\r\n                              ],\r\n                            });\r\n\r\n                            console.log(trainerbackgroundData.areaOfExpertise);\r\n                          } else {\r\n                            console.log(\"unsetBoxing\");\r\n\r\n                            const index = trainerbackgroundData.areaOfExpertise.indexOf(\r\n                              \"Boxing\"\r\n                            );\r\n                            // console.log(index);\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                            console.log(trainerbackgroundData.areaOfExpertise);\r\n                          }\r\n\r\n                          console.log(trainerbackgroundData);\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Boxing</div>\r\n                      <Checkbox\r\n                        checked={checkedYoga}\r\n                        onChange={(e) => {\r\n                          setCheckedYoga(e.target.checked);\r\n\r\n                          if (e.target.checked) {\r\n                            setTrainerbackgroundData({\r\n                              ...trainerbackgroundData,\r\n                              areaOfExpertise: [\r\n                                ...trainerbackgroundData.areaOfExpertise,\r\n                                \"Yoga\",\r\n                              ],\r\n                            });\r\n                          } else {\r\n                            const index = trainerbackgroundData.areaOfExpertise.indexOf(\r\n                              \"Yoga\"\r\n                            );\r\n                            // console.log(index);\r\n                            if (index > -1) {\r\n                              trainerbackgroundData.areaOfExpertise.splice(\r\n                                index,\r\n                                1\r\n                              );\r\n                            }\r\n                          }\r\n                        }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Yoga</div>\r\n                      <Checkbox\r\n                        checked={checkedPilates}\r\n                        onChange={(e) => {\r\n                            setCheckedPilates(e.target.checked);\r\n  \r\n                            if (e.target.checked) {\r\n                              setTrainerbackgroundData({\r\n                                ...trainerbackgroundData,\r\n                                areaOfExpertise: [\r\n                                  ...trainerbackgroundData.areaOfExpertise,\r\n                                  \"Pilates\",\r\n                                ],\r\n                              });\r\n                            } else {\r\n                              const index = trainerbackgroundData.areaOfExpertise.indexOf(\r\n                                \"Pilates\"\r\n                              );\r\n                              // console.log(index);\r\n                              if (index > -1) {\r\n                                trainerbackgroundData.areaOfExpertise.splice(\r\n                                  index,\r\n                                  1\r\n                                );\r\n                              }\r\n                            }\r\n                          }}\r\n                        style={{\r\n                          color: \"#53BFD2\",\r\n                        }}\r\n                      />\r\n                      <div className=\"checkbox_label\">Pilates</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item2\">\r\n                    <h6>Training experience</h6>\r\n                    {inputFields.map((input, index) => {\r\n                      return (\r\n                        <div className=\"inputs_experience\" key={index}>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name of the Orgnisation / GYM\"\r\n                            value={input.orgnization}\r\n                            name=\"orgnization\"\r\n                            onChange={(event) =>\r\n                              handleChangeInput(index, event)\r\n                            }\r\n                          />\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Job Title\"\r\n                            value={input.job}\r\n                            name=\"job\"\r\n                            onChange={(event) =>\r\n                              handleChangeInput(index, event)\r\n                            }\r\n                          />\r\n                          <input\r\n                            type=\"number\"\r\n                            placeholder=\"Years\"\r\n                            name=\"years\"\r\n                            value={input.years}\r\n                            onChange={(event) =>\r\n                              handleChangeInput(index, event)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                    <h5 onClick={() => handleAddFields()}>\r\n                      + Add Work Experience\r\n                    </h5>\r\n                    {/* {inputFields ? (\r\n                                        <span\r\n                                            onClick={() => handleRemoveFields()}\r\n                                        >\r\n                                            Remove\r\n                                        </span>\r\n                                    ) : null} */}\r\n                  </div>\r\n                  <div className=\"item3\">\r\n                    <h6>Certifications</h6>\r\n                    {inputCertificatesFields.map(\r\n                      (inputCertificatesField, index) => (\r\n                        <div className=\"inputs_background\" key={index}>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Certification Title\"\r\n                            value={inputCertificatesField.certificate}\r\n                            name=\"certificate\"\r\n                            onChange={(event) =>\r\n                              handleChangeCertificateInput(index, event)\r\n                            }\r\n                          />\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Year you were Certified\"\r\n                            value={inputCertificatesField.year}\r\n                            name=\"year\"\r\n                            onChange={(event) =>\r\n                              handleChangeCertificateInput(index, event)\r\n                            }\r\n                          />\r\n                          {/* <input\r\n                                                    type=\"file\"\r\n                                                    name=\"file\"\r\n                                                    value={\r\n                                                        inputCertificatesField.upload\r\n                                                    }\r\n                                                    // className=\"custom-file-input\"\r\n                                                    onChange={(event) =>\r\n                                                        handleChangeCertificateInput(\r\n                                                            index,\r\n                                                            event\r\n                                                        )\r\n                                                    }\r\n                                                /> */}\r\n                          {/* <a className=\"checkarrow\">\r\n                                                    <ArrowHover />\r\n                                                </a> */}\r\n                        </div>\r\n                      )\r\n                    )}\r\n\r\n                    <h5 onClick={handleAddCertificateFields}>\r\n                      + Add Certificate's\r\n                    </h5>\r\n                  </div>\r\n                  <div className=\"item4\">\r\n                    <h6>\r\n                      Are you currently enrolled in any continued education\r\n                      programs?\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us about any awaiting certifications \"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item5\">\r\n                    <h6>\r\n                      Do you have a facility to train new & outside clients?\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <select\r\n                        className=\"select_location\"\r\n                        required\r\n                        name=\"answer\"\r\n                        value={currentExperiencee.workMode}\r\n                        onChange={(e) => {\r\n                          setCurrentExperiencee({\r\n                            ...currentExperiencee,\r\n                            workMode: e.target.value,\r\n                          });\r\n\r\n                          // setTrainerbackgroundData({...trainerbackgroundData, currentExperience: currentExperiencee})\r\n                        }}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Select Your Answer\r\n                        </option>\r\n                        <option>Yes</option>\r\n                        <option>No</option>\r\n                      </select>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Details of facility\"\r\n                        value={currentExperiencee.workLocation}\r\n                        name=\"answer\"\r\n                        onChange={(e) => {\r\n                          setCurrentExperiencee({\r\n                            ...currentExperiencee,\r\n                            workLocation: e.target.value,\r\n                          });\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            currentExperience: currentExperiencee,\r\n                          });\r\n                        }}\r\n                      />\r\n\r\n                      <img\r\n                        src={Location}\r\n                        alt=\"icon\"\r\n                        className=\"loction_img_select\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item6\">\r\n                    <h6>Why are you interested in joining Motto?</h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us all about it in not more than 150 words\"\r\n                        value={trainerbackgroundData.interestInMotto}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            interestInMotto: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item6\">\r\n                    <h6>\r\n                      Describe how you assess a client before their first\r\n                      session?\r\n                    </h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us all about it in not more than 150 words\"\r\n                        value={trainerbackgroundData.clientAssessment}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            clientAssessment: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item6\">\r\n                    <h6>Describe your training process & philosophy</h6>\r\n                    <div className=\"inputs_experience\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Tell us all about it in not more than 150 words\"\r\n                        value={trainerbackgroundData.trainingProcess}\r\n                        onChange={(e) =>\r\n                          setTrainerbackgroundData({\r\n                            ...trainerbackgroundData,\r\n                            trainingProcess: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"submit_button\">\r\n                    <button type=\"submit\">\r\n                      <Link\r\n                        style={{\r\n                          textDecoration: \"none\",\r\n                          color: \"#FFFFFF\",\r\n                        }}\r\n                        type=\"submit\"\r\n                        // onClick={handleTrainerAvailability}\r\n                        onClick={handleSubmit}\r\n                        // to={{\r\n                        //   pathname: \"/trainer/avaliability\",\r\n                        //   state: [AboutTrainer, trainerbackgroundData],\r\n                        // }}\r\n                      >\r\n                        Continue\r\n                        <ArrowHoverBlacked />\r\n                      </Link>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <img src={WaterMark} alt=\"icon\" className=\"bg_watermark\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  details: state.trainerReducer.details,\r\n  trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateTrainerDetails,\r\n      getTrainerDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerBackground = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainerBackgroundFC);\r\n\r\nexport default TrainerBackground;\r\n","export default __webpack_public_path__ + \"static/media/Arrow Back.d3693c0f.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.6eb543f1.svg\";"],"sourceRoot":""}