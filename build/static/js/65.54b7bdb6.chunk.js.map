{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerSession/index.js","assets/files/TrainerDashboard/Message/Jenny.png","assets/files/TrainerDashboard/Message/Availability Icon.svg","assets/files/TrainerDashboard/Message/Location Icon.svg"],"names":["TabOne","datas","useState","setVisible","className","length","map","data","index","date","month","heading","src","imgAva","alt","avaTime","imgLoc","loc","onClick","prevValue","to","previousImg","prevDate","TabTwo","TabThree","TabFour","TrainerSession","connect","state","sessionData","trainerReducer","trainerPersonalData","dispatch","bindActionCreators","getTrainerSessionDetails","upcomingSessions","pastSessions","onGoingSessions","trainerSessionData","setTrainerSessionData","useEffect","then","tempSessionData","Object","keys","forEach","sessionKey","title","venue","sessionDate","sessionStartTime","getFormatDate","AvailabilityIcon","LocationIcon","Jenny","prevHeading","defaultTab","onChange","tabId","console","log","tabFor"],"mappings":"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","file":"static/js/65.54b7bdb6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport { Tabs, Tab, TabPanel, TabList } from \"react-web-tabs\";\nimport \"react-web-tabs/dist/react-web-tabs.css\";\nimport AvailabilityIcon from \"../../../../assets/files/TrainerDashboard/Message/Availability Icon.svg\";\nimport LocationIcon from \"../../../../assets/files/TrainerDashboard/Message/Location Icon.svg\";\nimport { Link } from \"react-router-dom\";\nimport BlueArrowButton from \"../../../common/BlueArrowButton\";\nimport Jenny from \"../../../../assets/files/TrainerDashboard/Message/Jenny.png\";\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\nimport { getTrainerSessionDetails } from \"action/trainerAct\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getFormatDate } from \"service/helperFunctions\";\n\nconst TrainerSessionFC = ({ sessionData, getTrainerSessionDetails }) => {\n    const [trainerSessionData, setTrainerSessionData] = useState({\n        upcomingSessions: [],\n        pastSessions: [],\n        onGoingSessions: [],\n    });\n    useEffect(() => {\n        getTrainerSessionDetails().then((data) => {\n            const tempSessionData = {};\n            Object.keys(data).forEach((sessionKey) => {\n                tempSessionData[sessionKey] = data[sessionKey].map(\n                    ({ title, venue, sessionDate, sessionStartTime }) => ({\n                        date: getFormatDate(sessionDate, \"D\"),\n                        month: getFormatDate(sessionDate, \"MMM\"),\n                        heading: title,\n                        imgAva: AvailabilityIcon,\n                        avaTime: `${getFormatDate(\n                            sessionStartTime,\n                            \"LT\",\n                            true\n                        )} PST`,\n                        imgLoc: LocationIcon,\n                        loc: venue,\n                        previousImg: Jenny,\n                        prevHeading: \"Yoga with Kane\",\n                        prevDate: getFormatDate(sessionData, \"DD MMMM YYYY\"),\n                    })\n                );\n            });\n\n            setTrainerSessionData(tempSessionData);\n        });\n    }, []);\n\n    return (\n        <>\n            <div className=\"outter_user_container\">\n                <div className=\"container\">\n                    <div className=\"inner_user_container \">\n                        <div className=\"userSession_heading\">\n                            <h2>My Session</h2>\n                        </div>\n                        <div className=\"US_tabs_wrapper\">\n                            <Tabs\n                                defaultTab=\"overview\"\n                                onChange={(tabId) => {\n                                    console.log(tabId);\n                                }}\n                            >\n                                <TabList>\n                                    <Tab tabFor=\"overview\">Overview</Tab>\n                                    <Tab tabFor=\"upcoming\">Upcoming</Tab>\n                                    <Tab tabFor=\"pass\">Motto pass</Tab>\n                                    <Tab tabFor=\"previous\">Previous</Tab>\n                                </TabList>\n                                <div className=\"tabPanel_outter\">\n                                    <TabPanel tabId=\"overview\">\n                                        <TabOne\n                                            datas={\n                                                trainerSessionData.upcomingSessions\n                                            }\n                                        />\n                                    </TabPanel>\n                                </div>\n                                <div className=\"tabPanel_outter\">\n                                    <TabPanel tabId=\"upcoming\">\n                                        <TabTwo\n                                            datas={\n                                                trainerSessionData.upcomingSessions\n                                            }\n                                        />\n                                    </TabPanel>\n                                </div>\n                                <div className=\"tabPanel_outter\">\n                                    <TabPanel tabId=\"pass\">\n                                        <TabThree />\n                                    </TabPanel>\n                                </div>\n                                <div className=\"tabPanel_outter\">\n                                    <TabPanel tabId=\"previous\">\n                                        <TabFour\n                                            datas={\n                                                trainerSessionData.pastSessions\n                                            }\n                                        />\n                                    </TabPanel>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst TabOne = ({ datas = [] }) => {\n    const [visible, setVisible] = useState([3]);\n\n    const setViewMore = () => {\n        setVisible((prevValue) => prevValue + 1);\n    };\n    return (\n        <div className=\"tabPanel_overview d-flex\">\n            <div className=\"tabPanel_overview_left w-100\">\n                <div className=\"TP_overview_wrapper\">\n                    <h3>Upcoming Sessions</h3>\n                    <div className=\"TP_US_overview\">\n                        <div className=\"TP_US_overview_inner\">\n                            {datas.length > 0 ? (\n                                datas.map((data, index) => {\n                                    return (\n                                        <>\n                                            <div\n                                                className=\"TP_upcomeSession_overview\"\n                                                key={index}\n                                            >\n                                                <div className=\"TP_USession_dates\">\n                                                    <h4>\n                                                        {data.date}\n                                                        <span>\n                                                            {data.month}\n                                                        </span>\n                                                    </h4>\n                                                </div>\n                                                <div className=\"TP_USession_data\">\n                                                    <h2 className=\"text-capitalize\">\n                                                        {data.heading}\n                                                    </h2>\n                                                    <div className=\"TP_USession_data_icons\">\n                                                        <h5>\n                                                            <img\n                                                                src={\n                                                                    data.imgAva\n                                                                }\n                                                                alt=\"icon\"\n                                                            />\n                                                            {data.avaTime}\n                                                        </h5>\n                                                        <h5 className=\"text-capitalize\">\n                                                            <img\n                                                                src={\n                                                                    data.imgLoc\n                                                                }\n                                                                alt=\"icon\"\n                                                            />\n                                                            {data.loc}\n                                                        </h5>\n                                                    </div>\n                                                    <div className=\"TP_USession_data_buttons\">\n                                                        <button>\n                                                            Reschedule\n                                                        </button>\n                                                        <button>Cancel</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <hr />\n                                        </>\n                                    );\n                                })\n                            ) : (\n                                <h3 className=\"my-5 py-5 text-center\">\n                                    No Data Found\n                                </h3>\n                            )}\n                        </div>\n                        <button\n                            onClick={setViewMore}\n                            className=\"viewMoreButton\"\n                        >\n                            View all Session <BlueHoverButton />\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"tabPanel_overview_right\">\n                <div className=\"TB_overview_right\">\n                    <div className=\"TB_overview_row_one\">\n                        <div className=\"row_one_data\">\n                            <h2>Want to Do More for Less?</h2>\n                            <p>\n                                Save money by purchasing multiple sessions at\n                                once, eligible for use within 60 days of the\n                                purchase date.\n                            </p>\n                            <Link to=\"/\">\n                                Get A pass <BlueArrowButton />{\" \"}\n                            </Link>\n                        </div>\n                    </div>\n\n                    <div className=\"TB_overview_row_two\">\n                        <div className=\"row_two_data\">\n                            <h2>PREVIOUS SESSIONS</h2>\n                            <div className=\"row_two_scroll\">\n                                {datas.length > 0 ? (\n                                    datas.map((data, index) => {\n                                        return (\n                                            <>\n                                                <div\n                                                    className=\"row_previous_data\"\n                                                    key={index}\n                                                >\n                                                    <div className=\"row_previous_avater\">\n                                                        <img\n                                                            src={\n                                                                data.previousImg\n                                                            }\n                                                            alt=\"profile\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"row_previous_header\">\n                                                        <h2 className=\"text-capitalize\">\n                                                            {data.heading}\n                                                        </h2>\n                                                        <p>{data.prevDate}</p>\n                                                    </div>\n                                                </div>\n                                                <hr />\n                                            </>\n                                        );\n                                    })\n                                ) : (\n                                    <h3 className=\"my-5 py-5 text-center\">\n                                        No Data Found\n                                    </h3>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst TabTwo = ({ datas = [] }) => {\n    const [visible, setVisible] = useState([3]);\n\n    const setViewMore = () => {\n        setVisible((prevValue) => prevValue + 1);\n    };\n    return (\n        <div className=\"tabPanel_overview d-flex\">\n            <div className=\"tabPanel_overview_left w-100\">\n                <div className=\"TP_overview_wrapper\">\n                    <h3>Upcoming Sessions</h3>\n                    <div className=\"TP_US_overview\">\n                        <div className=\"TP_US_overview_inner\">\n                            {datas.length > 0 ? (\n                                datas.map((data, index) => {\n                                    return (\n                                        <>\n                                            <div\n                                                className=\"TP_upcomeSession_overview\"\n                                                key={index}\n                                            >\n                                                <div className=\"TP_USession_dates\">\n                                                    <h4>\n                                                        {data.date}\n                                                        <span>\n                                                            {data.month}\n                                                        </span>\n                                                    </h4>\n                                                </div>\n                                                <div className=\"TP_USession_data\">\n                                                    <h2 className=\"text-capitalize\">\n                                                        {data.heading}\n                                                    </h2>\n                                                    <div className=\"TP_USession_data_icons\">\n                                                        <h5>\n                                                            <img\n                                                                src={\n                                                                    data.imgAva\n                                                                }\n                                                                alt=\"icon\"\n                                                            />\n                                                            {data.avaTime}\n                                                        </h5>\n                                                        <h5 className=\"text-capitalize\">\n                                                            <img\n                                                                src={\n                                                                    data.imgLoc\n                                                                }\n                                                                alt=\"icon\"\n                                                            />\n                                                            {data.loc}\n                                                        </h5>\n                                                    </div>\n                                                    <div className=\"TP_USession_data_buttons\">\n                                                        <button>\n                                                            Reschedule\n                                                        </button>\n                                                        <button>Cancel</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <hr />\n                                        </>\n                                    );\n                                })\n                            ) : (\n                                <h3 className=\"my-5 py-5 text-center\">\n                                    No Data Found\n                                </h3>\n                            )}\n                        </div>\n                        <button\n                            onClick={setViewMore}\n                            className=\"viewMoreButton\"\n                        >\n                            View all Session <BlueHoverButton />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst TabThree = () => {\n    return (\n        <div className=\"tabPanel_overview\">\n            <div className=\"tabPanel_overview_right\">\n                <div className=\"TB_overview_right\">\n                    <div className=\"TB_overview_row_one\">\n                        <div className=\"row_one_data\">\n                            <h2>Want to Do More for Less?</h2>\n                            <p>\n                                Save money by purchasing multiple sessions at\n                                once, eligible for use within 60 days of the\n                                purchase date.\n                            </p>\n                            <Link to=\"/\">\n                                Get A pass <BlueArrowButton />{\" \"}\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst TabFour = ({ datas = [] }) => {\n    return (\n        <div className=\"tabPanel_overview d-flex\">\n            <div className=\"tabPanel_overview_right w-100\">\n                <div className=\"TB_overview_right\">\n                    <div className=\"TB_overview_row_two\">\n                        <div className=\"row_two_data\">\n                            <h2>PREVIOUS SESSIONS</h2>\n                            <div className=\"row_two_scroll\">\n                                {datas.length > 0 ? (\n                                    datas.map((data, index) => {\n                                        return (\n                                            <>\n                                                <div\n                                                    className=\"row_previous_data\"\n                                                    key={index}\n                                                >\n                                                    <div className=\"row_previous_avater\">\n                                                        <img\n                                                            src={\n                                                                data.previousImg\n                                                            }\n                                                            alt=\"profile\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"row_previous_header\">\n                                                        <h2 className=\"text-capitalize\">\n                                                            {data.heading}\n                                                        </h2>\n                                                        <p>{data.prevDate}</p>\n                                                    </div>\n                                                </div>\n                                                <hr />\n                                            </>\n                                        );\n                                    })\n                                ) : (\n                                    <h3 className=\"my-5 py-5 text-center\">\n                                        No Data Found\n                                    </h3>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    sessionData: state.trainerReducer.sessionData,\n    trainerPersonalData: state.trainerReducer.data,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            getTrainerSessionDetails,\n        },\n        dispatch\n    );\n};\n\nconst TrainerSession = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TrainerSessionFC);\n\nexport default TrainerSession;\n","export default __webpack_public_path__ + \"static/media/Jenny.c50273b9.png\";","export default __webpack_public_path__ + \"static/media/Availability Icon.76c74f78.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.eb3488a6.svg\";"],"sourceRoot":""}