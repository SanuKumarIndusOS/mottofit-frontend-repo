{"version":3,"sources":["component/TrainerSignUp/Banner/index.js","component/TrainerSignUp/Experience/index.js","component/TrainerSignUp/LocationTrainer/index.js","pages/Trainer/Signup/index.js","component/TrainerSignUp/Banner/useForm.js","component/TrainerSignUp/Banner/validation.js","component/TrainerSignUp/LocationTrainer/SlideData.js","assets/files/Home/Location/Hamptons Image.png","assets/files/Home/Location/Miami Image.png","assets/files/Home/Location/NYC.png","assets/files/Home/Location/tessa-wilson.jpeg","assets/files/TrainerSignUp/ExperienceTrainer/Rectangle.svg","assets/files/SignUp/Phone Icon.svg","assets/files/TrainerSignUp/ExperienceTrainer/Icon 1.svg","assets/files/TrainerSignUp/ExperienceTrainer/Icon 2.svg","assets/files/TrainerSignUp/ExperienceTrainer/Icon 3.svg","assets/files/TrainerSignUp/ExperienceTrainer/Icon 4.svg","assets/files/TrainerSignUp/ExperienceTrainer/Icon 5.svg","assets/files/TrainerSignUp/ExperienceTrainer/Icon 6.svg"],"names":["BannerTrainer","connect","dispatch","bindActionCreators","loginOrSignupAct","loginOrSignUp","submitForm","history","useHistory","useForm","validateInfo","data","handleFormSubmit","error","setData","dataSubmit","onChangeValue","e","persist","target","name","value","useState","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","apiError","setApiError","a","payload","email","password","cpassword","phoneNumber","signUpType","console","log","trainerSignUp","AuthApi","then","push","catch","message","className","onSubmit","placeholder","type","onChange","src","Person","alt","Mail","disableDropdown","countryCodeEditable","country","inputProps","Phone","Password","onClick","to","ExperienceTrainer","ExperienceParent","icon","Icon1","description","Icon2","Icon3","Icon4","Icon5","Icon6","Component","props","SampleNextArrow","style","display","id","data-name","xmlns","width","height","viewBox","d","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","SamplePrevArrow","LocationTrainer","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","nextArrow","prevArrow","responsive","breakpoint","initialSlide","SlideData","map","slide","index","image","line","TrainerSignup","validate","setError","isSubmit","setSubmit","setdataSubmit","useEffect","Object","keys","length","preventDefault","errorData","validation","values","errors","test","NYC","Rectangle","Miami","Hamptons","TessaWilson"],"mappings":"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","file":"static/js/31.8f91f87e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport Person from \"../../../assets/files/SignUp/Person Icon.svg\";\nimport Mail from \"../../../assets/files/SignUp/Email Icon.svg\";\nimport Phone from \"../../../assets/files/SignUp/Phone Icon.svg\";\nimport Password from \"../../../assets/files/SignUp/Password Icon.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\nimport BlueHoverButton from \"../../common/BlueArrowButton\";\nimport { connect } from \"react-redux\";\nimport { loginOrSignUp } from \"action/authAct\";\nimport { bindActionCreators } from \"redux\";\nimport { AuthApi } from \"service/apiVariables\";\nimport useForm from \"./useForm\";\nimport validateInfo from \"./validation\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nconst BannerTrainerFC = ({ loginOrSignupAct, submitForm }) => {\n    const history = useHistory();\n\n    const { data, handleFormSubmit, error, setData, dataSubmit } = useForm(\n        validateInfo,\n        submitForm\n    );\n\n    const onChangeValue = (e) => {\n        e.persist();\n        setData({ ...data, [e.target.name]: e.target.value });\n    };\n\n    const [passwordShown, setPasswordShown] = useState(false);\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\n    const [apiError, setApiError] = useState(\"\");\n    const showPassword = () => {\n        setPasswordShown(passwordShown ? false : true);\n    };\n    const showConfirmPassword = () => {\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\n    };\n\n    async function trainerSignUp() {\n        const payload = {\n            name: data.name,\n            email: data.email,\n            password: data.password,\n            cpassword: data.cpassword,\n            phoneNumber: data.phoneNumber,\n            signUpType: data.signUpType,\n        };\n        console.log(payload);\n\n        const { trainerSignUp } = AuthApi;\n\n        if (dataSubmit) {\n            loginOrSignupAct(trainerSignUp, payload)\n                .then(({ data }) => {\n                    history.push(\"/trainer/about\");\n                })\n                .catch((error) => {\n                    setApiError(error.message);\n                });\n        }\n    }\n\n    return (\n        <>\n            <div className=\"banner_container_trainer\">\n                <div className=\"wrapper_main container\">\n                    <div className=\"item_left\">\n                        <h2>Sign Up to be a part of the Motto Family</h2>\n                        <h6>\n                            Create an account to start the application process\n                            of becoming a Motto trainer in one of our live\n                            cities.\n                        </h6>\n                    </div>\n                    <div className=\"wrapper\">\n                        <div className=\"item_right\">\n                            <div className=\"inner_wrapper \">\n                                <div className=\"inner_items\">\n                                    <h3>Train with Motto!</h3>\n                                    <p>\n                                        Sign up to apply to become a Motto\n                                        Trainer\n                                    </p>\n                                    <div className=\"form_items_trainer\">\n                                        <form onSubmit={handleFormSubmit}>\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Full Name\"\n                                                    type=\"text\"\n                                                    value={data.name}\n                                                    name=\"name\"\n                                                    onChange={onChangeValue}\n                                                    className=\"fullname\"\n                                                />\n                                                <img src={Person} alt=\"icon\" />\n                                                {error.name && (\n                                                    <span>{error.name}</span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Email\"\n                                                    type=\"email\"\n                                                    value={data.email}\n                                                    name=\"email\"\n                                                    onChange={onChangeValue}\n                                                />\n                                                <img src={Mail} alt=\"icon\" />\n                                                {error.email && (\n                                                    <span>{error.email}</span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <ReactPhoneInput\n                                                    disableDropdown\n                                                    countryCodeEditable={false}\n                                                    country=\"us\"\n                                                    placeholder=\"Phone Number\"\n                                                    inputProps={{\n                                                        name: \"phoneNumber\",\n                                                    }}\n                                                    value={data.phoneNumber}\n                                                    name=\"phoneNumber\"\n                                                    onChange={(e) => {\n                                                        console.log(e);\n                                                        setData({\n                                                            ...data,\n                                                            phoneNumber: e,\n                                                        });\n                                                    }}\n                                                />\n\n                                                <img src={Phone} alt=\"icon\" />\n                                                {error.phoneNumber && (\n                                                    <span>\n                                                        {error.phoneNumber}\n                                                    </span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Create Password\"\n                                                    type={\n                                                        passwordShown\n                                                            ? \"text\"\n                                                            : \"password\"\n                                                    }\n                                                    value={data.password}\n                                                    name=\"password\"\n                                                    onChange={onChangeValue}\n                                                />\n                                                <img\n                                                    src={Password}\n                                                    alt=\"icon\"\n                                                    onClick={showPassword}\n                                                />\n                                                {error.password && (\n                                                    <span>\n                                                        {error.password}\n                                                    </span>\n                                                )}\n                                            </div>\n\n                                            <div className=\"input_items_trainer\">\n                                                <input\n                                                    placeholder=\"Confirm Password\"\n                                                    type={\n                                                        confirmPasswordShown\n                                                            ? \"text\"\n                                                            : \"password\"\n                                                    }\n                                                    value={data.cpassword}\n                                                    name=\"cpassword\"\n                                                    onChange={onChangeValue}\n                                                />\n                                                <img\n                                                    src={Password}\n                                                    alt=\"icon\"\n                                                    onClick={\n                                                        showConfirmPassword\n                                                    }\n                                                />\n                                                {error.cpassword && (\n                                                    <span>\n                                                        {error.cpassword}\n                                                    </span>\n                                                )}\n                                            </div>\n                                            {apiError && (\n                                                <span className=\"errorMessage\">\n                                                    {apiError}\n                                                </span>\n                                            )}\n\n                                            <div className=\"submit_button\">\n                                                <button\n                                                    type=\"submit\"\n                                                    onClick={trainerSignUp()}\n                                                >\n                                                    <p>Continue to Account</p>\n                                                    <ArrowHoverBlacked />\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div className=\"login_items\">\n                                        <h4>Already have an account?</h4>\n\n                                        <Link to=\"/\">\n                                            Sign In now\n                                            <BlueHoverButton />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            loginOrSignupAct: loginOrSignUp,\n        },\n        dispatch\n    );\n};\n\nconst BannerTrainer = connect(null, mapDispatchToProps)(BannerTrainerFC);\n\nexport default BannerTrainer;\n","import React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport Icon1 from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Icon 1.svg\";\nimport Icon2 from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Icon 2.svg\";\nimport Icon3 from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Icon 3.svg\";\nimport Icon4 from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Icon 4.svg\";\nimport Icon5 from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Icon 5.svg\";\nimport Icon6 from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Icon 6.svg\";\n\nexport default class ExperienceTrainer extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"big_container\">\n                    <div className=\"personal_container_trainer container\">\n                        <div className=\"personal_trainer_description\">\n                            <h2 className=\"heading\">\n                                Here is why you should apply to be a Motto\n                                Trainer\n                            </h2>\n                            <p className=\"discription\">\n                                Your personal trainer marketplace for Strength &\n                                HIIT, Boxing, Yoga & Pilates. Train virtually\n                                from anywhere or locally in Motto markets.\n                            </p>\n                        </div>\n                        <div className=\"right_container\">\n                            <ExperienceParent\n                                icon={Icon1}\n                                description=\"Be a part of an elite community of trainers to boost your brand\"\n                            />\n                            <ExperienceParent\n                                icon={Icon2}\n                                description=\"  Get access to a large client network.\"\n                            />\n                            <ExperienceParent\n                                icon={Icon3}\n                                description=\"Maximise your time and earnings by booking 1 on 1 or group sessions \"\n                            />\n                            <ExperienceParent\n                                icon={Icon4}\n                                description=\"Minimize customer acquisition cost\"\n                            />\n                            <ExperienceParent\n                                icon={Icon5}\n                                description=\"Get matched with the right clients based on your training expertise\"\n                            />\n                            <ExperienceParent\n                                icon={Icon6}\n                                description=\"Get access to our trusted partner brands\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst ExperienceParent = (props) => {\n    return (\n        <>\n            <div className=\"flex-contents_trainer\">\n                <div className=\"image\">\n                    <img src={props.icon} alt=\"icon\" />\n                </div>\n                <p className=\"discription\">{props.description}</p>\n            </div>\n        </>\n    );\n};\n","import React from \"react\";\nimport \"./styles.sass\";\nimport Slider from \"react-slick\";\nimport { SlideData } from \"./SlideData\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction SampleNextArrow(props) {\n    const { style, onClick } = props;\n    return (\n        <div\n            className=\"right-arrow\"\n            style={{ ...style, display: \"block\" }}\n            onClick={onClick}\n        >\n            <svg\n                id=\"Tertiary_Button\"\n                data-name=\"Tertiary Button\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"45\"\n                height=\"45\"\n                viewBox=\"0 0 45 45\"\n            >\n                <path\n                    id=\"Path_7512\"\n                    data-name=\"Path 7512\"\n                    d=\"M0,0V17.692\"\n                    transform=\"translate(13 22.534) rotate(-90)\"\n                    fill=\"none\"\n                    stroke=\"#53bfd2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                />\n                <path\n                    id=\"Path_7513\"\n                    data-name=\"Path 7513\"\n                    d=\"M13.068,0,6.534,6.534,0,0\"\n                    transform=\"translate(25.185 29.068) rotate(-90)\"\n                    fill=\"none\"\n                    stroke=\"#53bfd2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                />\n                <g id=\"Path_14198\" data-name=\"Path 14198\" fill=\"none\">\n                    <path\n                        d=\"M22.5,0A22.5,22.5,0,1,1,0,22.5,22.5,22.5,0,0,1,22.5,0Z\"\n                        stroke=\"none\"\n                    />\n                    <path\n                        d=\"M 22.5 2 C 19.73163986206055 2 17.04714012145996 2.541740417480469 14.52108955383301 3.61016845703125 C 12.0802001953125 4.642578125 9.887641906738281 6.120979309082031 8.004310607910156 8.004310607910156 C 6.120979309082031 9.887641906738281 4.642578125 12.0802001953125 3.61016845703125 14.52108955383301 C 2.541740417480469 17.04714012145996 2 19.73163986206055 2 22.5 C 2 25.26836013793945 2.541740417480469 27.95285987854004 3.61016845703125 30.47891044616699 C 4.642578125 32.9197998046875 6.120979309082031 35.11235809326172 8.004310607910156 36.99568939208984 C 9.887641906738281 38.87902069091797 12.0802001953125 40.357421875 14.52108955383301 41.38983154296875 C 17.04714012145996 42.45825958251953 19.73163986206055 43 22.5 43 C 25.26836013793945 43 27.95285987854004 42.45825958251953 30.47891044616699 41.38983154296875 C 32.9197998046875 40.357421875 35.11235809326172 38.87902069091797 36.99568939208984 36.99568939208984 C 38.87902069091797 35.11235809326172 40.357421875 32.9197998046875 41.38983154296875 30.47891044616699 C 42.45825958251953 27.95285987854004 43 25.26836013793945 43 22.5 C 43 19.73163986206055 42.45825958251953 17.04714012145996 41.38983154296875 14.52108955383301 C 40.357421875 12.0802001953125 38.87902069091797 9.887641906738281 36.99568939208984 8.004310607910156 C 35.11235809326172 6.120979309082031 32.9197998046875 4.642578125 30.47891044616699 3.61016845703125 C 27.95285987854004 2.541740417480469 25.26836013793945 2 22.5 2 M 22.5 0 C 34.92641067504883 0 45 10.07358932495117 45 22.5 C 45 34.92641067504883 34.92641067504883 45 22.5 45 C 10.07358932495117 45 0 34.92641067504883 0 22.5 C 0 10.07358932495117 10.07358932495117 0 22.5 0 Z\"\n                        stroke=\"none\"\n                        fill=\"#bcbcbc\"\n                    />\n                </g>\n            </svg>\n        </div>\n    );\n}\n\nfunction SamplePrevArrow(props) {\n    const { style, onClick } = props;\n    return (\n        <div\n            className=\"left-arrow\"\n            style={{ ...style, display: \"block\" }}\n            onClick={onClick}\n        >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"45\"\n                height=\"45\"\n                viewBox=\"0 0 45 45\"\n            >\n                <g\n                    id=\"Tertiary_Button\"\n                    data-name=\"Tertiary Button\"\n                    transform=\"translate(45 45) rotate(180)\"\n                >\n                    <path\n                        id=\"Path_7512\"\n                        data-name=\"Path 7512\"\n                        d=\"M0,0V17.692\"\n                        transform=\"translate(13 22.534) rotate(-90)\"\n                        fill=\"none\"\n                        stroke=\"#53bfd2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2.5\"\n                    />\n                    <path\n                        id=\"Path_7513\"\n                        data-name=\"Path 7513\"\n                        d=\"M13.068,0,6.534,6.534,0,0\"\n                        transform=\"translate(25.185 29.068) rotate(-90)\"\n                        fill=\"none\"\n                        stroke=\"#53bfd2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2.5\"\n                    />\n                    <g id=\"Path_14198\" data-name=\"Path 14198\" fill=\"none\">\n                        <path\n                            d=\"M22.5,0A22.5,22.5,0,1,1,0,22.5,22.5,22.5,0,0,1,22.5,0Z\"\n                            stroke=\"none\"\n                        />\n                        <path\n                            d=\"M 22.5 2 C 19.73163986206055 2 17.04714012145996 2.541740417480469 14.52108955383301 3.61016845703125 C 12.0802001953125 4.642578125 9.887641906738281 6.120979309082031 8.004310607910156 8.004310607910156 C 6.120979309082031 9.887641906738281 4.642578125 12.0802001953125 3.61016845703125 14.52108955383301 C 2.541740417480469 17.04714012145996 2 19.73163986206055 2 22.5 C 2 25.26836013793945 2.541740417480469 27.95285987854004 3.61016845703125 30.47891044616699 C 4.642578125 32.9197998046875 6.120979309082031 35.11235809326172 8.004310607910156 36.99568939208984 C 9.887641906738281 38.87902069091797 12.0802001953125 40.357421875 14.52108955383301 41.38983154296875 C 17.04714012145996 42.45825958251953 19.73163986206055 43 22.5 43 C 25.26836013793945 43 27.95285987854004 42.45825958251953 30.47891044616699 41.38983154296875 C 32.9197998046875 40.357421875 35.11235809326172 38.87902069091797 36.99568939208984 36.99568939208984 C 38.87902069091797 35.11235809326172 40.357421875 32.9197998046875 41.38983154296875 30.47891044616699 C 42.45825958251953 27.95285987854004 43 25.26836013793945 43 22.5 C 43 19.73163986206055 42.45825958251953 17.04714012145996 41.38983154296875 14.52108955383301 C 40.357421875 12.0802001953125 38.87902069091797 9.887641906738281 36.99568939208984 8.004310607910156 C 35.11235809326172 6.120979309082031 32.9197998046875 4.642578125 30.47891044616699 3.61016845703125 C 27.95285987854004 2.541740417480469 25.26836013793945 2 22.5 2 M 22.5 0 C 34.92641067504883 0 45 10.07358932495117 45 22.5 C 45 34.92641067504883 34.92641067504883 45 22.5 45 C 10.07358932495117 45 0 34.92641067504883 0 22.5 C 0 10.07358932495117 10.07358932495117 0 22.5 0 Z\"\n                            stroke=\"none\"\n                            fill=\"#bcbcbc\"\n                        />\n                    </g>\n                </g>\n            </svg>\n        </div>\n    );\n}\n\nconst LocationTrainer = () => {\n    const settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 2000,\n        autoplaySpeed: 2000,\n        nextArrow: <SampleNextArrow />,\n        prevArrow: <SamplePrevArrow />,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                    infinite: true,\n                    dots: true,\n                },\n            },\n            {\n                breakpoint: 600,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                    initialSlide: 2,\n                },\n            },\n            {\n                breakpoint: 480,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                },\n            },\n        ],\n    };\n    return (\n        <div className=\"slide-container_trainer\">\n            <div className=\"inner_location container\">\n                <div className=\"header-content\">\n                    <h1>We are in these Cities</h1>\n                    <p>\n                        Currently available for in-person live training in\n                        Miami, New York City, Hamptons & Plam Beach. We will be\n                        launching in other cities across the United States soon.\n                    </p>\n                </div>\n                <div className=\"slider_wrapper_container\">\n                    <Slider {...settings}>\n                        {SlideData.map((slide, index) => {\n                            return (\n                                <div className=\"main-slide\" key={index}>\n                                    <div className=\"slide-content\">\n                                        <img\n                                            src={slide.image}\n                                            alt={slide.name}\n                                            className=\"slide-image\"\n                                        />\n                                        <img\n                                            src={slide.line}\n                                            alt={slide.name}\n                                            className=\"slide-line\"\n                                        />\n                                        <p>{slide.name}</p>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </Slider>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LocationTrainer;\n","import React from \"react\";\nimport BannerTrainer from \"component/TrainerSignUp/Banner\";\nimport ExperienceTrainer from \"component/TrainerSignUp/Experience\";\nimport LocationTrainer from \"component/TrainerSignUp/LocationTrainer\";\n\nconst TrainerSignup = () => {\n  return (\n    <div>\n      <BannerTrainer />\n      <ExperienceTrainer />\n      <LocationTrainer />\n    </div>\n  );\n};\n\nexport default TrainerSignup;\n","import { useState, useEffect } from \"react\";\n\nconst useForm = (validate) => {\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        cpassword: \"\",\n        signUpType: \"email\",\n    });\n\n    const [error, setError] = useState({});\n    const [isSubmit, setSubmit] = useState(false);\n    const [dataSubmit, setdataSubmit] = useState(false);\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        const errorData = validate(data);\n        setError(errorData);\n        setSubmit(true);\n    };\n\n    useEffect(() => {\n        if (Object.keys(error).length === 0 && isSubmit) {\n            setdataSubmit(true);\n        }\n    }, [error]);\n\n    return { data, handleFormSubmit, error, setData, dataSubmit };\n};\nexport default useForm;\n","const validation = (values) => {\n    let errors = {};\n\n    if (!values.name) {\n        errors.name = \"This field is required\";\n    } else if (values.name.length <= 1) {\n        errors.name = \"This field should contain more than one character\";\n    } else if (!/^[a-zA-Z]+(\\s[a-zA-Z]+)+$/gm.test(values.name)) {\n        errors.name = \"Enter full name\";\n    } else if (!/^[a-zA-Z]+\\s[a-zA-Z]+\\s?$/g.test(values.name)) {\n        errors.name = \" Enter a valid name\";\n    }\n\n    if (!values.email) {\n        errors.email = \"   This field is required\";\n    } else if (\n        !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(\n            values.email\n        )\n    ) {\n        errors.email = \" Please enter a valid email address\";\n    } else if (values.email.length < 8) {\n        errors.email = \" This field should contain greater then 8 charater\";\n    }\n\n    if (!values.phoneNumber) {\n        errors.phoneNumber = \"   This field is required\";\n    } else if (!/^[0-9]*$/i.test(values.phoneNumber)) {\n        errors.phoneNumber = \"Invalid Number\";\n    } else if (values.phoneNumber.length < 11) {\n        errors.phoneNumber = \"Enter a valid number\";\n    } else if (values.phoneNumber.length >= 12) {\n        errors.phoneNumber = \" This field exceed max length\";\n    }\n\n    if (!values.password) {\n        errors.password = \"This field is required\";\n    } else if (values.password.length < 6) {\n        errors.password = \" Password should be more then 6 Charcters\";\n    } else if (values.password.length > 8) {\n        errors.password = \" This field exceed max length\";\n    } else if (\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\n            values.password\n        )\n    ) {\n        errors.password =\n            \" Password should be 8 characters long and contain a Capital letter, Number & Special character\";\n    }\n\n    if (!values.cpassword) {\n        errors.cpassword = \"This field is required\";\n    } else if (values.cpassword.length < 6) {\n        errors.cpassword = \" Password should be more then 6 Charcters\";\n    } else if (values.cpassword.length > 8) {\n        errors.cpassword = \" This field exceed max length\";\n    } else if (\n        !/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(\n            values.cpassword\n        )\n    ) {\n        errors.cpassword =\n            \" Password should be 8 characters long and contain a Capital letter, Number & Special character\";\n    } else if (values.password !== values.cpassword) {\n        errors.cpassword = \"  The passwords do not match\";\n    }\n\n    return errors;\n};\n\nexport default validation;\n","import NYC from \"../../../assets/files/Home/Location/NYC.png\";\nimport Miami from \"../../../assets/files/Home/Location/Miami Image.png\";\nimport Hamptons from \"../../../assets/files/Home/Location/Hamptons Image.png\";\nimport Rectangle from \"../../../assets/files/TrainerSignUp/ExperienceTrainer/Rectangle.svg\";\nimport TessaWilson from \"../../../assets/files/Home/Location/tessa-wilson.jpeg\";\n\nexport const SlideData = [\n  {\n    name: \"New york city\",\n    image: NYC,\n    line: Rectangle,\n  },\n  {\n    name: \"Miami\",\n    image: Miami,\n    line: Rectangle,\n  },\n  {\n    name: \"Hamptons\",\n    image: Hamptons,\n    line: Rectangle,\n  },\n  {\n    name: \"Palm Beach\",\n    image: TessaWilson,\n    line: Rectangle,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/Hamptons Image.0daace2f.png\";","export default __webpack_public_path__ + \"static/media/Miami Image.a63d3986.png\";","export default __webpack_public_path__ + \"static/media/NYC.e195b1c3.png\";","export default __webpack_public_path__ + \"static/media/tessa-wilson.b4101337.jpeg\";","export default __webpack_public_path__ + \"static/media/Rectangle.33226144.svg\";","export default __webpack_public_path__ + \"static/media/Phone Icon.595b1737.svg\";","export default __webpack_public_path__ + \"static/media/Icon 1.c3b0b91f.svg\";","export default __webpack_public_path__ + \"static/media/Icon 2.8d42302f.svg\";","export default __webpack_public_path__ + \"static/media/Icon 3.b70f5deb.svg\";","export default __webpack_public_path__ + \"static/media/Icon 4.8b99a172.svg\";","export default __webpack_public_path__ + \"static/media/Icon 5.8ee8a46f.svg\";","export default __webpack_public_path__ + \"static/media/Icon 6.1c462fab.svg\";"],"sourceRoot":""}