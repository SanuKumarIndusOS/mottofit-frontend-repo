{"version":3,"sources":["component/TrainerProfile/UserScheduler/UserScheduler.js","assets/files/SVG/SchedulerAsset/Left Button.svg","assets/files/SVG/SchedulerAsset/Right Button.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg","assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg"],"names":["timeZone","label","value","UserScheduler","connect","dispatch","bindActionCreators","getCalenderDetails","props","early_bird","EarlyInActive","rise_shine","RiseInActive","mid_day","MidInActive","mid_day_2","happy_hour","HappyInActive","never_too_late","NeverTooInActive","React","useState","time","setTime","TimeSlot","setTimeSlot","cellData","setCellData","setSelectedCell","userSlots","setuserSlots","cells","cal","setCal","moment","startOf","startWeek","setstartWeek","endOf","endWeek","setendWeek","dt","Object","lt","data","setData","aslot","setAslot","aslotKeys","setAslotKeys","useEffect","getAvailableSlots","populate","selectedTimes","length","ta","keys","map","item","a","push","temp","date","column","key","row","selectedCell","start","end","now","clone","dates","isSameOrBefore","format","add","selectUserSlot","cellCollection","tss","newTime","ts","valueOf","find","el","console","log","reduxData","updateUserDetails","parentCallback","prevTime","subtract","tableData2","startDate","endDate","id","then","style","height","src","width","wordWrap","lineHeight","paddingLeft","paddingRight","paddingBottom","fontFamily","fontWeight","color","margin","className","slice","l","backgroundColor","onClick","isAfter","BackIcon","cursor","disabled","opacity","NextIcon","title","list","onChange","e","name"],"mappings":"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","file":"static/js/108.41181456.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n// import \"./styles.scss\";\r\nimport moment from \"moment\";\r\nimport BackIcon from \"../../../assets/files/SVG/SchedulerAsset/Left Button.svg\";\r\nimport NextIcon from \"../../../assets/files/SVG/SchedulerAsset/Right Button.svg\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\nimport EarlyInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/EarlyBird_Inactive.svg\";\r\nimport RiseInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg\";\r\nimport MidInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg\";\r\nimport HappyInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/HappyHour_Inactive.svg\";\r\nimport NeverTooInActive from \"../../../assets/files/TrainerDashboard/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg\";\r\nimport { getCalenderDetails } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFormatDate } from \"service/helperFunctions\";\r\nconst timeZone = [\r\n  {\r\n    label: \"Early Bird\",\r\n    value: \"EarlyBird\",\r\n  },\r\n  {\r\n    label: \"Rise & Shine\",\r\n    value: \"RiseAndShine\",\r\n  },\r\n  {\r\n    label: \"Mid-Day Break\",\r\n    value: \"MidDayBreak1\",\r\n  },\r\n  {\r\n    label: \"Mid-Day Lunchtime\",\r\n    value: \"MidDayBreak2\",\r\n  },\r\n  {\r\n    label: \"Happy Hour\",\r\n    value: \"HappyHours\",\r\n  },\r\n  {\r\n    label: \"Never Too Late\",\r\n    value: \"NeverTooLate\",\r\n  },\r\n];\r\nfunction UserSchedulerClass(props) {\r\n  //   let date = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n  let early_bird = [\r\n    \"05:00 AM\",\r\n    \"05:30 AM\",\r\n    \"06:00 AM\",\r\n    \"06:30 AM\",\r\n    \"07:00 AM\",\r\n    \"07:30 AM\",\r\n    \"Early Bird\",\r\n    EarlyInActive,\r\n  ];\r\n\r\n  let rise_shine = [\r\n    \"08:00 AM\",\r\n    \"08:30 AM\",\r\n    \"09:00 AM\",\r\n    \"09:30 AM\",\r\n    \"10:00 AM\",\r\n    \"10:30 AM\",\r\n    \"Rise & Shine\",\r\n    RiseInActive,\r\n  ]; //1\r\n\r\n  let mid_day = [\r\n    \"11:00 AM\",\r\n    \"11:30 AM\",\r\n    \"12:00 PM\",\r\n    \"12:30 PM\",\r\n    \"01:00 PM\",\r\n    \"01:30 PM\",\r\n    \"Mid-Day Break\",\r\n    MidInActive,\r\n  ]; //230 - 4\r\n\r\n  let mid_day_2 = [\r\n    \"02:00 PM\",\r\n    \"02:30 PM\",\r\n    \"03:00 PM\",\r\n    \"03:30 PM\",\r\n    \"04:00 PM\",\r\n    \"04:30 PM\",\r\n    \"Mid-Day Lunchtime\",\r\n    MidInActive,\r\n  ];\r\n\r\n  let happy_hour = [\r\n    \"05:00 PM\",\r\n    \"05:30 PM\",\r\n    \"06:00 PM\",\r\n    \"06:30 PM\",\r\n    \"07:00 PM\",\r\n    \"07:30 PM\",\r\n    \"Happy Hour\",\r\n    HappyInActive,\r\n  ];\r\n\r\n  let never_too_late = [\r\n    \"08:00 PM\",\r\n    \"08:30 PM\",\r\n    \"09:00 PM\",\r\n    \"09:30 PM\",\r\n    \"10:00 PM\",\r\n    \"10:30 PM\",\r\n    \"Never Too Late\",\r\n    NeverTooInActive,\r\n  ];\r\n\r\n  const [time, setTime] = React.useState(early_bird);\r\n  const [TimeSlot, setTimeSlot] = React.useState(\"EarlyBird\");\r\n\r\n  const [cellData, setCellData] = React.useState([]);\r\n  const [selectedCell, setSelectedCell] = React.useState([]);\r\n\r\n  const [userSlots, setuserSlots] = React.useState([]);\r\n\r\n  const [cells, setCells] = React.useState([\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false],\r\n  ]);\r\n\r\n  const [cal, setCal] = React.useState([]);\r\n  const [startWeek, setstartWeek] = React.useState(moment().startOf(\"isoWeek\"));\r\n  const [endWeek, setendWeek] = React.useState(moment().endOf(\"isoWeek\"));\r\n\r\n  var dt = new Object();\r\n  var lt = new Object();\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const [aslot, setAslot] = React.useState();\r\n  const [aslotKeys, setAslotKeys] = React.useState();\r\n\r\n  useEffect(() => {\r\n    getAvailableSlots(startWeek, endWeek);\r\n    populate(startWeek, endWeek);\r\n\r\n    // setuserSlots([props.startTime, props.endTime]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props?.selectedTimes?.length === 2) {\r\n      setuserSlots(props.selectedTimes);\r\n    }\r\n  }, [props.selectedTimes]);\r\n\r\n  useEffect(() => {\r\n    setSelectedCell([]);\r\n    getAvailableSlots(startWeek, endWeek);\r\n    populate(startWeek, endWeek);\r\n  }, [time]);\r\n\r\n  useEffect(() => {\r\n    Object.keys(data).map((item) => {\r\n      dt[data[item][\"slotDate\"]] = data[item][\"availabileTimes\"];\r\n    });\r\n\r\n    var ta;\r\n    Object.keys(dt).map((item) => {\r\n      ta = [];\r\n      dt[item].map((a) => {\r\n        // ta.push(a[\"end\"]);\r\n        ta.push(a[\"start\"]);\r\n      });\r\n\r\n      lt[item] = ta;\r\n    });\r\n\r\n    setAslot(lt);\r\n    setAslotKeys(Object.keys(lt));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setCellData([]);\r\n    time.map((time) => {\r\n      var temp = [];\r\n      cal.map((date) => {\r\n        // temp.push(date + \" \" + time);\r\n        temp.push({ date: date, time: time });\r\n      });\r\n\r\n      setCellData((cellData) => [...cellData, temp]);\r\n    });\r\n  }, [cal]);\r\n\r\n  useEffect(() => {\r\n    //    (\"change\", cells, cellData);\r\n    setSelectedCell([]);\r\n    cells.map((column, key) => {\r\n      var temp = [];\r\n      if (key !== 0) {\r\n        // (key);\r\n\r\n        column.map((row, key) => {\r\n          if (row === true) {\r\n            temp.push(key - 1);\r\n          }\r\n        });\r\n\r\n        setSelectedCell((selectedCell) => [...selectedCell, temp]);\r\n      }\r\n    });\r\n  }, [cells]);\r\n\r\n  const PreviousWeek = () => {\r\n    //Reset current cells\r\n\r\n    setstartWeek(startWeek.subtract(7, \"days\"));\r\n    setendWeek(endWeek.subtract(7, \"days\"));\r\n\r\n    getAvailableSlots(startWeek, endWeek);\r\n    populate(startWeek, endWeek);\r\n  };\r\n\r\n  const NextWeek = () => {\r\n    //Reset current cells\r\n\r\n    setstartWeek(startWeek.add(7, \"days\"));\r\n    setendWeek(endWeek.add(7, \"days\"));\r\n\r\n    getAvailableSlots(startWeek, endWeek);\r\n\r\n    populate(startWeek, endWeek);\r\n\r\n    // getAvailableSlots(startWeek, endWeek)\r\n  };\r\n\r\n  const populate = (start, end) => {\r\n    setCellData([]);\r\n    var now = start.clone(),\r\n      dates = [];\r\n\r\n    while (now.isSameOrBefore(end)) {\r\n      dates.push(now.format(\"YYYY-MM-DD\"));\r\n      now.add(1, \"days\");\r\n    }\r\n    setCal(dates);\r\n\r\n    if (cellData.length === 0) {\r\n      time.map((time) => {\r\n        var temp = [];\r\n        dates.map((date) => {\r\n          // temp.push(date + \" \" + time);\r\n          temp.push({ date: date, time: time });\r\n        });\r\n\r\n        setCellData((cellData) => [...cellData, temp]);\r\n      });\r\n    }\r\n  };\r\n\r\n  function selectUserSlot(date, time) {\r\n    // var temp = [date + time]\r\n    // setuserSlots(temp);\r\n\r\n    // console.log(date, time);\r\n\r\n    var cellCollection = [];\r\n    var temp = aslot[date];\r\n    cellCollection.push(time + date);\r\n\r\n    var newTime = moment(time, \"hh:mm A\").add(30, \"minutes\").format(\"hh:mm A\");\r\n    var ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\").valueOf();\r\n    var tss;\r\n    if (temp.find((el) => el === newTime)) {\r\n      cellCollection.push(newTime + date);\r\n      tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n        .add(60, \"minutes\")\r\n        .valueOf();\r\n\r\n      console.log(cellCollection, \"cellCollection1\");\r\n\r\n      let reduxData = {\r\n        selectedTimes: cellCollection,\r\n      };\r\n\r\n      props.updateUserDetails(reduxData);\r\n\r\n      props.parentCallback(ts, tss, date);\r\n    } else {\r\n      var prevTime = moment(newTime, \"hh:mm A\")\r\n        .subtract(60, \"minutes\")\r\n        .format(\"hh:mm A\");\r\n      cellCollection.push(prevTime + date);\r\n      tss = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n        .subtract(30, \"minutes\")\r\n        .valueOf();\r\n\r\n      ts = moment(`${date} ${time}`, \"YYYY-MM-DD hh:mm\")\r\n        .add(30, \"minutes\")\r\n        .valueOf();\r\n\r\n      console.log(cellCollection, \"cellCollection1\");\r\n\r\n      let reduxData = {\r\n        selectedTimes: cellCollection,\r\n      };\r\n\r\n      props.updateUserDetails(reduxData);\r\n\r\n      props.parentCallback(tss, ts, date);\r\n    }\r\n\r\n    setuserSlots(cellCollection);\r\n  }\r\n\r\n  useEffect(() => {\r\n    populate(startWeek, endWeek);\r\n  }, [userSlots]);\r\n\r\n  const getAvailableSlots = (start, end) => {\r\n    var startDate = start.format(\"YYYY-MM-DD\");\r\n    var endDate = end.format(\"YYYY-MM-DD\");\r\n\r\n    if (props.id) {\r\n      props\r\n        .getCalenderDetails(props.id, startDate, endDate, TimeSlot)\r\n        .then(({ data }) => {\r\n          setData(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  let tableData2;\r\n\r\n  if (cellData.length === 0) {\r\n    //console.log(\"hitu\");\r\n  } else {\r\n    tableData2 = (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ height: \"70px\" }}>\r\n              <img src={time[7]} style={{ width: \"30px\", height: \"30px\" }} />\r\n              <h6\r\n                style={{\r\n                  wordWrap: \"break-word\",\r\n                  lineHeight: \"18px\",\r\n                  paddingLeft: \"0.5em\",\r\n                  paddingRight: \"0.5em\",\r\n                  paddingBottom: \"0em\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontWeight: \"600\",\r\n                  color: \"#898989\",\r\n                  margin: 0,\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {time[6]}\r\n              </h6>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[0].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">MON</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[1].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">TUES</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[2].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">WED</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[3].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">THURS</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[4].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">FRI</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[5].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">SAT</div>\r\n            </th>\r\n            <th>\r\n              <div className=\"table_header_number\">{cal[6].slice(8, 10)}</div>\r\n              <div className=\"table_header_txt\">SUN</div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[0]}</td>\r\n            {cellData[0].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                        className=\"avaiable_slot\"\r\n                      >\r\n                        {item.time}\r\n                      </td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[1]}</td>\r\n            {cellData[1].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                        className=\"avaiable_slot\"\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[2]}</td>\r\n            {cellData[2].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[3]}</td>\r\n            {cellData[3].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[4]}</td>\r\n            {cellData[4].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td className=\"user_time_slot\">{time[5]}</td>\r\n            {cellData[5].map((item) => {\r\n              if (aslotKeys.length !== 0) {\r\n                if (aslotKeys.find((el) => el === item.date)) {\r\n                  if (aslot[item.date].find((l) => l === item.time)) {\r\n                    return userSlots.find(\r\n                      (el) => el === item.time + item.date\r\n                    ) ? (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#53bfd2\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    ) : (\r\n                      <td\r\n                        style={{\r\n                          backgroundColor: \"#fff\",\r\n                        }}\r\n                        onClick={() => selectUserSlot(item.date, item.time)}\r\n                      ></td>\r\n                    );\r\n                  } else {\r\n                    return <td></td>;\r\n                  }\r\n                } else {\r\n                  return <td></td>;\r\n                }\r\n              } else {\r\n                return <td></td>;\r\n              }\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"outter_table_user\">\r\n      <div className=\"table_user\">\r\n        <div className=\"table_inner_trainer\">\r\n          <div className=\"table_date\">\r\n            {moment(startWeek.format(\"YYYY-MM-DD\")).isAfter(\r\n              moment().startOf(\"isoWeek\").format(\"YYYY-MM-DD\"),\r\n              \"day\"\r\n            ) ? (\r\n              <div>\r\n                <img\r\n                  src={BackIcon}\r\n                  onClick={PreviousWeek}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />{\" \"}\r\n                &ensp;\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <img\r\n                  src={BackIcon}\r\n                  disabled=\"true\"\r\n                  style={{\r\n                    opacity: \"0.5\",\r\n                    cursor: \"not-allowed\",\r\n                  }}\r\n                />{\" \"}\r\n                &ensp;\r\n              </div>\r\n            )}\r\n            &ensp;\r\n            <div className=\"date_week\">\r\n              {startWeek.format(\"DD\")} - {endWeek.format(\"DD\")} &ensp;\r\n              {startWeek.format(\"MMMM\")} &ensp; {startWeek.format(\"yyyy\")}{\" \"}\r\n            </div>\r\n            <img\r\n              src={NextIcon}\r\n              onClick={NextWeek}\r\n              style={{ cursor: \"pointer\" }}\r\n            />{\" \"}\r\n            &ensp; &ensp;\r\n          </div>\r\n\r\n          <Dropdown\r\n            className=\"custom_dropdown\"\r\n            title=\"Select Time Zone\"\r\n            list={timeZone}\r\n            value={TimeSlot}\r\n            onChange={(e) => {\r\n              setTimeSlot(e.value);\r\n              if (e.value === \"EarlyBird\") {\r\n                setTime(early_bird);\r\n              }\r\n\r\n              if (e.value === \"RiseAndShine\") {\r\n                setTime(rise_shine);\r\n              }\r\n\r\n              if (e.value === \"MidDayBreak1\") {\r\n                setTime(mid_day);\r\n              }\r\n\r\n              if (e.value === \"MidDayBreak2\") {\r\n                setTime(mid_day_2);\r\n              }\r\n\r\n              if (e.value === \"HappyHours\") {\r\n                setTime(happy_hour);\r\n              }\r\n\r\n              if (e.value === \"NeverTooLate\") {\r\n                setTime(never_too_late);\r\n              }\r\n            }}\r\n            name=\"TimeSlot\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <br></br>\r\n\r\n      {tableData2}\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCalenderDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst UserScheduler = connect(null, mapDispatchToProps)(UserSchedulerClass);\r\n\r\nexport default UserScheduler;\r\n","export default __webpack_public_path__ + \"static/media/Left Button.0b9d3a76.svg\";","export default __webpack_public_path__ + \"static/media/Right Button.648b272c.svg\";","export default __webpack_public_path__ + \"static/media/EarlyBird_Inactive.8646c23c.svg\";","export default __webpack_public_path__ + \"static/media/HappyHour_Inactive.bef73318.svg\";","export default __webpack_public_path__ + \"static/media/Mid-DayBreak_Inactive.edab2351.svg\";","export default __webpack_public_path__ + \"static/media/NeverTooLate_Inactive.0ac0364d.svg\";","export default __webpack_public_path__ + \"static/media/Rise_Shine_Inactive.fb11fce5.svg\";"],"sourceRoot":""}