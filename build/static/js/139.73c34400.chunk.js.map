{"version":3,"sources":["action/adminAct.js"],"names":["changeApproval","body","id","dispatch","getState","api","Promise","resolve","reject","changeTrainerStatus","TrainerApi","payload","trainerId","action","trainerStatus","then","data","catch","err","getTrainerDetail","isAdmin","getAllTrainerLists","page","getStatsData","getAllUsersLists","fetchTrainersLists"],"mappings":"gaAGaA,EAAiB,SAACC,EAAMC,GAAP,OAAc,SAACC,EAAUC,EAAX,GAAkC,IAAXC,EAAU,EAAVA,IACjE,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAQC,EAAwBC,aAAxBD,oBAEJE,EAAU,CACZC,UAAWV,EACXW,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAMa,eAGhBL,EAAoBR,KAAOU,EAE3BN,EAAI,eAAKI,IACNM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPT,EAAQS,MAETC,OAAM,SAACC,GACNV,EAAOU,WAMFC,EAAmB,SAACjB,GAAD,IAAKkB,IAAL,gEAAwB,SACtDjB,EACAC,EAFsD,GAIlD,IADFC,EACC,EADDA,IAEF,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAQW,EAAqBT,aAArBS,iBACRA,EAAiBjB,GAAKA,EACtBG,EAAI,2BAAKc,GAAN,IAAwBC,aACxBL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPT,EAAQS,MAETC,OAAM,SAACC,GACNV,EAAOU,WAMFG,EAAqB,SAACC,GAAD,IAAOF,IAAP,gEAA0B,SAC1DjB,EACAC,EAF0D,GAItD,IADFC,EACC,EADDA,IAEF,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAQa,EAAuBX,aAAvBW,mBACRA,EAAmBC,KAAOA,EAC1BjB,EAAI,2BAAKgB,GAAN,IAA0BD,aAC1BL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPT,EAAQS,MAETC,OAAM,SAACC,GACNV,EAAOU,WAKFK,EAAe,SAACD,GAAD,IAAOF,IAAP,gEAA0B,SACpDjB,EACAC,EAFoD,GAIhD,IADFC,EACC,EADDA,IAEF,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,EAAI,2BAAKK,aAAWa,cAAjB,IAA+BH,aAC/BL,MAAK,SAACC,GACLT,EAAQS,MAETC,OAAM,SAACC,GACNV,EAAOU,WAKFM,EAAmB,SAACF,GAAD,IAAOF,IAAP,gEAA0B,SACxDjB,EACAC,EAFwD,GAIpD,IADFC,EACC,EADDA,IAEF,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAQgB,EAAqBd,aAArBc,iBACRA,EAAiBF,KAAOA,EACxBjB,EAAI,2BAAKmB,GAAN,IAAwBJ,aACxBL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPT,EAAQS,MAETC,OAAM,SAACC,GACNV,EAAOU,WAMFO,EAAqB,SAACH,GAAD,IAAOF,IAAP,gEAA0B,SAC1DjB,EACAC,EAF0D,GAItD,IADFC,EACC,EADDA,IAEF,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAQiB,EAAuBf,aAAvBe,mBACRA,EAAmBH,KAAOA,EAC1BjB,EAAI,2BAAKoB,GAAN,IAA0BL,aAC1BL,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPT,EAAQS,MAETC,OAAM,SAACC,GACNV,EAAOU","file":"static/js/139.73c34400.chunk.js","sourcesContent":["import { TrainerApi } from \"service/apiVariables\";\r\n\r\n//change Approval\r\nexport const changeApproval = (body, id) => (dispatch, getState, { api }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { changeTrainerStatus } = TrainerApi;\r\n\r\n    let payload = {\r\n      trainerId: id,\r\n      action: body?.trainerStatus,\r\n    };\r\n\r\n    changeTrainerStatus.body = payload;\r\n\r\n    api({ ...changeTrainerStatus })\r\n      .then(({ data }) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\n//get Trainer Detail\r\nexport const getTrainerDetail = (id, isAdmin = true) => (\r\n  dispatch,\r\n  getState,\r\n  { api }\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getTrainerDetail } = TrainerApi;\r\n    getTrainerDetail.id = id;\r\n    api({ ...getTrainerDetail, isAdmin })\r\n      .then(({ data }) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\n//get All Trainer Lists\r\nexport const getAllTrainerLists = (page, isAdmin = true) => (\r\n  dispatch,\r\n  getState,\r\n  { api }\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getAllTrainerLists } = TrainerApi;\r\n    getAllTrainerLists.page = page;\r\n    api({ ...getAllTrainerLists, isAdmin })\r\n      .then(({ data }) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n//get Stats Data\r\nexport const getStatsData = (page, isAdmin = true) => (\r\n  dispatch,\r\n  getState,\r\n  { api }\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    api({ ...TrainerApi.getStatsData, isAdmin })\r\n      .then((data) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n//get All Users Lists\r\nexport const getAllUsersLists = (page, isAdmin = true) => (\r\n  dispatch,\r\n  getState,\r\n  { api }\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { getAllUsersLists } = TrainerApi;\r\n    getAllUsersLists.page = page;\r\n    api({ ...getAllUsersLists, isAdmin })\r\n      .then(({ data }) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\n//fetct Trainers Lists\r\nexport const fetchTrainersLists = (page, isAdmin = true) => (\r\n  dispatch,\r\n  getState,\r\n  { api }\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { fetchTrainersLists } = TrainerApi;\r\n    fetchTrainersLists.page = page;\r\n    api({ ...fetchTrainersLists, isAdmin })\r\n      .then(({ data }) => {\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n"],"sourceRoot":""}