{"version":3,"sources":["component/TrainerOnBoard/TrainerAboutYou/index.js","assets/files/SVG/Drop Down 4.svg","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg","component/common/NormalMultiSelect/index.js"],"names":["locations","label","value","genderList","AboutTrainerFC","state","dob","location","email","gender","websiteURL","phone","instagram","firstName","isLoading","validator","SimpleReactValidator","messages","element","message","className","autoForceUpdate","validators","rule","val","params","helpers","testRegex","messageReplace","replace","toSentence","required","handleTrainerBackground","e","a","preventDefault","storeData","DOB","websiteLink","instagramProfile","allValid","setState","props","updateTrainerDetailsApicall","then","hideMessages","history","push","catch","showMessages","forceUpdate","handleInput","target","name","this","trainerDetail","data","phoneNumber","placeholder","style","textTransform","onChange","arrow","options","handleChange","type","onFocus","currentTarget","moment","diff","disableDropdown","disableAreaCodes","countryCodeEditable","inputProps","src","Web","alt","Instagram","onClick","disabled","WaterMark","Component","AboutTrainer","connect","dispatch","bindActionCreators","getTrainerDetails","NormalMultiSelect","newValue","isMulti","body","length","forEach","array","obj","handleInputChange","handleinputChange","isReadOnly","isClearable","isSearchable","isBoldLabel","showArrow","customStyles","base","fontSize","color","fontWeight","lineHeight","display","justifyContent","alignItems","height","fontFamily","indicatorSeparator","valueContainer","padding","singleValue","dropdownIndicator","width","option","isFocused","backgroundColor","textAlign","control","borderRadius","border","boxShadow","outline","background","minHeight","classNamePrefix","isDisabled","styles","find","components","DropdownIndicator","logo"],"mappings":"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","file":"static/js/52.5a37c4af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Instagram from \"../../../assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"../../../assets/files/SVG/Web Icon.svg\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport {\r\n  updateTrainerDetailsApicall,\r\n  getTrainerDetails,\r\n} from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"helpers\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { trainerDetail } from \"action/trainerAct\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { NormalMultiSelect } from \"component/common/NormalMultiSelect\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport moment from \"moment\";\r\n\r\nconst locations = [\r\n  {\r\n    label: \"New York City\",\r\n    value: \"New York City\",\r\n  },\r\n  {\r\n    label: \"Miami\",\r\n    value: \"Miami\",\r\n  },\r\n  {\r\n    label: \"Hamptons\",\r\n    value: \"Hamptons\",\r\n  },\r\n  {\r\n    label: \"Palm Beach\",\r\n    value: \"Palm Beach\",\r\n  },\r\n];\r\n\r\nconst genderList = [\r\n  {\r\n    label: \"Male\",\r\n    value: \"Male\",\r\n  },\r\n  {\r\n    label: \"Female\",\r\n    value: \"Female\",\r\n  },\r\n];\r\nclass AboutTrainerFC extends Component {\r\n  state = {\r\n    dob: \"\",\r\n    location: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    websiteURL: \"\",\r\n    phone: \"\",\r\n    instagram: \"\",\r\n    firstName: \"\",\r\n    isLoading: false,\r\n  };\r\n\r\n  //validation\r\n  validator = new SimpleReactValidator({\r\n    messages: {\r\n      email: \"Invalid Email address\",\r\n    },\r\n    element: (message) => (\r\n      <span className=\"error-message text-danger fs-14\">{message}</span>\r\n    ),\r\n    autoForceUpdate: this,\r\n    validators: {\r\n      email: {\r\n        message: \"must be a valid Email.\",\r\n        rule: (val, params, validator) => {\r\n          return validator.helpers.testRegex(\r\n            val,\r\n            /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/\r\n          );\r\n        },\r\n        messageReplace: (message, params) =>\r\n          message.replace(\"\", this.helpers.toSentence(params)),\r\n        required: true,\r\n      },\r\n    },\r\n  });\r\n\r\n  handleTrainerBackground = async (e) => {\r\n    e.preventDefault();\r\n    let {\r\n      dob,\r\n      location,\r\n      email,\r\n      gender,\r\n      websiteURL,\r\n      phone,\r\n      instagram,\r\n      firstName,\r\n    } = this.state;\r\n    const storeData = {\r\n      firstName,\r\n      DOB: dob,\r\n      email,\r\n      gender,\r\n      phone,\r\n      location,\r\n      websiteLink: websiteURL,\r\n      instagramProfile: instagram,\r\n    };\r\n\r\n    if (this.validator.allValid()) {\r\n      this.setState({ isLoading: true });\r\n      this.props\r\n        .updateTrainerDetailsApicall(storeData)\r\n        .then(() => {\r\n          this.validator.hideMessages();\r\n          this.setState({ isLoading: false });\r\n          history.push(`/trainer/background`);\r\n        })\r\n        .catch(() => {\r\n          this.setState({ isLoading: false });\r\n        });\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  handleInput = ({ target: { value, name } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.trainerDetail().then((data) => {\r\n      this.setState({\r\n        dob: data.DOB ? data.DOB : \"\",\r\n        location: data.location ? data.location : \"\",\r\n        email: data.email ? data.email : \"\",\r\n        gender: data.gender ? data.gender : \"\",\r\n        websiteURL: data.websiteLink ? data.websiteLink : \"\",\r\n        phone: data.phoneNumber ? data.phoneNumber : \"\",\r\n        instagram: data.instagramProfile ? data.instagramProfile : \"\",\r\n        firstName: data.firstName ? data.firstName : \"\",\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    let {\r\n      dob,\r\n      location,\r\n      email,\r\n      gender,\r\n      websiteURL,\r\n      phone,\r\n      instagram,\r\n      firstName,\r\n      isLoading,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"container main\">\r\n          <div className=\"wrapper_about\">\r\n            <h2>Tell us a little bit about you</h2>\r\n            <br></br>\r\n            <div className=\"outter_form\">\r\n              <div className=\"wrapper_inputs\">\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Name*</label>\r\n                  <input\r\n                    placeholder=\"Name\"\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    onChange={(e) => this.handleInput(e)}\r\n                    value={firstName}\r\n                    name=\"firstName\"\r\n                  />\r\n                  {this.validator.message(\r\n                    \"firstName\",\r\n                    firstName,\r\n                    \"required|alpha_space\"\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label className=\"bg_down\">Location*</label>\r\n                  <div className=\"iconwrapper\">\r\n                    <NormalMultiSelect\r\n                      placeholder=\"Select Your City\"\r\n                      value={location}\r\n                      arrow={true}\r\n                      name=\"location\"\r\n                      options={locations}\r\n                      handleChange={(e) => this.handleInput(e)}\r\n                    />\r\n                  </div>\r\n                  {this.validator.message(\"location\", location, \"required\")}\r\n                </div>\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Date of Birth*</label>\r\n                  <input\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    type=\"date\"\r\n                    onFocus={(e) => (e.currentTarget.type = \"date\")}\r\n                    placeholder=\"MM/DD/YYYY\"\r\n                    value={dob}\r\n                    onChange={(e) => this.handleInput(e)}\r\n                    name=\"dob\"\r\n                    min=\"1900-01-01\"\r\n                    max=\"2099-12-31\"\r\n                    // onKeyDown={(e) =>\r\n                    //   e.keyCode !== 8 ? e.preventDefault() : \"\"\r\n                    // }\r\n                  />\r\n                  {this.validator.message(\"dob\", dob, \"required\")}\r\n                  {dob && moment().diff(dob, \"years\", false) <= 21 && (\r\n                    <span>Trainer should be more than 21 years of age</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Select Your Gender*</label>\r\n                  <div className=\"iconwrapper\">\r\n                    <NormalMultiSelect\r\n                      placeholder=\"Select Gender\"\r\n                      value={gender}\r\n                      arrow={true}\r\n                      name=\"gender\"\r\n                      options={genderList}\r\n                      handleChange={(e) => this.handleInput(e)}\r\n                    />\r\n                  </div>\r\n                  {this.validator.message(\"gender\", gender, \"required\")}\r\n                </div>\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Email*</label>\r\n                  <input\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => this.handleInput(e)}\r\n                    name=\"email\"\r\n                  />\r\n                  {this.validator.message(\"email\", email, \"required|email\")}\r\n                </div>\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Phone*</label>\r\n\r\n                  <ReactPhoneInput\r\n                    type=\"phone\"\r\n                    disableDropdown\r\n                    disableAreaCodes\r\n                    countryCodeEditable={false}\r\n                    value={phone}\r\n                    placeholder=\"Phone Number\"\r\n                    // country=\"us\"\r\n                    inputProps={{\r\n                      name: \"phone\",\r\n                    }}\r\n                    name=\"phoneNumber\"\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        phone: e,\r\n                      });\r\n                    }}\r\n                  />\r\n                  {this.validator.message(\"phone\", phone, \"required|phone\")}\r\n                </div>\r\n\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Website</label>\r\n                  <div className=\"iconwrapper\">\r\n                    <input\r\n                      placeholder=\"Add your weblink\"\r\n                      type=\"text\"\r\n                      value={websiteURL}\r\n                      name=\"websiteURL\"\r\n                      onChange={(e) => this.handleInput(e)}\r\n                    />\r\n                    <img src={Web} alt=\"icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"wrapper_innerInput\">\r\n                  <label>Instagram</label>\r\n                  <div className=\"iconwrapper\">\r\n                    <input\r\n                      placeholder=\"Add your Instagram Handle\"\r\n                      type=\"text\"\r\n                      value={instagram}\r\n                      name=\"instagram\"\r\n                      onChange={(e) => this.handleInput(e)}\r\n                    />\r\n                    <img src={Instagram} alt=\"icon\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"submit_button\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    onClick={(e) => this.handleTrainerBackground(e)}\r\n                    disabled={isLoading}\r\n                    className=\"d-flex justify-content-center\"\r\n                  >\r\n                    {isLoading ? (\r\n                      \"Loading...\"\r\n                    ) : (\r\n                      <>\r\n                        Continue\r\n                        <ArrowHoverBlacked />\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <img src={WaterMark} alt=\"icon\" className=\"about_watermark\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateTrainerDetailsApicall,\r\n      getTrainerDetails,\r\n      trainerDetail,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst AboutTrainer = connect(null, mapDispatchToProps)(AboutTrainerFC);\r\n\r\nexport default AboutTrainer;\r\n","export default __webpack_public_path__ + \"static/media/Drop Down 4.50302f8e.svg\";","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";","import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"./select.scss\";\r\nimport logo from \"../../../assets/files/SVG/Drop Down 4.svg\";\r\nexport class NormalMultiSelect extends Component {\r\n    //change select\r\n    handleChange = (newValue) => {\r\n        let { isMulti } = this.props;\r\n        if (!!isMulti) {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: [],\r\n                },\r\n            };\r\n            if (!!newValue && newValue.length) {\r\n                newValue.forEach((array) => {\r\n                    let obj = {\r\n                        value: array.value,\r\n                        label: array.label,\r\n                    };\r\n                    body.target.value.push(obj);\r\n                });\r\n            }\r\n            this.props.handleChange(body);\r\n        } else {\r\n            let body = {\r\n                target: {\r\n                    name: this.props.name,\r\n                    value: newValue ? newValue.value : \"\",\r\n                    label: newValue ? newValue.label : \"\",\r\n                },\r\n            };\r\n\r\n            this.props.handleChange(body);\r\n        }\r\n    };\r\n\r\n    //handle Input Change\r\n    handleInputChange = (newValue) => {\r\n        let body = {\r\n            target: {\r\n                name: this.props.name,\r\n                value: newValue ? newValue : \"\",\r\n            },\r\n        };\r\n        this.props.handleinputChange && this.props.handleinputChange(body);\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            className = \"select-form-control w-100\",\r\n            options = [],\r\n            value = \"\",\r\n            name = \"\",\r\n            placeholder = \"Select\",\r\n            disabled = false,\r\n            arrow = false,\r\n            isReadOnly = false,\r\n            label = \"\",\r\n            isMulti = false,\r\n            isClearable = false,\r\n            isSearchable = false,\r\n            isBoldLabel = false,\r\n            showArrow = true,\r\n        } = this.props;\r\n\r\n        const DropdownIndicator = (props) => {\r\n            return (\r\n                components.DropdownIndicator && (\r\n                    <components.DropdownIndicator {...props}>\r\n                        <img src={logo} alt=\"dropdown\" />\r\n                    </components.DropdownIndicator>\r\n                )\r\n            );\r\n        };\r\n        const customStyles = {\r\n            placeholder: (base) => ({\r\n                ...base,\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            indicatorSeparator: (base) => ({\r\n                ...base,\r\n                display: \"none\",\r\n            }),\r\n            valueContainer: (base) => ({\r\n                ...base,\r\n                padding: \"0px 20px\",\r\n                fontSize: 18,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n                lineHeight: 38,\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            singleValue: (base) => ({\r\n                ...base,\r\n                color: \"#000\",\r\n                fontWeight: 500,\r\n            }),\r\n            dropdownIndicator: (base) => ({\r\n                ...base,\r\n                padding: 0,\r\n                height: \"26px\",\r\n                width: \"26px\",\r\n                color: \"black\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            option: (base, { isFocused }) => ({\r\n                ...base,\r\n                backgroundColor: isFocused ? \"#53BFD2\" : \"#fff\",\r\n                color: isFocused ? \"#fff\" : \"#000\",\r\n                fontSize: 18,\r\n                textAlign: \"left\",\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n            control: (base) => ({\r\n                ...base,\r\n                borderRadius: 50,\r\n                border: \"2px solid #bcbcbc\",\r\n                boxShadow: \"0 0 !important\",\r\n                outline: \"0 \",\r\n                background: \"white\",\r\n                height: 45,\r\n                minHeight: 45,\r\n                fontFamily: \"Montserrat\",\r\n            }),\r\n        };\r\n        return (\r\n            <>\r\n                {!isReadOnly ? (\r\n                    <div\r\n                        className={`${\r\n                            arrow ? \"select-section w-100\" : \"Select\"\r\n                        } ${isBoldLabel ? \"mt-0\" : \"\"}`}\r\n                    >\r\n                        {label !== \"\" ? (\r\n                            <div>\r\n                                <label\r\n                                    className={\r\n                                        isBoldLabel\r\n                                            ? \"mb-1 text-black-22\"\r\n                                            : \"font-weight-normal mb-1\"\r\n                                    }\r\n                                >\r\n                                    {label}\r\n                                </label>\r\n                            </div>\r\n                        ) : null}\r\n                        <Select\r\n                            className={className}\r\n                            classNamePrefix=\"Select\"\r\n                            isDisabled={disabled}\r\n                            isClearable={isClearable}\r\n                            isSearchable={isSearchable}\r\n                            name={name}\r\n                            options={options}\r\n                            onChange={this.handleChange}\r\n                            isMulti={isMulti}\r\n                            showArrow={showArrow}\r\n                            placeholder={placeholder}\r\n                            styles={customStyles}\r\n                            value={\r\n                                !!options && options.length > 0\r\n                                    ? options.find(\r\n                                          (data) => data.value === value\r\n                                      )\r\n                                        ? options.find(\r\n                                              (data) => data.value === value\r\n                                          )\r\n                                        : null\r\n                                    : null\r\n                            }\r\n                            components={{ DropdownIndicator }}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <p>{value}</p>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}