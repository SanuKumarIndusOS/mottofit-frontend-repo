{"version":3,"sources":["component/UserDashBoard/UserDashboardCompontents/UserSession/index.js","assets/files/TrainerDashboard/Message/Jenny.png","assets/files/TrainerDashboard/Message/Availability Icon.svg","assets/files/TrainerDashboard/Message/Location Icon.svg"],"names":["TabOne","tabname","tabData","prevData","cancelSessionApi","handleChange","useState","visible","setVisible","isLoading","setisLoading","className","style","textTransform","slice","map","data","index","console","log","Fragment","sessionDate","substr","datamonth","activity","trainerDetail","firstName","src","AvailabilityIcon","alt","moment","sessionStartTime","format","LocationIcon","Data","loc","sessionStatus","disabled","onClick","sessionId","payload","then","catch","handleCancel","id","history","push","pathname","ArrowNext","prevValue","to","Jenny","date","month","heading","imgAva","avaTime","imgLoc","previousImg","prevHeading","prevDate","10","11","12","UserSession","connect","dispatch","bindActionCreators","userSession","cancelSession","props","React","upcomingSessions","pastSessions","onGoingSessions","userData","setUserData","useEffect","_userSession","error","defaultTab","tabFor","tabId"],"mappings":"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","file":"static/js/70.40c5ff65.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Tabs, Tab, TabPanel, TabList } from \"react-web-tabs\";\r\nimport \"react-web-tabs/dist/react-web-tabs.css\";\r\nimport AvailabilityIcon from \"../../../../assets/files/TrainerDashboard/Message/Availability Icon.svg\";\r\nimport LocationIcon from \"../../../../assets/files/TrainerDashboard/Message/Location Icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlueArrowButton from \"../../../common/BlueArrowButton\";\r\nimport Jenny from \"../../../../assets/files/TrainerDashboard/Message/Jenny.png\";\r\nimport ArrowNext from \"../../../../assets/files/SVG/Arrow Next.svg\";\r\nimport BlueHoverButton from \"../../../common/BlueArrowButton\";\r\nimport { history } from \"helpers\";\r\nimport { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { userSession, cancelSession } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nconst UserSessionClass = (props) => {\r\n  const [userData, setUserData] = React.useState({\r\n    upcomingSessions: [],\r\n    pastSessions: [],\r\n    onGoingSessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    _userSession();\r\n  }, []);\r\n  const _userSession = () => {\r\n    props\r\n      .userSession()\r\n      .then((data) => {\r\n        setUserData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"outter_user_container\">\r\n      <div className=\"container\">\r\n        <div className=\"inner_user_container \">\r\n          <div className=\"userSession_heading\">\r\n            <h2>My Session</h2>\r\n          </div>\r\n          <div className=\"US_tabs_wrapper\">\r\n            <Tabs defaultTab=\"overview\">\r\n              <TabList>\r\n                <Tab tabFor=\"overview\">Overview</Tab>\r\n                <Tab tabFor=\"upcoming\">Upcoming</Tab>\r\n                <Tab tabFor=\"pass\">Motto pass</Tab>\r\n                <Tab tabFor=\"previous\">Previous</Tab>\r\n              </TabList>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"overview\">\r\n                  <TabOne\r\n                    tabname={\"Overview\"}\r\n                    tabData={userData.upcomingSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"upcoming\">\r\n                  <TabOne\r\n                    tabname={\"Upcoming\"}\r\n                    tabData={userData.upcomingSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"pass\">\r\n                  <TabOne\r\n                    tabname={\"Moto Pass\"}\r\n                    tabData={userData.pastSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n              <div className=\"tabPanel_outter\">\r\n                <TabPanel tabId=\"previous\">\r\n                  <TabOne\r\n                    tabname={\"Previous\"}\r\n                    tabData={userData.pastSessions}\r\n                    prevData={userData.pastSessions}\r\n                    cancelSessionApi={props.cancelSession}\r\n                    handleChange={() => _userSession()}\r\n                  />\r\n                </TabPanel>\r\n              </div>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabOne = ({\r\n  tabname,\r\n  tabData,\r\n  prevData,\r\n  cancelSessionApi,\r\n  handleChange = {},\r\n}) => {\r\n  const [visible, setVisible] = useState([3]);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const setViewMore = () => {\r\n    setVisible((prevValue) => prevValue + 1);\r\n  };\r\n\r\n  const handleCancel = (sessionId) => {\r\n    let payload = {\r\n      sessionId,\r\n      sessionStatus: \"cancelled\",\r\n    };\r\n    setisLoading(true);\r\n    cancelSessionApi(payload)\r\n      .then(() => {\r\n        setisLoading(false);\r\n        handleChange();\r\n      })\r\n      .catch(() => setisLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabPanel_overview\">\r\n      <div className=\"tabPanel_overview_left\">\r\n        <div className=\"TP_overview_wrapper\">\r\n          <h3 style={{ textTransform: \"capitalize\" }}>{tabname} Sessions</h3>\r\n          <div className=\"TP_US_overview\">\r\n            <div className=\"TP_US_overview_inner\">\r\n              {tabData.slice(0, visible).map((data, index) => {\r\n                console.log(data, \"datadata\");\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <div className=\"TP_upcomeSession_overview\">\r\n                      <div className=\"TP_USession_dates\">\r\n                        <h4>\r\n                          {data.sessionDate.substr(8, 2)}\r\n                          <span>\r\n                            {datamonth[data.sessionDate.substr(5, 2)]}\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                      <div className=\"TP_USession_data\">\r\n                        <h2\r\n                          style={{\r\n                            textTransform: \"capitalize\",\r\n                          }}\r\n                        >\r\n                          {data.activity}&nbsp;\r\n                          <span\r\n                            style={{\r\n                              textTransform: \"lowerCase\",\r\n                            }}\r\n                          >\r\n                            with\r\n                          </span>{\" \"}\r\n                          &nbsp;\r\n                          <h2\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            {data.trainerDetail.firstName}\r\n                          </h2>\r\n                        </h2>\r\n                        <div className=\"TP_USession_data_icons\">\r\n                          <h5>\r\n                            <img src={AvailabilityIcon} alt=\"icon\" />\r\n                            {moment(data.sessionStartTime).format(\"MMM\")}\r\n                          </h5>\r\n                          <h5>\r\n                            <img src={LocationIcon} alt=\"icon\" />\r\n                            {Data[0].loc}\r\n                          </h5>\r\n                        </div>\r\n                        <div className=\"TP_USession_data_buttons\">\r\n                          <button>Reschedule</button>\r\n                          {data.sessionStatus !== \"cancelled\" ? (\r\n                            <button\r\n                              disabled={isLoading}\r\n                              onClick={() => handleCancel(data.id)}\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                          ) : (\r\n                            <button className=\"text-danger\" disabled={true}>\r\n                              Cancelled\r\n                            </button>\r\n                          )}\r\n\r\n                          <div className=\"button_boarder\">\r\n                            <button\r\n                              onClick={() =>\r\n                                history.push({\r\n                                  pathname: \"/user/with-friends\",\r\n                                })\r\n                              }\r\n                            >\r\n                              Add Friends{\" \"}\r\n                            </button>\r\n                            <img src={ArrowNext} alt=\"icon\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </div>\r\n            <button onClick={setViewMore} className=\"viewMoreButton\">\r\n              View all Session <BlueHoverButton />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"tabPanel_overview_right\">\r\n        <div className=\"TB_overview_right\">\r\n          <div className=\"TB_overview_row_one\">\r\n            <div className=\"row_one_data\">\r\n              <h2>Want to Do More for Less?</h2>\r\n              <p>\r\n                Save money by purchasing multiple sessions at once, eligible for\r\n                use within 60 days of the purchase date.\r\n              </p>\r\n              <Link to=\"/\">\r\n                Get A pass <BlueArrowButton />{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"TB_overview_row_two\">\r\n            <div className=\"row_two_data\">\r\n              <h2>PREVIOUS SESSIONS</h2>\r\n              <div className=\"row_two_scroll\">\r\n                {prevData.map((data, index) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"row_previous_data\" key={index}>\r\n                        <div className=\"row_previous_avater\">\r\n                          <img src={Jenny} alt=\"profile\" />\r\n                        </div>\r\n                        <div className=\"row_previous_header\">\r\n                          <h2\r\n                            className=\"d-flex flex-wrap\"\r\n                            style={{\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            {data.activity}&nbsp;\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"lowerCase\",\r\n                              }}\r\n                            >\r\n                              with\r\n                            </span>{\" \"}\r\n                            &nbsp;\r\n                            <h2\r\n                              className=\"d-flex flex-wrap\"\r\n                              style={{\r\n                                textTransform: \"capitalize\",\r\n                              }}\r\n                            >\r\n                              {data.trainerDetail.firstName}\r\n                            </h2>\r\n                          </h2>\r\n                          {/* <h2>{`${data.activity} with ${data.trainerDetail[\"firstName\"]}`}</h2> */}\r\n                          <p>{`${data.sessionDate.substr(8, 2)} ${\r\n                            datamonth[data.sessionDate.substr(5, 2)]\r\n                          } ${data.sessionDate.substr(0, 4)}`}</p>\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Data = [\r\n  {\r\n    date: \"14\",\r\n    month: \"Feb\",\r\n    heading: \"Strength & HIIT with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Kane\",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"25\",\r\n    month: \"May\",\r\n    heading: \"Yoga with Kane\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with John Doe\",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"20\",\r\n    month: \"Apr\",\r\n    heading: \"Boxing with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Kane \",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"20\",\r\n    month: \"Apr\",\r\n    heading: \"Boxing with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Ananaya \",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n  {\r\n    date: \"20\",\r\n    month: \"Apr\",\r\n    heading: \"Boxing with John Doe\",\r\n    imgAva: AvailabilityIcon,\r\n    avaTime: \"  5:00 PM PST\",\r\n    imgLoc: LocationIcon,\r\n    loc: \"Trainer GYM\",\r\n    previousImg: Jenny,\r\n    prevHeading: \"Yoga with Kane \",\r\n    prevDate: \"02 May 2021\",\r\n  },\r\n];\r\n\r\nconst datamonth = {\r\n  \"01\": \"Jan\",\r\n  \"02\": \"Feb\",\r\n  \"03\": \"Mar\",\r\n  \"04\": \"Apr\",\r\n  \"05\": \"May\",\r\n  \"06\": \"Jun\",\r\n  \"07\": \"Jul\",\r\n  \"08\": \"Aug\",\r\n  \"09\": \"Sep\",\r\n  10: \"Oct\",\r\n  11: \"Nov\",\r\n  12: \"Dec\",\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      userSession,\r\n      cancelSession,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst UserSession = connect(null, mapDispatchToProps)(UserSessionClass);\r\n\r\nexport default UserSession;\r\n","export default __webpack_public_path__ + \"static/media/Jenny.c50273b9.png\";","export default __webpack_public_path__ + \"static/media/Availability Icon.ad0517cb.svg\";","export default __webpack_public_path__ + \"static/media/Location Icon.cbb0b32d.svg\";"],"sourceRoot":""}