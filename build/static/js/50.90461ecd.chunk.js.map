{"version":3,"sources":["component/SignUp/Banner/index.js","component/common/ButtonIcon/ArrowHover.jsx","component/SignUp/Banner/useForm.js","component/SignUp/Banner/validation.js","assets/files/SignUp/Phone Icon.svg"],"names":["SignUp","connect","dispatch","bindActionCreators","loginOrSignupAct","loginOrSignUp","submitForm","useForm","validateInfo","data","handleFormSubmit","error","setData","useState","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","apiError","setApiError","onChangeValue","e","persist","target","name","value","history","useHistory","a","payload","firstName","lastName","email","phoneNo","password","cpassword","location","signUpType","userSignUp","AuthApi","Object","keys","length","then","push","catch","message","className","onSubmit","placeholder","type","onChange","src","Person","alt","Mail","Phone","Password","onClick","Facebook","Google","signUp","to","ArrowHover","focusable","imageRendering","baseProfile","version","preserveAspectRatio","viewBox","x","y","width","height","transform","stroke","d","validate","callback","setError","preventDefault","errorData","console","log","validation","values","errors","test"],"mappings":"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","file":"static/js/50.90461ecd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Person from \"../../../assets/files/SignUp/Person Icon.svg\";\r\nimport Mail from \"../../../assets/files/SignUp/Email Icon.svg\";\r\nimport Phone from \"../../../assets/files/SignUp/Phone Icon.svg\";\r\nimport Password from \"../../../assets/files/SignUp/Password Icon.svg\";\r\nimport Facebook from \"../../../assets/files/SignUp/Fb Logo.svg\";\r\nimport Google from \"../../../assets/files/SignUp/Google Logo.svg\";\r\nimport \"./styles.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ArrowHover from \"../../common/ButtonIcon/ArrowHover\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\n// import { api } from \"service/api\";\r\nimport { AuthApi } from \"service/apiVariables\";\r\nimport { loginOrSignUp } from \"action/authAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport useForm from \"./useForm\";\r\nimport validateInfo from \"./validation\";\r\n\r\nconst SignUpFC = ({ loginOrSignupAct, submitForm }) => {\r\n    const { data, handleFormSubmit, error, setData } = useForm(\r\n        validateInfo,\r\n        submitForm\r\n    );\r\n\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n    const [apiError, setApiError] = useState(\"\");\r\n    const onChangeValue = (e) => {\r\n        e.persist();\r\n        setData({ ...data, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    async function signUp() {\r\n        const payload = {\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            email: data.email,\r\n            phoneNo: data.phoneNo,\r\n            password: data.password,\r\n            cpassword: data.cpassword,\r\n            location: data.location,\r\n            signUpType: data.signUpType,\r\n        };\r\n\r\n        const { userSignUp } = AuthApi;\r\n\r\n        if (Object.keys(error).length === 0) {\r\n            loginOrSignupAct(userSignUp, payload)\r\n                .then(() => {\r\n                    history.push(\"/trainer/find\");\r\n                })\r\n                .catch((error) => {\r\n                    setApiError(\"Sorry, something went wrong.\", error.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    const showPassword = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n    const showConfirmPassword = () => {\r\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_container\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"inner_wrapper\">\r\n                        <div className=\"inner_items\">\r\n                            <h2>Sign Up with Motto!</h2>\r\n                            <p>\r\n                                Fill up the following details to create your\r\n                                account\r\n                            </p>\r\n                            <div className=\"form_items\">\r\n                                <form onSubmit={handleFormSubmit}>\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"Name\"\r\n                                            type=\"text\"\r\n                                            value={data.firstName}\r\n                                            name=\"firstName\"\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img src={Person} alt=\"icon\" />\r\n\r\n                                        {error.firstName && (\r\n                                            <span>{error.firstName}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"LastName\"\r\n                                            type=\"text\"\r\n                                            value={data.lastName}\r\n                                            name=\"lastName\"\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img src={Person} alt=\"icon\" />\r\n                                        {error.lastName && (\r\n                                            <span>{error.lastName}</span>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"Location\"\r\n                                            type=\"text\"\r\n                                            value={data.location}\r\n                                            name=\"location\"\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img src={Person} alt=\"icon\" />\r\n                                        {error.location && (\r\n                                            <span>{error.location}</span>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"Email\"\r\n                                            type=\"email\"\r\n                                            value={data.email}\r\n                                            name=\"email\"\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img src={Mail} alt=\"icon\" />\r\n\r\n                                        {error.email && (\r\n                                            <span>{error.email}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"Phone\"\r\n                                            type=\"text\"\r\n                                            value={data.phoneNo}\r\n                                            name=\"phoneNo\"\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img src={Phone} alt=\"icon\" />\r\n                                        {error.phoneNo && (\r\n                                            <span>{error.phoneNo}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"Create Password\"\r\n                                            type={\r\n                                                passwordShown\r\n                                                    ? \"text\"\r\n                                                    : \"password\"\r\n                                            }\r\n                                            value={data.password}\r\n                                            name=\"password\"\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img\r\n                                            src={Password}\r\n                                            alt=\"icon\"\r\n                                            onClick={showPassword}\r\n                                        />\r\n                                        {error.password && (\r\n                                            <span>{error.password}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"input_items\">\r\n                                        <input\r\n                                            placeholder=\"Confirm Password\"\r\n                                            type={\r\n                                                confirmPasswordShown\r\n                                                    ? \"text\"\r\n                                                    : \"password\"\r\n                                            }\r\n                                            name=\"cpassword\"\r\n                                            value={data.cpassword}\r\n                                            onChange={onChangeValue}\r\n                                        />\r\n                                        <img\r\n                                            src={Password}\r\n                                            alt=\"icon\"\r\n                                            onClick={showConfirmPassword}\r\n                                        />\r\n\r\n                                        {error.cpassword && (\r\n                                            <span>{error.cpassword}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    {apiError && (\r\n                                        <span className=\"errorMessage\">\r\n                                            {apiError}\r\n                                        </span>\r\n                                    )}\r\n\r\n                                    <div className=\"or_items\">\r\n                                        <div className=\"hr_line\"></div>\r\n                                        <div>\r\n                                            <p>or</p>\r\n                                        </div>\r\n                                        <div className=\"hr_line\"></div>\r\n                                    </div>\r\n                                    <div className=\"social_buttons\">\r\n                                        <button className=\"facebook-auth\">\r\n                                            <img src={Facebook} alt=\"icon\" />\r\n                                            Sign Up with Facebook\r\n                                        </button>\r\n\r\n                                        <button className=\"google-auth\">\r\n                                            <img src={Google} alt=\"icon\" />\r\n                                            Sign up with Google\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"submit_button\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            onClick={signUp()}\r\n                                        >\r\n                                            Continue to Account{\" \"}\r\n                                            <ArrowHoverBlacked />\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"login_content_signup\">\r\n                                <h1>Already have an account?</h1>\r\n\r\n                                <Link to=\"/\">\r\n                                    Sign In now\r\n                                    <ArrowHover />\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            loginOrSignupAct: loginOrSignUp,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst SignUp = connect(null, mapDispatchToProps)(SignUpFC);\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nfunction ArrowHover() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <span className='arrow-hover'>\r\n                    <svg\r\n                        className=\"arrow-icon\"\r\n                        focusable=\"false\"\r\n                        imageRendering=\"auto\"\r\n                        baseProfile=\"basic\"\r\n                        version=\"1.1\"\r\n                        preserveAspectRatio=\"xMidYMid meet\"\r\n                        viewBox=\"0 0 62 35\"\r\n                    >\r\n                        <title>Arrow Icon</title>\r\n                        <rect x=\"0\" y=\"14.7\" width=\"55.2\" height=\"4.55\"></rect>\r\n                        <g transform=\"translate(40.9 0)\">\r\n                            <path\r\n                                stroke=\"none\"\r\n                                d=\"M.35 3L14.3 17.2 0 31.25 3.35 34.25 20.85 17.15 3.5 0 .35 3Z\"\r\n                            ></path>\r\n                        </g>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArrowHover;\r\n","import { useState, useEffect} from 'react';\r\n\r\nconst useForm = (validate, callback) => {\r\n\r\n    const [data, setData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phoneNo: \"\",\r\n        password: \"\",\r\n        cpassword: \"\",\r\n        location: \"\",\r\n        signUpType: \"email\",\r\n    });\r\n\r\n\r\n    const [error, setError] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phoneNo: \"\",\r\n        password: \"\",\r\n        cpassword: \"\",\r\n        location: \"\",\r\n        signUpType: \"email\",\r\n    })\r\n    const [isSubmit, setSubmit] = useState(false)\r\n\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n         const errorData = validate(data);\r\n         setError(errorData)\r\n        // setSubmit(true)\r\n        console.log(data);\r\n        console.log(errorData);\r\n        console.log(error);\r\n        console.log(setError);     \r\n    }\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if(Object.keys(error).length === 0 && \r\n    //     isSubmit) {\r\n    //         callback();\r\n    //     }\r\n    // }, [error])}\r\n    return {data, handleFormSubmit, error,setData }\r\n}\r\nexport default useForm;\r\n\r\n","const validation = ( values) => {\r\n    let errors = {} ;\r\n\r\n    // firstName: \"\",\r\n    // lastName: \"\",\r\n    // email: \"\",\r\n    // phoneNo: \"\",\r\n    // password: \"\",\r\n    // cpassword: \"\",\r\n    // location: \"\",\r\n\r\n    if(!values.firstName){\r\n        errors.firstName='This field is required'\r\n    }else if(values.firstName.length <= 1){\r\n        errors.firstName='This field should contain more than one character'\r\n     } else if(!/^[A-Za-z]+$/i.test(values.firstName)){\r\n         errors.firstName=\"  This field accepts only alphabets\"\r\n     }\r\n\r\n     if(!values.lastName){\r\n        errors.lastName='This field is required'\r\n    }else if(values.lastName.length <= 1){\r\n        errors.lastName='This field should contain more than one character'\r\n     } else if(!/^[A-Za-z]+$/i.test(values.lastName)){\r\n         errors.lastName=\"This field accepts only alphabets\"\r\n     }\r\n\r\n     if(!values.location){\r\n        errors.location='This field is required'\r\n    }else if(values.location.length <= 1){\r\n        errors.location='This field should contain more than one character'\r\n     } else if(!/^[A-Za-z]+$/i.test(values.location)){\r\n         errors.location=\"This field accepts only alphabets\"\r\n     }\r\n  \r\n\r\n    if(!values.email){\r\n        errors.email = 'This field is required'\r\n    }else if(!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(values.email)){\r\n        errors.email = ' Please enter a valid email address'\r\n    }else if(values.email.length < 8) {\r\n        errors.email = \" This field should contain greater then 8 character\"\r\n    }\r\n\r\n    if(!values.phoneNo){\r\n        errors.phoneNo = 'This field is required'\r\n    }    else if(!/^[0-9]*$/i.test(values.phoneNo)){\r\n            errors.phoneNo = 'Invalid Number'\r\n    }\r\n    else if(values.phoneNo.length < 10){\r\n        errors.phoneNo = 'Enter a valid number'\r\n    } else if (values.phoneNo.length  >= 11) {\r\n        errors.phoneNo = \" This field exceed max length\"\r\n    }\r\n  \r\n    if(!values.password){\r\n        errors.password='This field is required'\r\n    }else if(values.password.length < 6){\r\n        errors.password=' Password should be more then 6 Charcters'\r\n    } else if (values.password.length > 16){\r\n        errors.password = \" This field exceed max length\"\r\n    } else if (!/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(values.password)){\r\n        errors.password=\" Password should contain atleast one one captial letter, number and special character\"\r\n    }\r\n    \r\n    if(!values.cpassword){\r\n        errors.cpassword='This field is required'\r\n    }else if(values.cpassword.length < 6){\r\n        errors.cpassword=' Password should be more then 6 Charcters'\r\n    } else if (values.cpassword.length > 16){\r\n        errors.cpassword = \" This field exceed max length\"\r\n    } else if (!/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/.test(values.cpassword)){\r\n        errors.cpassword=\" Password should contain atleast one one captial letter, number and special character\"\r\n    } else if ( values.password !== values.cpassword){\r\n        errors.cpassword=\"  The passwords do not match\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default validation;\r\n","export default __webpack_public_path__ + \"static/media/Phone Icon.f207d1b4.svg\";"],"sourceRoot":""}