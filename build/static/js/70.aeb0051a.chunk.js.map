{"version":3,"sources":["component/FindYourTrainer/TrainersDetails/index.js","helpers/baseURL.js","assets/files/SignUp/ArrowSecondary.svg"],"names":["HeadingTrainer","className","TrainerCards","props","useState","bestMatchData","setbestMatchData","useEffect","content","visible","setVisible","no_match","length","style","alignleft","Object","keys","map","data","index","imgdb","COMMON_URL","src","objectFit","alt","onError","e","target","onerror","textTransform","onClick","history","push","pathname","state","trainerId","trainerData","backgroundColor","showCard","Arrow","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL"],"mappings":"yLA+HMA,EAAiB,WACrB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oDACA,sLAWKC,UA1IM,SAACC,GACpB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACRD,EAAiBH,EAAMK,YAEzB,MAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAKIC,EAAW,wBAKf,OAJ6B,IAAzBN,EAAcO,SAChBD,EAAW,oBAAIV,UAAU,WAAd,+BAIX,mCACE,sBAAKA,UAAU,YAAf,UACE,cAACD,EAAD,IACCW,EACD,qBAAKV,UAAU,MAAMY,MAAO,CAAEC,UAAW,QAAzC,SACGC,OAAOC,KAAKX,GAAeY,KAAI,SAACC,EAAMC,GACrC,IAAIC,EAAK,UAAMC,cAAN,OAAmBhB,EAAca,GAAd,gBAE5B,OACE,sBAAKjB,UAAU,OAAf,UACE,qBACEA,UAAU,eACVqB,IAAKF,EACLP,MAAO,CAAEU,UAAW,SACpBC,IAAI,6BACJC,QAAS,SAACC,GACRA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOL,IACP,6EAIN,sBAAKrB,UAAU,YAAf,UACE,qBAAIY,MAAO,CAAEgB,cAAe,cAA5B,UACGxB,EAAca,GAAd,UADH,OAEGb,EAAca,GAAd,YAEH,+BACGb,EAAca,GAAd,gBAAuC,GACvCb,EAAca,GAAd,gBAAuC,GAAK,IAAM,GAFrD,OAIGb,EAAca,GAAd,gBAAuC,GACvCb,EAAca,GAAd,gBAAuC,GAAK,IAAM,GALrD,OAOGb,EAAca,GAAd,gBAAuC,GAP1C,OASGb,EAAca,GAAd,gBAAuC,MAE1C,8BACGb,EAAca,GAAd,YADH,OAGE,wBACEY,QAAS,WACPC,UAAQC,KAAK,CACXC,SAAS,oBAAD,OAAsB5B,EAAca,GAAd,IAC9BgB,MAAO,CACLC,UAAW9B,EAAca,GAAd,GACXkB,YAAa/B,EAAca,OANnC,6BAeJ,qBAAKjB,UAAU,cAAf,SACE,yBACEY,MAAO,CACLwB,gBAAiB,WAEnBP,QAAS,WAEPC,UAAQC,KAAK,CACXC,SAAU,kBACVC,MAAO,CACLC,UAAW9B,EAAca,GAAd,GACXkB,YAAa/B,EAAca,OAVnC,2BAmBE,cAAC,UAAD,IACA,qCACO,IACL,+BAEIb,EAAca,GAAd,qDAxEeC,QAoFjC,qBAAKlB,UAAU,WAAf,SACE,yBAAQA,UAAU,eAAe6B,QAxGnB,WACpBpB,GAAW,SAAC4B,GAAD,OAAcA,EAAW,MAuG9B,UACG7B,EAAU,sBAAwB,KACnC,qBAAKa,IAAKiB,UAAOf,IAAI,qB,iCCvHjC,yOAAO,IAAIH,EAAa,iCACbmB,EAAgB,iCAChBC,EAAc,iCACdC,EAAmB,GACnBC,EAAc,kC,iCCJzB,OAAe,cAA0B,4C","file":"static/js/70.aeb0051a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./trainer.sass\";\nimport Arrow from \"../../../assets/files/SignUp/ArrowSecondary.svg\";\nimport { history } from \"helpers\";\nimport BlackCircleButton from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\nimport { COMMON_URL } from \"helpers/baseURL\";\nconst TrainerCards = (props) => {\n  const [bestMatchData, setbestMatchData] = useState([]);\n\n  useEffect(() => {\n    setbestMatchData(props.content);\n  });\n  const [visible, setVisible] = useState(3);\n  const showMoreItems = () => {\n    setVisible((showCard) => showCard + 3);\n  };\n\n  let no_match = <div></div>;\n  if (bestMatchData.length === 0) {\n    no_match = <h1 className=\"no_match\">No Matches found</h1>;\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <HeadingTrainer />\n        {no_match}\n        <div className=\"row\" style={{ alignleft: \"auto\" }}>\n          {Object.keys(bestMatchData).map((data, index) => {\n            let imgdb = `${COMMON_URL}${bestMatchData[data][\"profilePicture\"]}`;\n\n            return (\n              <div className=\"card\" key={index}>\n                <img\n                  className=\"card-img-top\"\n                  src={imgdb}\n                  style={{ objectFit: \"cover\" }}\n                  alt=\"Profile Picture Not Found \"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src =\n                      \"https://qphs.fs.quoracdn.net/main-qimg-2b21b9dd05c757fe30231fac65b504dd\";\n                  }}\n                />\n\n                <div className=\"card-body\">\n                  <h3 style={{ textTransform: \"capitalize\" }}>\n                    {bestMatchData[data][\"firstName\"]}&nbsp;\n                    {bestMatchData[data][\"lastName\"]}\n                  </h3>\n                  <h6>\n                    {bestMatchData[data][\"areaOfExpertise\"][0]}\n                    {bestMatchData[data][\"areaOfExpertise\"][1] ? \",\" : \"\"}\n                    &nbsp;\n                    {bestMatchData[data][\"areaOfExpertise\"][1]}\n                    {bestMatchData[data][\"areaOfExpertise\"][2] ? \",\" : \"\"}\n                    &nbsp;\n                    {bestMatchData[data][\"areaOfExpertise\"][2]}\n                    &nbsp;\n                    {bestMatchData[data][\"areaOfExpertise\"][3]}\n                  </h6>\n                  <p>\n                    {bestMatchData[data][\"description\"]}\n                    &nbsp;\n                    <button\n                      onClick={() => {\n                        history.push({\n                          pathname: `/trainer/profile/${bestMatchData[data][\"id\"]}`,\n                          state: {\n                            trainerId: bestMatchData[data][\"id\"],\n                            trainerData: bestMatchData[data],\n                          },\n                        });\n                      }}\n                    >\n                      Read More\n                    </button>\n                  </p>\n                </div>\n                <div className=\"card-button\">\n                  <button\n                    style={{\n                      backgroundColor: \"#53BFD2\",\n                    }}\n                    onClick={() => {\n                      // if (localStorage.getItem(\"token\")) {\n                      history.push({\n                        pathname: \"/user/scheduler\",\n                        state: {\n                          trainerId: bestMatchData[data][\"id\"],\n                          trainerData: bestMatchData[data],\n                        },\n                      });\n                      // } else {\n                      //     alert(\"Please Login\");\n                      // }\n                    }}\n                  >\n                    book a session\n                    <BlackCircleButton />\n                    <p>\n                      from{\" \"}\n                      <span>\n                        {\n                          bestMatchData[data][\"oneOnOnePricing\"][\n                            \"inPersonAtClientLocation\"\n                          ]\n                        }\n                      </span>\n                    </p>\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"showmore\">\n          <button className=\"showmore_btn\" onClick={showMoreItems}>\n            {visible ? \"View More Trainers \" : null}\n            <img src={Arrow} alt=\"icon\" />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst HeadingTrainer = () => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"wrapper_heading\">\n          <h2>Your Motto Matches</h2>\n          <p>\n            These matches are the perfect fit based on your filters. The prices\n            shown are for 1:1 sessions. Click on the trainer profile for group\n            rates!\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TrainerCards;\n","export var COMMON_URL = \"http://doodlebluelive.com:2307\";\nexport var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\nexport var SESSION_URL = \"http://doodlebluelive.com:2337\";\nexport var NOTIFICATION_URL = \"\";\nexport var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\n","export default __webpack_public_path__ + \"static/media/ArrowSecondary.fccfebd3.svg\";"],"sourceRoot":""}