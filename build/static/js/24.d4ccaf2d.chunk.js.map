{"version":3,"sources":["component/TrainerDashBoard/DashboardCompontents/TrainerCard/index.js","helpers/baseURL.js","assets/files/SVG/Picture Icon.svg","assets/files/SVG/Profile Picture.svg","assets/files/SVG/dollar Icon.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/colors/cyan.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["CyanRadio","withStyles","root","color","cyan","checked","props","Accordion","title","children","useState","isOpenAccodion","setAccordion","selectedValue","setSelectedValue","className","onChange","event","target","value","onClick","TrainerCard","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","fileUpload","useHistory","React","checkedBoxing","setCheckedBoxing","checkedHIIT","setCheckedHIIT","checkedYoga","setCheckedYoga","checkedPilates","setCheckedPilates","areaOfExpertise","trainerbackgroundData","setTrainerbackgroundData","image","setImage","setPreviewTmage","firstName","lastName","description","individualCharge","ssTwoPeopleCharge","ssThreePeopleCharge","ssFourPeopleCharge","classFlatRate","threeSessionRate","tenSessionRate","amtPerPerson","individualChargeTl","ssTwoPeopleChargeTl","ssThreePeopleChargeTl","ssFourPeopleChargeTl","classFlatRateTl","threeSessionRateTl","tenSessionRateTl","individualChargeVt","ssTwoPeopleChargeVt","ssThreePeopleChargeVt","ssFourPeopleChargeVt","classFlatRateVt","threeSessionRateVt","tenSessionRateVt","trainerData","setTrainerData","fileInputRef","useRef","useEffect","reader","FileReader","onloadend","result","console","log","readAsDataURL","handleInputChange","name","tempData","then","find","el","profilePicture","socialSessionPricing","oneOnOnePricing","classSessionPricing","inPeronAtClientLocationfor2People","inPeronAtClientLocationfor3People","inPeronAtClientLocationfor4People","inPeronAtTrainerLocationfor2People","inPeronAtTrainerLocationfor3People","inPeronAtTrainerLocationfor4People","virtualSessionfor2People","virtualSessionfor3People","virtualSessionfor4People","passRatefor3Session","passRatefor10Session","inPersonAtClientLocation","inPersonAtTrainerLocation","virtualSession","passRatefor3SessionAtTrainerLocation","passRatefor10SessionAtTrainerLocation","passRatefor3SessionAtVirtual","passRatefor10SessionAtVirtual","inPersonAtclientLocationfor15People","inPersonAttrainerLocationfor15People","virtualSessionfor15People","storeData","src","style","objectFit","width","height","borderRadius","preventDefault","current","click","Profile","alt","ProfileAdd","type","ref","accept","file","files","substr","textTransform","e","index","indexOf","splice","placeholder","maxLength","DollarIcon","payload","updateTrainerAvailabilityApi","TrainerApi","body","api","message","alert","catch","err","undefined","fd","FormData","append","COMMON_URL","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","createSvgIcon","d","theme","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","classes","fontSize","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","nameProp","onChangeProp","_props$size","size","other","_objectWithoutProperties","radioGroup","_len","arguments","length","funcs","_key","reduce","acc","func","_len2","args","_key2","apply","this","createChainedFunction","SwitchBase","_extends","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","CheckBoxIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps"],"mappings":"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","file":"static/js/24.d4ccaf2d.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Profile from \"../../../../assets/files/SVG/Profile Picture.svg\";\nimport ProfileAdd from \"../../../../assets/files/SVG/Picture Icon.svg\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { cyan } from \"@material-ui/core/colors\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DollarIcon from \"../../../../assets/files/SVG/dollar Icon.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./accordion.scss\";\nimport \"./styles.scss\";\nimport ArrowHoverBlacked from \"../../../common/BlackCircleButton/ArrowHoverBlacked\";\nimport { bindActionCreators } from \"redux\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { connect } from \"react-redux\";\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\nimport { TrainerApi } from \"service/apiVariables\";\nimport { api } from \"service/api\";\nimport { fileUpload } from \"action/trainerAct\";\n// import { set } from \"date-fns\";\nimport { COMMON_URL } from \"helpers/baseURL\";\nimport axios from \"axios\";\n\nconst CyanRadio = withStyles({\n    root: {\n        \"&$checked\": {\n            color: cyan[600],\n        },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\nconst TrainerCardDashboard = ({\n    updateTrainerDetails,\n    trainerPersonalData,\n    getTrainerDetails,\n    fileUpload,\n}) => {\n    const history = useHistory();\n\n    const data = {\n        title: \"Time to build your Trainer Card!\",\n        describtion:\n            \" Heads up! Your trainer card is what clients will see when trainer results start filtering. Utilize keywords as anything you write here will also besearchable in our search box!\",\n        upload: \" Upload your profile picture, hotshot!\",\n        tellus: \" Tell us what you train! Select all the categories that apply\",\n        clientDesc:\n            \"Write a short and sweet description for clients to pick you in 100 characters\",\n        pricing: \"Tell us about your Pricing\",\n        pricingDesc:\n            \"Please fill only those fields relevant to the various kinds of training you offer. We recommend that the pricing of the social sessions (2-4 people) should provide savings to each client in comparison to a 1 on 1 individual session. The pricing for a 5-15 person group class is a flat rate that will be split evenly amongst each client.\",\n    };\n\n    const [checkedBoxing, setCheckedBoxing] = React.useState(false);\n    const [checkedHIIT, setCheckedHIIT] = React.useState(false);\n    const [checkedYoga, setCheckedYoga] = React.useState(false);\n    const [checkedPilates, setCheckedPilates] = React.useState(false);\n    const [trainerbackgroundData, setTrainerbackgroundData] = useState({\n        areaOfExpertise: [],\n    });\n\n    const [image, setImage] = useState();\n    const [selectedValue, setSelectedValue] = useState(\"\");\n    const [previewImage, setPreviewTmage] = useState();\n    const [trainerData, setTrainerData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        description: \"\",\n        individualCharge: \"\",\n        ssTwoPeopleCharge: \"\",\n        ssThreePeopleCharge: \"\",\n        ssFourPeopleCharge: \"\",\n        classFlatRate: \"\",\n        threeSessionRate: \"\",\n        tenSessionRate: \"\",\n        amtPerPerson: \"\",\n        individualChargeTl: \"\",\n        ssTwoPeopleChargeTl: \"\",\n        ssThreePeopleChargeTl: \"\",\n        ssFourPeopleChargeTl: \"\",\n        classFlatRateTl: \"\",\n        threeSessionRateTl: \"\",\n        tenSessionRateTl: \"\",\n        individualChargeVt: \"\",\n        ssTwoPeopleChargeVt: \"\",\n        ssThreePeopleChargeVt: \"\",\n        ssFourPeopleChargeVt: \"\",\n        classFlatRateVt: \"\",\n        threeSessionRateVt: \"\",\n        tenSessionRateVt: \"\",\n    });\n    const fileInputRef = useRef();\n\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setPreviewTmage(reader.result);\n                console.log(typeof image);\n            };\n            reader.readAsDataURL(image);\n        } else {\n            setPreviewTmage(null);\n        }\n    }, [image]);\n\n    const handleChangeToTrainerProfile = (e) => {\n        e.preventDefault();\n\n        const {\n            firstName,\n            lastName,\n            description,\n            profilePicture,\n            individualCharge,\n            ssTwoPeopleCharge,\n            ssThreePeopleCharge,\n            ssFourPeopleCharge,\n            classFlatRate,\n            threeSessionRate,\n            tenSessionRate,\n            individualChargeTl,\n            ssTwoPeopleChargeTl,\n            ssThreePeopleChargeTl,\n            ssFourPeopleChargeTl,\n            classFlatRateTl,\n            threeSessionRateTl,\n            tenSessionRateTl,\n            individualChargeVt,\n            ssTwoPeopleChargeVt,\n            ssThreePeopleChargeVt,\n            ssFourPeopleChargeVt,\n            classFlatRateVt,\n            threeSessionRateVt,\n            tenSessionRateVt,\n        } = trainerData;\n\n        let payload = {\n            firstName: firstName,\n            lastName: lastName,\n            description: description,\n            profilePicture: profilePicture,\n            individualCharge: individualCharge,\n            ssTwoPeopleCharge: ssTwoPeopleCharge,\n        };\n        console.log(payload, \"payload\");\n\n        const { updateTrainerAvailabilityApi } = TrainerApi;\n        updateTrainerAvailabilityApi.body = payload;\n        api({ ...updateTrainerAvailabilityApi })\n            .then(({ data, message }) => {\n                console.log(data, message, \"message\");\n\n                alert(\"Successfully updated the changes\");\n            })\n            .catch((err) => console.log(err));\n\n        // TrainerCard Profile Upload\n\n        if (image !== undefined) {\n            const fd = new FormData();\n\n            fd.append(\"profilePicture\", image, image.name);\n            fileUpload(fd);\n        }\n    };\n    useEffect(() => {\n        if (image) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setPreviewTmage(reader.result);\n            };\n            reader.readAsDataURL(image);\n        } else {\n            setPreviewTmage(null);\n        }\n    }, [image]);\n\n    const handleInputChange = ({ target: { name, value } }) => {\n        const tempData = {\n            ...trainerData,\n        };\n\n        tempData[name] = value;\n\n        setTrainerData(tempData);\n    };\n    useEffect(() => {\n        getTrainerDetails().then((data) => {\n            if (\n                data[\"areaOfExpertise\"].find((el) => el === \"Strength & HIIT\")\n            ) {\n                console.log(\"Strength & HIIT\");\n                setCheckedHIIT(true);\n            }\n\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Boxing\")) {\n                console.log(\"Boxing\");\n                setCheckedBoxing(true);\n            }\n\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Yoga\")) {\n                console.log(\"Yoga\");\n                setCheckedYoga(true);\n            }\n\n            if (data[\"areaOfExpertise\"].find((el) => el === \"Pilates\")) {\n                console.log(\"Pilates\");\n                setCheckedPilates(true);\n            }\n\n            const {\n                profilePicture,\n                firstName,\n                lastName,\n                description,\n                socialSessionPricing,\n                oneOnOnePricing,\n                classSessionPricing,\n            } = data || {};\n\n            if (data) {\n                // console.log(data);\n                const {\n                    inPeronAtClientLocationfor2People = \"\",\n                    inPeronAtClientLocationfor3People = \"\",\n                    inPeronAtClientLocationfor4People = \"\",\n                    inPeronAtTrainerLocationfor2People = \"\",\n                    inPeronAtTrainerLocationfor3People = \"\",\n                    inPeronAtTrainerLocationfor4People = \"\",\n                    virtualSessionfor2People = \"\",\n                    virtualSessionfor3People = \"\",\n                    virtualSessionfor4People = \"\",\n                } = socialSessionPricing || {};\n\n                const {\n                    passRatefor3Session = \"\",\n                    passRatefor10Session = \"\",\n                    inPersonAtClientLocation = \"\",\n                    inPersonAtTrainerLocation = \"\",\n                    virtualSession = \"\",\n                    passRatefor3SessionAtTrainerLocation = \"\",\n                    passRatefor10SessionAtTrainerLocation = \"\",\n                    passRatefor3SessionAtVirtual = \"\",\n                    passRatefor10SessionAtVirtual = \"\",\n                } = oneOnOnePricing || {};\n\n                const {\n                    inPersonAtclientLocationfor15People = \"\",\n                    inPersonAttrainerLocationfor15People = \"\",\n                    virtualSessionfor15People = \"\",\n                } = classSessionPricing || {};\n\n                const storeData = {\n                    details: {\n                        profilePicture: profilePicture,\n                        firstName,\n                        lastName,\n                        description,\n                        individualCharge: inPersonAtClientLocation,\n                        ssTwoPeopleCharge: inPeronAtClientLocationfor2People,\n                        ssThreePeopleCharge: inPeronAtClientLocationfor3People,\n                        ssFourPeopleCharge: inPeronAtClientLocationfor4People,\n                        classFlatRate: inPersonAtclientLocationfor15People,\n                        threeSessionRate: passRatefor3Session,\n                        tenSessionRate: passRatefor10Session,\n                        individualChargeTl: inPersonAtTrainerLocation,\n                        ssTwoPeopleChargeTl: inPeronAtTrainerLocationfor2People,\n                        ssThreePeopleChargeTl:\n                            inPeronAtTrainerLocationfor3People,\n                        ssFourPeopleChargeTl:\n                            inPeronAtTrainerLocationfor4People,\n                        classFlatRateTl: inPersonAttrainerLocationfor15People,\n                        threeSessionRateTl:\n                            passRatefor3SessionAtTrainerLocation,\n                        tenSessionRateTl: passRatefor10SessionAtTrainerLocation,\n                        individualChargeVt: virtualSession,\n                        ssTwoPeopleChargeVt: virtualSessionfor2People,\n                        ssThreePeopleChargeVt: virtualSessionfor3People,\n                        ssFourPeopleChargeVt: virtualSessionfor4People,\n                        classFlatRateVt: virtualSessionfor15People,\n                        threeSessionRateVt: passRatefor3SessionAtVirtual,\n                        tenSessionRateVt: passRatefor10SessionAtVirtual,\n                    },\n                };\n\n                setTrainerData(storeData.details);\n                updateTrainerDetails(storeData);\n            }\n        });\n    }, []);\n\n    return (\n        <>\n            <div className=\"outter_container_card\">\n                <div className=\"container\">\n                    <div className=\"card_outter\">\n                        {/* <div className=\"card_outter_wrapper\">\n                            <h2>{data.title}</h2>\n                            <p>{data.describtion}</p>\n                        </div> */}\n                        <div className=\"card_inner \">\n                            <div className=\"card_form_outter\">\n                                <form>\n                                    <div className=\"card_item1\">\n                                        {trainerData ? (\n                                            <img\n                                                src={\n                                                    trainerData &&\n                                                    trainerData.profilePicture\n                                                        ? trainerData.profilePicture\n                                                        : \"https://qphs.fs.quoracdn.net/main-qimg-2b21b9dd05c757fe30231fac65b504dd\"\n                                                }\n                                                style={{\n                                                    objectFit: \"cover\",\n                                                    width: \"200px\",\n                                                    height: \"200px\",\n                                                    borderRadius: \"100px\",\n                                                }}\n                                                onClick={() => {\n                                                    setPreviewTmage(null);\n                                                }}\n                                            />\n                                        ) : (\n                                            <div className=\"combin_profile\">\n                                                <button\n                                                    onClick={(event) => {\n                                                        event.preventDefault();\n                                                        fileInputRef.current.click();\n                                                    }}\n                                                >\n                                                    <img\n                                                        src={Profile}\n                                                        alt=\"icon\"\n                                                        style={{\n                                                            objectFit: \"cover\",\n                                                            width: \"100px\",\n                                                            height: \"100px\",\n                                                        }}\n                                                    />\n                                                </button>\n                                                <img\n                                                    src={ProfileAdd}\n                                                    alt=\"icon\"\n                                                    style={{\n                                                        objectFit: \"cover\",\n                                                        width: \"20px\",\n                                                        height: \"20px\",\n                                                        borderRadius: \"100px\",\n                                                    }}\n                                                    onClick={(event) => {\n                                                        event.preventDefault();\n                                                        fileInputRef.current.click();\n                                                    }}\n                                                />\n                                            </div>\n                                        )}\n\n                                        <input\n                                            type=\"file\"\n                                            ref={fileInputRef}\n                                            accept=\"image/*\"\n                                            onChange={(event) => {\n                                                const file =\n                                                    event.target.files[0];\n                                                if (\n                                                    file &&\n                                                    file.type.substr(0, 5) ===\n                                                        \"image\"\n                                                ) {\n                                                    setImage(file);\n                                                } else {\n                                                    setImage(null);\n                                                }\n                                            }}\n                                        />\n                                        <h5>{data.upload}</h5>\n                                    </div>\n                                    <div className=\"card_item2 \">\n                                        <div className=\"card_innerItem\">\n                                            <h6>First Name</h6>\n                                            <input\n                                                type=\"text\"\n                                                name=\"firstName\"\n                                                onChange={handleInputChange}\n                                                value={trainerData.firstName}\n                                                style={{\n                                                    textTransform: \"capitalize\",\n                                                }}\n                                            />\n                                        </div>\n                                        <div className=\"card_innerItem\">\n                                            <h6>Last Name</h6>\n                                            <input\n                                                name=\"lastName\"\n                                                style={{\n                                                    textTransform: \"capitalize\",\n                                                }}\n                                                onChange={handleInputChange}\n                                                value={trainerData.lastName}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"card_item3\">\n                                        <h6>{data.tellus}</h6>\n\n                                        <div className=\"inputs_experience\">\n                                            <Checkbox\n                                                checked={checkedHIIT}\n                                                onChange={(e) => {\n                                                    setCheckedHIIT(\n                                                        e.target.checked\n                                                    );\n                                                    console.log(\n                                                        e.target.checked\n                                                    );\n\n                                                    if (e.target.checked) {\n                                                        setTrainerbackgroundData(\n                                                            {\n                                                                ...trainerbackgroundData,\n                                                                areaOfExpertise:\n                                                                    [\n                                                                        ...trainerbackgroundData.areaOfExpertise,\n                                                                        \"Strength & HIIT\",\n                                                                    ],\n                                                            }\n                                                        );\n\n                                                        console.log(\n                                                            trainerbackgroundData.areaOfExpertise\n                                                        );\n                                                    } else {\n                                                        const index =\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\n                                                                \"Strength & HIIT\"\n                                                            );\n                                                        // console.log(index);\n                                                        if (index > -1) {\n                                                            trainerbackgroundData.areaOfExpertise.splice(\n                                                                index,\n                                                                1\n                                                            );\n                                                        }\n                                                        console.log(\n                                                            trainerbackgroundData.areaOfExpertise\n                                                        );\n                                                    }\n\n                                                    console.log(\n                                                        trainerbackgroundData\n                                                    );\n                                                }}\n                                                style={{\n                                                    color: \"#53BFD2\",\n                                                }}\n                                            />\n                                            <div className=\"checkbox_label\">\n                                                Strength & HIIT\n                                            </div>\n                                            <Checkbox\n                                                checked={checkedBoxing}\n                                                onChange={(e) => {\n                                                    setCheckedBoxing(\n                                                        e.target.checked\n                                                    );\n                                                    console.log(\n                                                        e.target.checked\n                                                    );\n\n                                                    if (e.target.checked) {\n                                                        console.log(\n                                                            \"setBoxing\"\n                                                        );\n                                                        setTrainerbackgroundData(\n                                                            {\n                                                                ...trainerbackgroundData,\n                                                                areaOfExpertise:\n                                                                    [\n                                                                        ...trainerbackgroundData.areaOfExpertise,\n                                                                        \"Boxing\",\n                                                                    ],\n                                                            }\n                                                        );\n\n                                                        console.log(\n                                                            trainerbackgroundData.areaOfExpertise\n                                                        );\n                                                    } else {\n                                                        console.log(\n                                                            \"unsetBoxing\"\n                                                        );\n\n                                                        const index =\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\n                                                                \"Boxing\"\n                                                            );\n                                                        // console.log(index);\n                                                        if (index > -1) {\n                                                            trainerbackgroundData.areaOfExpertise.splice(\n                                                                index,\n                                                                1\n                                                            );\n                                                        }\n                                                        console.log(\n                                                            trainerbackgroundData.areaOfExpertise\n                                                        );\n                                                    }\n\n                                                    console.log(\n                                                        trainerbackgroundData\n                                                    );\n                                                }}\n                                                style={{\n                                                    color: \"#53BFD2\",\n                                                }}\n                                            />\n                                            <div className=\"checkbox_label\">\n                                                Boxing\n                                            </div>\n                                            <Checkbox\n                                                checked={checkedYoga}\n                                                onChange={(e) => {\n                                                    setCheckedYoga(\n                                                        e.target.checked\n                                                    );\n\n                                                    if (e.target.checked) {\n                                                        setTrainerbackgroundData(\n                                                            {\n                                                                ...trainerbackgroundData,\n                                                                areaOfExpertise:\n                                                                    [\n                                                                        ...trainerbackgroundData.areaOfExpertise,\n                                                                        \"Yoga\",\n                                                                    ],\n                                                            }\n                                                        );\n                                                    } else {\n                                                        const index =\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\n                                                                \"Yoga\"\n                                                            );\n\n                                                        if (index > -1) {\n                                                            trainerbackgroundData.areaOfExpertise.splice(\n                                                                index,\n                                                                1\n                                                            );\n                                                        }\n                                                    }\n                                                }}\n                                                style={{\n                                                    color: \"#53BFD2\",\n                                                }}\n                                            />\n                                            <div className=\"checkbox_label\">\n                                                Yoga\n                                            </div>\n                                            <Checkbox\n                                                checked={checkedPilates}\n                                                onChange={(e) => {\n                                                    setCheckedPilates(\n                                                        e.target.checked\n                                                    );\n\n                                                    if (e.target.checked) {\n                                                        setTrainerbackgroundData(\n                                                            {\n                                                                ...trainerbackgroundData,\n                                                                areaOfExpertise:\n                                                                    [\n                                                                        ...trainerbackgroundData.areaOfExpertise,\n                                                                        \"Pilates\",\n                                                                    ],\n                                                            }\n                                                        );\n                                                    } else {\n                                                        const index =\n                                                            trainerbackgroundData.areaOfExpertise.indexOf(\n                                                                \"Pilates\"\n                                                            );\n                                                        // console.log(index);\n                                                        if (index > -1) {\n                                                            trainerbackgroundData.areaOfExpertise.splice(\n                                                                index,\n                                                                1\n                                                            );\n                                                        }\n                                                    }\n                                                }}\n                                                style={{\n                                                    color: \"#53BFD2\",\n                                                }}\n                                            />\n                                            <div className=\"checkbox_label\">\n                                                Pilates\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"card_item4\">\n                                        <h6>{data.clientDesc}</h6>\n                                        <textarea\n                                            type=\"text\"\n                                            value={trainerData.description}\n                                            name=\"description\"\n                                            placeholder=\"Give us your elevator pitch! This is all clients will see on the search results page until they click into your full profile.\"\n                                            onChange={handleInputChange}\n                                            maxLength=\"75\"\n                                        />\n                                    </div>\n                                    <div className=\"card_item5\">\n                                        <h6>Tell us about your Pricing</h6>\n                                        <p>{data.pricingDesc}</p>\n                                    </div>\n                                    <div className=\"card_item6\">\n                                        <Accordion title=\"In Person Training Session Pricing (at the clients location)\">\n                                            <div className=\"card_accordion\">\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Individual charge\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.individualCharge\n                                                        }\n                                                        name=\"individualCharge\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total Charge for 2 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssTwoPeopleCharge\n                                                        }\n                                                        name=\"ssTwoPeopleCharge\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total Charge for 3 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssThreePeopleCharge\n                                                        }\n                                                        name=\"ssThreePeopleCharge\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total Charge for 4 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssFourPeopleCharge\n                                                        }\n                                                        name=\"ssFourPeopleCharge\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.classFlatRate\n                                                        }\n                                                        name=\"classFlatRate\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"3 Session Rate\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.threeSessionRate\n                                                        }\n                                                        name=\"threeSessionRate\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"10 Session Pass Rate\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.tenSessionRate\n                                                        }\n                                                        name=\"tenSessionRate\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </Accordion>\n                                        <Accordion title=\"In Person Training Session Pricing (at your location)\">\n                                            <div className=\"card_accordion\">\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Individual Charge\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.individualChargeTl\n                                                        }\n                                                        name=\"individualChargeTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total for 2 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssTwoPeopleChargeTl\n                                                        }\n                                                        name=\"ssTwoPeopleChargeTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total for 3 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssThreePeopleChargeTl\n                                                        }\n                                                        name=\"ssThreePeopleChargeTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total for 4 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssFourPeopleChargeTl\n                                                        }\n                                                        name=\"ssFourPeopleChargeTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.classFlatRateTl\n                                                        }\n                                                        name=\"classFlatRateTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"3 Session Rate\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.threeSessionRateTl\n                                                        }\n                                                        name=\"threeSessionRateTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"10 Session Pass Rate\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.tenSessionRateTl\n                                                        }\n                                                        name=\"tenSessionRateTl\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </Accordion>\n                                        <Accordion title=\"Virtual Training Session Pricing\">\n                                            <div className=\"card_accordion\">\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Individual Charge\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.individualChargeVt\n                                                        }\n                                                        name=\"individualChargeVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total for 2 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssTwoPeopleChargeVt\n                                                        }\n                                                        name=\"ssTwoPeopleChargeVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total for 3 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssThreePeopleChargeVt\n                                                        }\n                                                        name=\"ssThreePeopleChargeVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Social Session (Total for 4 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.ssFourPeopleChargeVt\n                                                        }\n                                                        name=\"ssFourPeopleChargeVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Class Flat Rate (5-15 People)\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.classFlatRateVt\n                                                        }\n                                                        name=\"classFlatRateVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"3 Session Rate\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.threeSessionRateVt\n                                                        }\n                                                        name=\"threeSessionRateVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                                <div className=\"iconwrapper\">\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"10 Session Pass Rate\"\n                                                        onChange={\n                                                            handleInputChange\n                                                        }\n                                                        value={\n                                                            trainerData.tenSessionRateVt\n                                                        }\n                                                        name=\"tenSessionRateVt\"\n                                                    />\n                                                    <img\n                                                        src={DollarIcon}\n                                                        alt=\"icon\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </Accordion>{\" \"}\n                                    </div>\n                                    <div className=\"submit_button\">\n                                        <button\n                                            onClick={\n                                                handleChangeToTrainerProfile\n                                            }\n                                            type=\"submit\"\n                                            // onClick={handleTrainerAvailability}\n                                        >\n                                            Save Changes <ArrowHoverBlacked />\n                                            {/* <img src={Arrow} alt=\"icon\" /> */}\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nfunction Accordion({ title, children }) {\n    const [isOpenAccodion, setAccordion] = useState(false);\n\n    // for radio button\n    const [selectedValue, setSelectedValue] = useState(\"a\");\n\n    // for radio\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n\n    return (\n        <div className=\"accordion-wrapper\">\n            <div className=\"cyanRadio_wrapper\">\n                <CyanRadio\n                    checked={selectedValue === \"\"}\n                    onChange={handleChange}\n                    onClick={() => setAccordion(!isOpenAccodion)}\n                />\n                <h6\n                    className={`accordion-title ${\n                        isOpenAccodion ? \"open\" : \"\"\n                    }`}\n                    onClick={() => setAccordion(!isOpenAccodion)}\n                >\n                    {title}\n                </h6>\n            </div>\n            <div\n                className={`accordion-item ${\n                    !isOpenAccodion ? \"collapsed\" : \"\"\n                }`}\n            >\n                <div className=\"accordion-content\">{children}</div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    details: state.trainerReducer.details,\n    trainerPersonalData: state.trainerReducer.data,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            updateTrainerDetails,\n            getTrainerDetails,\n            fileUpload,\n        },\n        dispatch\n    );\n};\n\nconst TrainerCard = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TrainerCardDashboard);\n\nexport default TrainerCard;\n","export var COMMON_URL = \"http://doodlebluelive.com:2307\";\nexport var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\nexport var SESSION_URL = \"http://doodlebluelive.com:2337\";\nexport var NOTIFICATION_URL = \"\";\nexport var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\n","export default __webpack_public_path__ + \"static/media/Picture Icon.3e77f4f6.svg\";","export default __webpack_public_path__ + \"static/media/Profile Picture.5a574e6d.svg\";","export default __webpack_public_path__ + \"static/media/dollar Icon.35240d62.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","var cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}