{"version":3,"sources":["component/common/UserAvatar/index.js","component/common/Message/ChatItem.js","assets/files/TrainerDashboard/Message/Image 1.png"],"names":["UserAvatar","userName","profilePicture","useState","isError","setError","firstLetter","tempLastName","split","length","lastLetter","initialLetters","toUpperCase","backgroundColor","colorCode","Math","floor","charCodeAt","colorByName","String","fromCharCode","backgroundColorByName","StyleComponent","src","alt","onError","e","className","ChatItem","CurrentMessageComponent","currentChannelMembers","currMsg","type","state","date","msgTime","moment","timestamp","format","isMyMsg","author","localStorage","getItem","currentChatItemOwner","filter","userIdenity","body"],"mappings":"kMAGaA,EAAa,SAAC,GAA4C,IAAD,IAAzCC,gBAAyC,MAA9B,GAA8B,MAA1BC,sBAA0B,MAAT,GAAS,EACpE,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACIC,EAAcL,EAAS,GAEvBM,EAAeN,EAASO,MAAM,KAAKP,EAASO,MAAM,KAAKC,OAAS,GAEhEC,EACFT,EAASO,MAAM,KAAKC,OAAS,EACzBF,EAAaA,EAAaE,OAAS,GACnCR,EAASA,EAASQ,OAAS,GAE7BE,EAAiB,UAAGL,GAAH,OAAiBI,GAAaE,cAE7CC,EAAkB,CAAC,QAAS,MAAO,QAAS,SAAU,QAExDC,EAAYC,KAAKC,OAClBL,EAAeM,WAAW,GACzBN,EAAeM,WAAWN,EAAeF,OAAS,IAClD,GAEAS,EAAcC,OAAOC,aAAaN,GAElCO,EAAwB,GAExBH,GAAe,IACjBG,EAAwBR,EAAgB,GAC/BK,GAAe,IACxBG,EAAwBR,EAAgB,GAC/BK,GAAe,IACxBG,EAAwBR,EAAgB,GAC/BK,GAAe,IACxBG,EAAwBR,EAAgB,GAC/BK,GAAe,MACxBG,EAAwBR,EAAgB,IAG1C,IAAIS,EAAiB,GAwBrB,OAtBIpB,IACFoB,EACE,qBACEC,IAAKrB,EACLsB,IAAI,OACJC,QAAS,SAACC,IACPtB,GAAWC,GAAS,QAMzBD,GAAYF,IACdoB,EACE,qBAAKK,UAAS,qCAAgCN,GAA9C,SACGV,KAOA,mCAAGW,M,8ICzDCM,EAAW,SAAC,GAGlB,IACDC,EADA,IAFJC,6BAEI,MAFoB,GAEpB,MADJC,QAAWC,EACP,EADOA,KAAMC,EACb,EADaA,MAAOC,EACpB,EADoBA,KAIxB,GAAa,YAATF,EAAoB,CACtB,IAEIG,EAFiBC,IAAOH,EAAMI,WAELC,OAAO,MAE9BC,GAAe,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOO,UAAWC,aAAaC,QAAQ,WAEjDC,EACJb,EAAsBc,QACpB,qBAAGC,cAAkCZ,EAAMO,UAC3C,IAAM,GAEVX,EACE,sBAAKF,UAAS,uBAAkBY,EAAU,QAAU,QAApD,UACE,sBAAKZ,UAAU,eAAf,UACE,8BAAU,OAALM,QAAK,IAALA,OAAA,EAAAA,EAAOa,OAAQ,KACpB,sBAAMnB,UAAU,WAAhB,SAA4BQ,OAG9B,cAAC,aAAD,eAAgBQ,YAapBd,EACE,qBAAKF,UAAU,8DAAf,SACE,sBAAMA,UAAU,aAAhB,SAA8BO,MAKpC,OAAO,8BAAML,M,iCCnDf,OAAe,cAA0B,qC","file":"static/js/128.31afa096.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nexport const UserAvatar = ({ userName = \"\", profilePicture = \"\" }) => {\r\n  const [isError, setError] = useState(false);\r\n  let firstLetter = userName[0];\r\n\r\n  let tempLastName = userName.split(\" \")[userName.split(\" \").length - 1];\r\n\r\n  let lastLetter =\r\n    userName.split(\" \").length > 1\r\n      ? tempLastName[tempLastName.length - 1]\r\n      : userName[userName.length - 1];\r\n\r\n  let initialLetters = `${firstLetter}${lastLetter}`.toUpperCase();\r\n\r\n  const backgroundColor = [\"green\", \"red\", \"brown\", \"orange\", \"blue\"];\r\n\r\n  let colorCode = Math.floor(\r\n    (initialLetters.charCodeAt(0) +\r\n      initialLetters.charCodeAt(initialLetters.length - 1)) /\r\n      2\r\n  );\r\n  let colorByName = String.fromCharCode(colorCode);\r\n\r\n  let backgroundColorByName = \"\";\r\n\r\n  if (colorByName <= \"E\") {\r\n    backgroundColorByName = backgroundColor[0];\r\n  } else if (colorByName <= \"J\") {\r\n    backgroundColorByName = backgroundColor[1];\r\n  } else if (colorByName <= \"O\") {\r\n    backgroundColorByName = backgroundColor[2];\r\n  } else if (colorByName <= \"T\") {\r\n    backgroundColorByName = backgroundColor[3];\r\n  } else if (colorByName <= \"Z\") {\r\n    backgroundColorByName = backgroundColor[4];\r\n  }\r\n\r\n  let StyleComponent = \"\";\r\n\r\n  if (profilePicture) {\r\n    StyleComponent = (\r\n      <img\r\n        src={profilePicture}\r\n        alt=\"icon\"\r\n        onError={(e) => {\r\n          !isError && setError(true);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (isError || !profilePicture) {\r\n    StyleComponent = (\r\n      <div className={`user-avatar-pic background-${backgroundColorByName}`}>\r\n        {initialLetters}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //   console.log(backgroundColorByName);\r\n\r\n  return <>{StyleComponent}</>;\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport Jonn from \"../../../assets/files/TrainerDashboard/Message/Image 1.png\";\r\nimport { UserAvatar } from \"../UserAvatar\";\r\n\r\nexport const ChatItem = ({\r\n  currentChannelMembers = [],\r\n  currMsg: { type, state, date },\r\n}) => {\r\n  let CurrentMessageComponent;\r\n\r\n  if (type === \"message\") {\r\n    let msgCreatedDate = moment(state.timestamp);\r\n\r\n    let msgTime = msgCreatedDate.format(\"LT\");\r\n\r\n    const isMyMsg = state?.author === localStorage.getItem(\"user-id\");\r\n\r\n    const currentChatItemOwner =\r\n      currentChannelMembers.filter(\r\n        ({ userIdenity }) => userIdenity === state.author\r\n      )[0] || {};\r\n\r\n    CurrentMessageComponent = (\r\n      <div className={`message_chat_${isMyMsg ? \"right\" : \"left\"}`}>\r\n        <div className=\"message_text\">\r\n          <h5>{state?.body || \"\"}</h5>\r\n          <span className=\"msg-time\">{msgTime}</span>\r\n        </div>\r\n\r\n        <UserAvatar {...currentChatItemOwner} />\r\n\r\n        {/* <img\r\n          src={currentChatItemOwner?.profilePicture || Jonn}\r\n          alt=\"icon\"\r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = Jonn;\r\n          }}\r\n        /> */}\r\n      </div>\r\n    );\r\n  } else {\r\n    CurrentMessageComponent = (\r\n      <div className=\"w-100 d-flex align-items-center justify-content-center my-3\">\r\n        <span className=\"info-badge\">{date}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>{CurrentMessageComponent}</div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Image 1.5667afc3.png\";"],"sourceRoot":""}