{"version":3,"sources":["component/FindYourTrainer/TrainersDetails/index.js","component/FindYourTrainer/TrainerOutsideTime/index.js","helpers/baseURL.js","component/Home/Banner/InPersonDropDown.js","component/FindYourTrainer/TrainerFilter/DropdownTrainerAvailability.js","component/FindYourTrainer/TrainerFilter/FindTrainer.js","assets/files/FindTrainer/AvaliablityDropDownAssets/EarlyBird_Active.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/EarlyBird_Inactive.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/HappyHour_Active.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/HappyHour_Inactive.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/Mid_DayBreak_Active.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/NeverTooLate_Active.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/Rise_Shine_Active.svg","assets/files/FindTrainer/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg","assets/files/FindTrainer/DropDownAssets/Boxing_Active.svg","assets/files/FindTrainer/DropDownAssets/Boxing_Inactive.svg","assets/files/FindTrainer/DropDownAssets/Pilates_Active.svg","assets/files/FindTrainer/DropDownAssets/Pilates_Inactive.svg","assets/files/FindTrainer/DropDownAssets/Strength_HIIT_Active.svg","assets/files/FindTrainer/DropDownAssets/Strength_HIIT_Inactive.svg","assets/files/FindTrainer/DropDownAssets/Yoga_Active.svg","assets/files/FindTrainer/DropDownAssets/Yoga_Inactive.svg","assets/files/Home/Banner/SearchBar/Availability Icon.svg","assets/files/Home/Banner/SearchBar/Shedule Icon.svg","assets/files/SignUp/ArrowSecondary.svg","assets/files/SVG/findTrainer/weight.svg"],"names":["HeadingTrainer","bestMatchRef","className","ref","TrainerCards","connect","state","sessionData","userReducer","dispatch","bindActionCreators","updateUserDetails","props","useState","bestMatchData","setbestMatchData","useEffect","content","visible","setVisible","no_match","length","handleClick","data","isReadMore","reduxData","selectedTrainerData","trainerId","trainerData","history","push","pathname","style","alignleft","Object","keys","map","index","imgdb","COMMON_URL","src","objectFit","alt","onError","e","target","onerror","textTransform","onClick","backgroundColor","showCard","Arrow","otherRef","TrainerCardOutside","outSideData","setOutSideData","MESSAGING_URL","SESSION_URL","NOTIFICATION_URL","PAYMENT_URL","InPersonDropDown","inPerson","handleChange","component","label","value","control","checked","selected","onChange","DropdownTrainerAvailability","availability","EarlyInActive","hoverSrc","EarlyActive","React","MouseEventHandler","RiseInActive","RiseActive","MidInActive","MidActive","HappyInActive","HappyActive","NeverTooInActive","NeverTooActive","LineBetween","xmlns","width","height","viewBox","id","data-name","y2","transform","fill","stroke","strokeWidth","DropDownSVG","d","strokeLinecap","strokeLinejoin","FindTrainer","trainerQueryData","trainerReducer","query","updateTrainerDetails","window","scrollTo","location","date","payload","vertical","trainingType","getFormatDate","city","console","log","setqueryObject","getTrainerDataByQuery","DropdownAvailability","bestOthersData","setbestOthersData","Date","selectedDate","setSelectedDate","DropdownState","setDropdownState","DropdownTrainerAvailabilityState","setDropdownTrainerAvailabilityState","InPersonDD","setInPersonDD","ddBoxingState","setddBoxingState","ddPilatesState","setddPilatesState","ddYogaState","setddYogaState","ddHiitState","setddHiitState","queryObject","newYork","miami","hamptons","plamBeach","setInPerson","useRef","TriggerDropDownTrainerAvailability","Dropdown","BoxingIcon","BoxingIconActive","PilatesIcon","PilatesIconActive","StrengthIcon","StrengthIconActive","YogaIcon","YogaIconIconActive","DropdownHomeInPerson","borderBottom","virtualMarkup","setvirtualMarkup","fontWeight","inPersonMarkup","setinPersonMarkup","SetLocation","currData","trainerAvailableApi","TrainerApi","api","then","bestMatch","others","current","scrollIntoView","behavior","TriggerInPersonDropDown","tempData","fontSize","fontFamily","x","y","Weight","SheduleIcon","datee","year","getFullYear","month","getMonth","dt","getDate","dateFormat","minDate","showYearDropdown","scrollableMonthYearDropdown","AvailabilityIcon"],"mappings":"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","file":"static/js/99.ecbb00d5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./trainer.sass\";\r\nimport Arrow from \"../../../assets/files/SignUp/ArrowSecondary.svg\";\r\nimport { history } from \"helpers\";\r\nimport BlackCircleButton from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { COMMON_URL } from \"helpers/baseURL\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserDetails } from \"action/userAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nconst TrainerCardsFC = (props) => {\r\n  const [bestMatchData, setbestMatchData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setbestMatchData(props.content);\r\n  });\r\n  const [visible, setVisible] = useState(3);\r\n  const showMoreItems = () => {\r\n    setVisible((showCard) => showCard + 3);\r\n  };\r\n\r\n  let no_match = <div></div>;\r\n  if (bestMatchData.length === 0) {\r\n    no_match = <h1 className=\"no_match\">No Matches found</h1>;\r\n  }\r\n\r\n  const handleClick = (data, isReadMore = false) => {\r\n    let reduxData = {\r\n      selectedTrainerData: {\r\n        trainerId: bestMatchData[data][\"id\"],\r\n        trainerData: bestMatchData[data],\r\n      },\r\n    };\r\n    props.updateUserDetails(reduxData);\r\n\r\n    if (!isReadMore) {\r\n      history.push({\r\n        pathname: \"/user/scheduler\",\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: `/trainer/profile/${bestMatchData[data][\"id\"]}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <HeadingTrainer bestMatchRef={props.bestMatchRef} />\r\n        {no_match}\r\n        <div className=\"row\" style={{ alignleft: \"auto\" }}>\r\n          {Object.keys(bestMatchData).map((data, index) => {\r\n            let imgdb = `${COMMON_URL}${bestMatchData[data][\"profilePicture\"]}`;\r\n\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={imgdb}\r\n                  style={{ objectFit: \"cover\" }}\r\n                  alt=\"Profile Picture Not Found \"\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src =\r\n                      \"https://qphs.fs.quoracdn.net/main-qimg-2b21b9dd05c757fe30231fac65b504dd\";\r\n                  }}\r\n                />\r\n\r\n                <div className=\"card-body\">\r\n                  <h3 style={{ textTransform: \"capitalize\" }}>\r\n                    {bestMatchData[data][\"firstName\"]}&nbsp;\r\n                    {bestMatchData[data][\"lastName\"]}\r\n                  </h3>\r\n                  <h6>\r\n                    {bestMatchData[data][\"areaOfExpertise\"][0]}\r\n                    {bestMatchData[data][\"areaOfExpertise\"][1] ? \",\" : \"\"}\r\n                    &nbsp;\r\n                    {bestMatchData[data][\"areaOfExpertise\"][1]}\r\n                    {bestMatchData[data][\"areaOfExpertise\"][2] ? \",\" : \"\"}\r\n                    &nbsp;\r\n                    {bestMatchData[data][\"areaOfExpertise\"][2]}\r\n                    &nbsp;\r\n                    {bestMatchData[data][\"areaOfExpertise\"][3]}\r\n                  </h6>\r\n                  <p>\r\n                    {bestMatchData[data][\"description\"]}\r\n                    &nbsp;\r\n                    <button onClick={() => handleClick(data, true)}>\r\n                      Read More\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-button\">\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"#53BFD2\",\r\n                    }}\r\n                    onClick={() => handleClick(data)}\r\n                  >\r\n                    book a session\r\n                    <BlackCircleButton />\r\n                    <p>\r\n                      from{\" \"}\r\n                      <span>\r\n                        $\r\n                        {\r\n                          bestMatchData[data][\"oneOnOnePricing\"][\r\n                            \"inPersonAtClientLocation\"\r\n                          ]\r\n                        }\r\n                      </span>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"showmore\">\r\n          <button className=\"showmore_btn\" onClick={showMoreItems}>\r\n            {visible ? \"View More Trainers \" : null}\r\n            <img src={Arrow} alt=\"icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeadingTrainer = ({ bestMatchRef }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"wrapper_heading\" ref={bestMatchRef}>\r\n          <h2>Your Motto Matches</h2>\r\n          <p>\r\n            These matches are the perfect fit based on your filters. The prices\r\n            shown are for 1:1 sessions. Click on the trainer profile for group\r\n            rates!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sessionData: state.userReducer.sessionData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateUserDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerCards = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainerCardsFC);\r\n\r\nexport default TrainerCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { history } from \"helpers\";\r\nimport BlackCircleButton from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { COMMON_URL } from \"helpers/baseURL\";\r\nimport \"./styleCard.scss\";\r\nimport { updateUserDetails } from \"action/userAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst TrainerCardOutsideFC = (props) => {\r\n  const [outSideData, setOutSideData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOutSideData(props.content);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOutSideData(props.content);\r\n  }, [props.content]);\r\n\r\n  const handleClick = (data, isReadMore = false) => {\r\n    let reduxData = {\r\n      selectedTrainerData: {\r\n        trainerId: outSideData[data][\"id\"],\r\n        trainerData: outSideData[data],\r\n      },\r\n    };\r\n    props.updateUserDetails(reduxData);\r\n\r\n    if (!isReadMore) {\r\n      history.push({\r\n        pathname: \"/user/scheduler\",\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: `/trainer/profile/${outSideData[data][\"id\"]}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <HeadingTrainer otherRef={props.otherRef} />\r\n\r\n        <div className=\"row\">\r\n          {Object.keys(outSideData).map((data, index) => {\r\n            let imgdb = `${COMMON_URL}${outSideData[data][\"profilePicture\"]}`;\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"inner_card\">\r\n                  <img\r\n                    className=\"card-img-top card-img\"\r\n                    src={imgdb}\r\n                    style={{ objectFit: \"cover\" }}\r\n                    onError={(e) => {\r\n                      e.target.onerror = null;\r\n                      e.target.src =\r\n                        \"https://qphs.fs.quoracdn.net/main-qimg-2b21b9dd05c757fe30231fac65b504dd\";\r\n                    }}\r\n                  />\r\n\r\n                  <div className=\"overlay_card\">\r\n                    <div className=\"content_card\">\r\n                      <div className=\"circle_hover_card\">\r\n                        <p>check me out</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <h3 style={{ textTransform: \"capitalize\" }}>\r\n                    {outSideData[data][\"firstName\"]}&nbsp;\r\n                    {outSideData[data][\"lastName\"]}\r\n                  </h3>\r\n                  <h6>\r\n                    {outSideData[data][\"areaOfExpertise\"][0]}\r\n                    {outSideData[data][\"areaOfExpertise\"][1] ? \",\" : \"\"}\r\n                    &nbsp;\r\n                    {outSideData[data][\"areaOfExpertise\"][1]}\r\n                    {outSideData[data][\"areaOfExpertise\"][2] ? \",\" : \"\"}\r\n                    &nbsp;\r\n                    {outSideData[data][\"areaOfExpertise\"][2]}\r\n                    &nbsp;\r\n                    {outSideData[data][\"areaOfExpertise\"][3]}\r\n                  </h6>\r\n                  <p>\r\n                    {outSideData[data][\"description\"]}\r\n\r\n                    <button onClick={() => handleClick(handleClick, true)}>\r\n                      Read More\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-button\">\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"#53BFD2\",\r\n                    }}\r\n                    onClick={() => handleClick(data)}\r\n                  >\r\n                    book a session\r\n                    <BlackCircleButton />\r\n                    <p>\r\n                      from\r\n                      <span>\r\n                        {\r\n                          outSideData[data][\"oneOnOnePricing\"][\r\n                            \"inPersonAtClientLocation\"\r\n                          ]\r\n                        }{\" \"}\r\n                        $\r\n                      </span>\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeadingTrainer = ({ otherRef }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"wrapper_headings\" ref={otherRef}>\r\n          <h2>just outside your time</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ReadMore = ({ children, maxChar = 110 }) => {\r\n  const text = children;\r\n  const [isTruncated, setIsTruncated] = useState(true);\r\n\r\n  const resultString = isTruncated ? text.slice(0, maxChar) : text;\r\n  function toggleIsTruncated() {\r\n    setIsTruncated(!isTruncated);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p className=\"has-text-left\">\r\n        {resultString}\r\n        <span onClick={toggleIsTruncated} className=\"readmore\">\r\n          {isTruncated ? \"Read more\" : \"Read less\"}\r\n        </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sessionData: state.userReducer.sessionData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateUserDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst TrainerCardOutside = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrainerCardOutsideFC);\r\n\r\nexport default TrainerCardOutside;\r\n","// export var COMMON_URL = \"https://apis.bookmotto.com/user\";\r\n// export var MESSAGING_URL = \"https://apis.bookmotto.com/messaging\";\r\n// export var SESSION_URL = \"https://apis.bookmotto.com/session\";\r\n// export var NOTIFICATION_URL = \"\";\r\n// export var PAYMENT_URL = \"https://apis.bookmotto.com/payments\";\r\n\r\nexport var COMMON_URL = \"http://doodlebluelive.com:2307\";\r\nexport var MESSAGING_URL = \"http://doodlebluelive.com:2338\";\r\nexport var SESSION_URL = \"http://doodlebluelive.com:2337\";\r\nexport var NOTIFICATION_URL = \"\";\r\nexport var PAYMENT_URL = \"http://doodlebluelive.com:2336\";\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./inPersonStyles.scss\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nexport const InPersonDropDown = ({ inPerson, handleChange }) => {\r\n  // const [newYork, setNewYork] = useState(false);\r\n  // const [miami, setMiami] = useState(false);\r\n  // const [hamptons, setHamptons] = useState(false);\r\n  // const [plamBeach, setPlamBeach] = useState(false);\r\n\r\n  const options = [\r\n    { label: \"New York\", value: \"newYork\" },\r\n    { label: \"Miami\", value: \"miami\" },\r\n    { label: \"Hamptons\", value: \"hamptons\" },\r\n    { label: \"Plam Beach\", value: \"plamBeach\" },\r\n  ];\r\n\r\n  //   console.log(inPerson);\r\n\r\n  return (\r\n    <div className=\"inPersonBG\">\r\n      <div className=\"list_inPerson\">\r\n        <form>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup>\r\n              {options.map(({ label, value }, index) => (\r\n                <FormControlLabel\r\n                  key={`${label}_${index}`}\r\n                  control={\r\n                    <Radio\r\n                      checked={inPerson[value]?.selected}\r\n                      onChange={() => handleChange(value)}\r\n                      className=\"inperson_radio\"\r\n                    />\r\n                  }\r\n                  label={label}\r\n                  className=\"inperson_checkbox\"\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default InPersonDropDown;\r\n","import React, { useState } from \"react\";\r\nimport HoverImage from \"react-hover-image\";\r\n\r\n//Assets on normal\r\nimport EarlyInActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/EarlyBird_Inactive.svg\";\r\nimport RiseInActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/Rise_Shine_Inactive.svg\";\r\nimport MidInActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/Mid-DayBreak_Inactive.svg\";\r\nimport HappyInActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/HappyHour_Inactive.svg\";\r\nimport NeverTooInActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/NeverTooLate_Inactive.svg\";\r\n\r\n//Assets on hover\r\nimport EarlyActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/EarlyBird_Active.svg\";\r\nimport RiseActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/Rise_Shine_Active.svg\";\r\nimport MidActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/Mid_DayBreak_Active.svg\";\r\nimport HappyActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/HappyHour_Active.svg\";\r\nimport NeverTooActive from \"../../../assets/files/FindTrainer/AvaliablityDropDownAssets/NeverTooLate_Active.svg\";\r\n\r\nimport \"./find.scss\";\r\n\r\nconst DropdownTrainerAvailability = ({ onClick = () => {} }) => {\r\n    // const [ddBoxingState, setddBoxingState] = useState(false);\r\n    // const [ddPilatesState, setddPilatesState] = useState(false);\r\n    // const [ddYogaState, setddYogaState] = useState(false);\r\n    // const [ddHiitState, setddHiitState] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"box_3_active_trainer\">\r\n                <div className=\"dd_row_one\">\r\n                    <div\r\n                        className=\"option\"\r\n                        onClick={() => {\r\n                            // setddBoxingState(!ddBoxingState);\r\n                            onClick({ availability: \"Early Bird\" });\r\n                            //console.log(ddBoxingState, \"boxing\");\r\n                        }}\r\n                    >\r\n                        <div className=\"option_wapper\">\r\n                            <HoverImage\r\n                                src={EarlyInActive}\r\n                                hoverSrc={EarlyActive}\r\n                                onClick={React.MouseEventHandler}\r\n                            />\r\n                            <h2>Early Bird</h2>\r\n                            <label>(5am-7:30am)</label>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"option\"\r\n                        onClick={() => {\r\n                            // setddPilatesState(!ddPilatesState);\r\n                            onClick({ availability: \"Rise & Shine\" });\r\n                            // console.log(ddPilatesState, \"pilates\");\r\n                        }}\r\n                    >\r\n                        <div className=\"option_wapper\">\r\n                            <HoverImage\r\n                                src={RiseInActive}\r\n                                hoverSrc={RiseActive}\r\n                            />\r\n                            <h2>Rise & Shine</h2>\r\n                            <label>(8am-11am)</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dd_row_two\">\r\n                    <div\r\n                        className=\"option\"\r\n                        onClick={() => {\r\n                            // setddHiitState(!ddHiitState);\r\n                            onClick({ availability: \"Mid-day Break\" });\r\n                            // console.log(ddHiitState, \"hiit\");\r\n                        }}\r\n                    >\r\n                        <div className=\"option_wapper\">\r\n                            <HoverImage\r\n                                src={MidInActive}\r\n                                hoverSrc={MidActive}\r\n                            />\r\n                            <h2>Mid-day Break</h2>\r\n                            <label>(11:30am-4pm)</label>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"option\"\r\n                        onClick={() => {\r\n                            //setddYogaState(!ddYogaState);\r\n                            onClick({ availability: \"Happy Hour\" });\r\n                            //console.log(ddYogaState, \"yoga\");\r\n                        }}\r\n                    >\r\n                        <div className=\"option_wapper\">\r\n                            <HoverImage\r\n                                src={HappyInActive}\r\n                                hoverSrc={HappyActive}\r\n                            />\r\n                            <h2>Happy Hour</h2>\r\n                            <label>(4:30pm-7pm)</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dd_row_two\">\r\n                    <div\r\n                        className=\"option\"\r\n                        onClick={() => {\r\n                            // setddYogaState(!ddYogaState);\r\n                            onClick({ availability: \"Never Too Late\" });\r\n                            // console.log(ddYogaState, \"yoga\");\r\n                        }}\r\n                    >\r\n                        <div className=\"option_wapper\">\r\n                            <HoverImage\r\n                                src={NeverTooInActive}\r\n                                hoverSrc={NeverTooActive}\r\n                            />\r\n                            <h2>Never Too Late</h2>\r\n                            <label>(7:30pm-9:30pm)</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DropdownTrainerAvailability;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./find.scss\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport HoverImage from \"react-hover-image\";\r\nimport InPersonDropDown from \"component/Home/Banner/InPersonDropDown\";\r\n\r\n//Assets for Inactive\r\nimport BoxingIcon from \"../../../assets/files/FindTrainer/DropDownAssets/Boxing_Inactive.svg\";\r\nimport PilatesIcon from \"../../../assets/files/FindTrainer/DropDownAssets/Pilates_Inactive.svg\";\r\nimport StrengthIcon from \"../../../assets/files/FindTrainer/DropDownAssets/Strength_HIIT_Inactive.svg\";\r\nimport YogaIcon from \"../../../assets/files/FindTrainer/DropDownAssets/Yoga_Inactive.svg\";\r\n\r\n// Assets when hoveded\r\nimport BoxingIconActive from \"../../../assets/files/FindTrainer/DropDownAssets/Boxing_Active.svg\";\r\nimport PilatesIconActive from \"../../../assets/files/FindTrainer/DropDownAssets/Pilates_Active.svg\";\r\nimport StrengthIconActive from \"../../../assets/files/FindTrainer/DropDownAssets/Strength_HIIT_Active.svg\";\r\nimport YogaIconIconActive from \"../../../assets/files/FindTrainer/DropDownAssets/Yoga_Active.svg\";\r\n\r\nimport TrainerCards from \"../TrainersDetails/index\";\r\nimport TrainerCardOutside from \"../TrainerOutsideTime/index\";\r\nimport Weight from \"../../../assets/files/SVG/findTrainer/weight.svg\";\r\nimport SheduleIcon from \"../../../assets/files/Home/Banner/SearchBar/Shedule Icon.svg\";\r\nimport AvailabilityIcon from \"../../../assets/files/Home/Banner/SearchBar/Availability Icon.svg\";\r\nimport DropdownTrainerAvailability from \"./DropdownTrainerAvailability\";\r\nimport \"./find.scss\";\r\nimport { TrainerApi } from \"service/apiVariables\";\r\nimport { api } from \"service/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateTrainerDetails } from \"action/trainerAct\";\r\nimport { getFormatDate } from \"service/helperFunctions\";\r\nconst FindTrainerFC = ({ trainerQueryData, updateTrainerDetails }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (trainerQueryData.location && trainerQueryData.date) {\r\n      let payload = {\r\n        query: {\r\n          location: trainerQueryData?.location,\r\n          vertical: trainerQueryData?.trainingType,\r\n          date: getFormatDate(),\r\n          availability: trainerQueryData?.availability,\r\n          city: trainerQueryData?.city,\r\n        },\r\n      };\r\n\r\n      console.log(\"logged...\", payload);\r\n\r\n      setqueryObject(payload.query);\r\n      getTrainerDataByQuery();\r\n      // setqueryObject(trainerQueryData);\r\n      // SetLocation(trainerQueryData.location);\r\n    } else {\r\n      let payload = {\r\n        query: {\r\n          location: \"virtual\",\r\n          vertical: \"Boxing\",\r\n          date: getFormatDate(),\r\n          availability: \"EarlyBird\",\r\n        },\r\n      };\r\n      setqueryObject(payload.query);\r\n\r\n      updateTrainerDetails(payload);\r\n    }\r\n  }, []);\r\n\r\n  const [bestMatchData, setbestMatchData] = useState([]);\r\n  const [bestOthersData, setbestOthersData] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [DropdownState, setDropdownState] = useState(false);\r\n  const [\r\n    DropdownTrainerAvailabilityState,\r\n    setDropdownTrainerAvailabilityState,\r\n  ] = useState(false);\r\n  const [InPersonDD, setInPersonDD] = useState(false);\r\n\r\n  const [ddBoxingState, setddBoxingState] = useState(false);\r\n  const [ddPilatesState, setddPilatesState] = useState(false);\r\n  const [ddYogaState, setddYogaState] = useState(false);\r\n  const [ddHiitState, setddHiitState] = useState(false);\r\n  const [queryObject, setqueryObject] = useState({\r\n    location: \"virtual\",\r\n    vertical: \"Select a Category\",\r\n    date: \"\",\r\n    availability: \"Select a Time\",\r\n    // inPerson: \"In Person\",\r\n  });\r\n\r\n  const [inPerson, setInPerson] = useState({\r\n    newYork: { value: \"nyw\", selected: false },\r\n    miami: { value: \"maimi\", selected: false },\r\n    hamptons: { value: \"hampton\", selected: false },\r\n    plamBeach: { value: \"plam\", selected: false },\r\n  });\r\n\r\n  const bestMatchRef = useRef(null);\r\n  const otherRef = useRef(null);\r\n\r\n  const onClickHandle = () => {\r\n    setSelectedDate(selectedDate);\r\n  };\r\n\r\n  // Dropdown for availability\r\n  let DropdownAvailability;\r\n  if (DropdownTrainerAvailabilityState) {\r\n    DropdownAvailability = (\r\n      <DropdownTrainerAvailability\r\n        onClick={({ availability }) => {\r\n          setqueryObject({ ...queryObject, availability });\r\n          TriggerDropDownTrainerAvailability();\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    <div></div>;\r\n  }\r\n\r\n  const TriggerDropDownTrainerAvailability = () => {\r\n    setDropdownTrainerAvailabilityState(!DropdownTrainerAvailabilityState);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    let tempData = {\r\n      newYork: { value: \"nyw\", selected: false },\r\n      miami: { value: \"maimi\", selected: false },\r\n      hamptons: { value: \"hampton\", selected: false },\r\n      plamBeach: { value: \"plam\", selected: false },\r\n    };\r\n\r\n    tempData[value] = {\r\n      ...tempData[value],\r\n      selected: true,\r\n    };\r\n\r\n    setInPerson(tempData);\r\n\r\n    TriggerInPersonDropDown();\r\n  };\r\n\r\n  let Dropdown;\r\n\r\n  if (DropdownState) {\r\n    Dropdown = (\r\n      <div className=\"box_3_active_trainer\">\r\n        <div className=\"dd_row_one\">\r\n          <div\r\n            className=\"option\"\r\n            onClick={() => {\r\n              setddBoxingState(!ddBoxingState);\r\n              setDropdownState(!DropdownState);\r\n              setqueryObject({\r\n                ...queryObject,\r\n                vertical: \"Boxing\",\r\n              });\r\n            }}\r\n          >\r\n            <div className=\"option_wapper\">\r\n              <HoverImage src={BoxingIcon} hoverSrc={BoxingIconActive} />\r\n              <h2>Boxing</h2>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"option\"\r\n            onClick={() => {\r\n              setddPilatesState(!ddPilatesState);\r\n              setDropdownState(!DropdownState);\r\n              setqueryObject({\r\n                ...queryObject,\r\n                vertical: \"Pilates\",\r\n              });\r\n            }}\r\n          >\r\n            <div className=\"option_wapper\">\r\n              <HoverImage src={PilatesIcon} hoverSrc={PilatesIconActive} />\r\n              <h2>Pilates</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"dd_row_two\">\r\n          <div\r\n            className=\"option\"\r\n            onClick={() => {\r\n              setddHiitState(!ddHiitState);\r\n              setqueryObject({\r\n                ...queryObject,\r\n                vertical: \"Strength & Hiit\",\r\n              });\r\n              setDropdownState(!DropdownState);\r\n            }}\r\n          >\r\n            <div className=\"option_wapper\">\r\n              <HoverImage src={StrengthIcon} hoverSrc={StrengthIconActive} />\r\n              <h2>Strength & Hiit</h2>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"option\"\r\n            onClick={() => {\r\n              setddYogaState(!ddYogaState);\r\n              setqueryObject({\r\n                ...queryObject,\r\n                vertical: \"Yoga\",\r\n              });\r\n              setDropdownState(!DropdownState);\r\n            }}\r\n          >\r\n            <div className=\"option_wapper\">\r\n              <HoverImage src={YogaIcon} hoverSrc={YogaIconIconActive} />\r\n              <h2>Yoga</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    Dropdown = <div className=\"box_3_inactive\"></div>;\r\n  }\r\n\r\n  const TriggerVerticalDropDown = () => {\r\n    setDropdownState(!DropdownState);\r\n  };\r\n\r\n  const [virtualMarkup, setvirtualMarkup] = useState(\r\n    <p style={{ borderBottom: \"3px solid #53BFD2\" }}>Virtual</p>\r\n  );\r\n  const [inPersonMarkup, setinPersonMarkup] = useState(\r\n    <p style={{ fontWeight: \"normal\" }}>In Person</p>\r\n  );\r\n\r\n  const SetLocation = (value) => {\r\n    if (value === \"virtual\" || value === \"Virtual\") {\r\n      setvirtualMarkup(\r\n        <p style={{ borderBottom: \"3px solid #53BFD2\" }}>Virtual</p>\r\n      );\r\n      setinPersonMarkup(<p style={{ fontWeight: \"normal\" }}>In Person</p>);\r\n\r\n      setqueryObject({ ...queryObject, location: \"virtual\" });\r\n    } else {\r\n      setvirtualMarkup(<p style={{ fontWeight: \"normal\" }}>Virtual</p>);\r\n      setinPersonMarkup(\r\n        <p style={{ borderBottom: \"3px solid #53BFD2\" }}>In Person</p>\r\n      );\r\n      setqueryObject({ ...queryObject, location: \"Person\" });\r\n      setInPersonDD(!InPersonDD);\r\n    }\r\n  };\r\n\r\n  const search_action = () => {\r\n    let payload = {\r\n      query: {\r\n        location: queryObject.location,\r\n        date: queryObject.date,\r\n        trainingType: queryObject.vertical,\r\n        availability: queryObject.availability,\r\n        // inPerson: queryObject.inPerson,\r\n      },\r\n    };\r\n\r\n    updateTrainerDetails(payload);\r\n\r\n    getTrainerDataByQuery(payload.query);\r\n  };\r\n\r\n  const getTrainerDataByQuery = (currData) => {\r\n    const { location, date, trainingType, availability, city } =\r\n      currData || trainerQueryData;\r\n\r\n    const { trainerAvailableApi } = TrainerApi;\r\n\r\n    trainerAvailableApi.query.location = location;\r\n    trainerAvailableApi.query.trainingType = trainingType;\r\n    trainerAvailableApi.query.date = date;\r\n    trainerAvailableApi.query.city = city;\r\n    trainerAvailableApi.query.availability = availability;\r\n\r\n    api({ ...trainerAvailableApi }).then(({ data }) => {\r\n      setbestMatchData(data.bestMatch);\r\n      setbestOthersData(data.others);\r\n\r\n      if (data.bestMatch.length > 0) {\r\n        return bestMatchRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n      if (data.others.length > 0) {\r\n        return otherRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    });\r\n  };\r\n\r\n  //inPerson_dropdown\r\n  let DropdownHomeInPerson;\r\n  if (InPersonDD) {\r\n    DropdownHomeInPerson = (\r\n      <InPersonDropDown\r\n        onClick={({ inPerson }) => {\r\n          setqueryObject({ ...queryObject, inPerson });\r\n          TriggerInPersonDropDown();\r\n        }}\r\n        handleChange={handleChange}\r\n        inPerson={inPerson}\r\n      />\r\n    );\r\n  } else {\r\n    <div></div>;\r\n  }\r\n  const TriggerInPersonDropDown = () => {\r\n    setInPersonDD(!InPersonDD);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card container border-0\">\r\n        <div className=\"card-wrapper\">\r\n          <div className=\"item1\">\r\n            <h3>Location</h3>\r\n            <div className=\"location\">\r\n              <div className=\"card-item\">\r\n                <div\r\n                  onClick={() => {\r\n                    SetLocation(\"Virtual\");\r\n                    setInPersonDD(false);\r\n                  }}\r\n                  className=\"card-selection\"\r\n                >\r\n                  {virtualMarkup}\r\n                </div>\r\n              </div>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"9\"\r\n                height=\"27\"\r\n                viewBox=\"0 0 9 27\"\r\n              >\r\n                <text\r\n                  id=\"_\"\r\n                  data-name=\"/\"\r\n                  transform=\"translate(1 22)\"\r\n                  fill=\"#53bfd2\"\r\n                  fontSize=\"20\"\r\n                  fontFamily=\"SegoeUI, Segoe UI\"\r\n                >\r\n                  <tspan x=\"0\" y=\"0\">\r\n                    /\r\n                  </tspan>\r\n                </text>\r\n              </svg>\r\n              <div\r\n                onClick={() => {\r\n                  SetLocation(\"In Person\") && TriggerInPersonDropDown();\r\n                }}\r\n              >\r\n                <h6>{inPersonMarkup}</h6>\r\n                <div\r\n                  className=\"inPerson-dd\"\r\n                  // onClick={TriggerInPersonDropDown}\r\n                >\r\n                  {DropdownHomeInPerson}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <LineBetween />\r\n          <div className=\"item2\">\r\n            <h3>Training Vertical</h3>\r\n            <div className=\"card-item\" onClick={TriggerVerticalDropDown}>\r\n              <img src={Weight} alt=\"icon\" />\r\n              <p>{queryObject.vertical || queryObject.trainingType}</p>\r\n            </div>\r\n            {Dropdown}\r\n          </div>\r\n          <LineBetween />\r\n\r\n          <div className=\"item3\">\r\n            <h3>Schedule</h3>\r\n            <div className=\"card-item\">\r\n              <img src={SheduleIcon} alt=\"icon\" />\r\n              <DatePicker\r\n                onChange={(datee) => {\r\n                  setSelectedDate(datee);\r\n                  var date = new Date(datee);\r\n                  var year = date.getFullYear();\r\n                  var month = date.getMonth() + 1;\r\n                  var dt = date.getDate();\r\n\r\n                  if (dt < 10) {\r\n                    dt = \"0\" + dt;\r\n                  }\r\n                  if (month < 10) {\r\n                    month = \"0\" + month;\r\n                  }\r\n\r\n                  setqueryObject({\r\n                    ...queryObject,\r\n                    date: year + \"-\" + month + \"-\" + dt,\r\n                  });\r\n                }}\r\n                selected={selectedDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                minDate={new Date()}\r\n                showYearDropdown\r\n                scrollableMonthYearDropdown\r\n              ></DatePicker>\r\n\r\n              <DropDownSVG onClick={onClickHandle} />\r\n            </div>\r\n          </div>\r\n          <LineBetween />\r\n\r\n          <div className=\"item4\">\r\n            <h3>Availability</h3>\r\n            <div\r\n              className=\"card-item\"\r\n              onClick={TriggerDropDownTrainerAvailability}\r\n            >\r\n              <img src={AvailabilityIcon} alt=\"icon\" />\r\n              <p>{queryObject.availability}</p>\r\n            </div>\r\n            {DropdownAvailability}\r\n          </div>\r\n\r\n          <div className=\"item5\">\r\n            <div className=\"circle_search\" onClick={search_action}>\r\n              <BiSearch />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <TrainerCards content={bestMatchData} bestMatchRef={bestMatchRef} />\r\n      <TrainerCardOutside content={bestOthersData} otherRef={otherRef} />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction LineBetween() {\r\n  return (\r\n    <div className=\"line\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"2\"\r\n        height=\"55\"\r\n        viewBox=\"0 0 2 55\"\r\n      >\r\n        <line\r\n          id=\"Line_1\"\r\n          data-name=\"Line 1\"\r\n          y2=\"55\"\r\n          transform=\"translate(1)\"\r\n          fill=\"none\"\r\n          stroke=\"#eaeaea\"\r\n          strokeWidth=\"2\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DropDownSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"14.118\"\r\n      height=\"7.809\"\r\n      viewBox=\"0 0 14.118 7.809\"\r\n    >\r\n      <path\r\n        id=\"Drop_Down_3\"\r\n        data-name=\"Drop Down 3\"\r\n        d=\"M12,0,6,6,0,0\"\r\n        transform=\"translate(1.061 1.061)\"\r\n        fill=\"none\"\r\n        stroke=\"#898989\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"1.5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trainerQueryData: state.trainerReducer.query,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      updateTrainerDetails,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst FindTrainer = connect(mapStateToProps, mapDispatchToProps)(FindTrainerFC);\r\n\r\nexport default FindTrainer;\r\n","export default __webpack_public_path__ + \"static/media/EarlyBird_Active.53ef0601.svg\";","export default __webpack_public_path__ + \"static/media/EarlyBird_Inactive.1b9f5507.svg\";","export default __webpack_public_path__ + \"static/media/HappyHour_Active.bea5a551.svg\";","export default __webpack_public_path__ + \"static/media/HappyHour_Inactive.855505ff.svg\";","export default __webpack_public_path__ + \"static/media/Mid-DayBreak_Inactive.cd4a93ae.svg\";","export default __webpack_public_path__ + \"static/media/Mid_DayBreak_Active.9ab42574.svg\";","export default __webpack_public_path__ + \"static/media/NeverTooLate_Active.3ef576c6.svg\";","export default __webpack_public_path__ + \"static/media/NeverTooLate_Inactive.ef006801.svg\";","export default __webpack_public_path__ + \"static/media/Rise_Shine_Active.54b69531.svg\";","export default __webpack_public_path__ + \"static/media/Rise_Shine_Inactive.2d2d4d98.svg\";","export default __webpack_public_path__ + \"static/media/Boxing_Active.d97da098.svg\";","export default __webpack_public_path__ + \"static/media/Boxing_Inactive.6bba6809.svg\";","export default __webpack_public_path__ + \"static/media/Pilates_Active.7c3999d9.svg\";","export default __webpack_public_path__ + \"static/media/Pilates_Inactive.11789d41.svg\";","export default __webpack_public_path__ + \"static/media/Strength_HIIT_Active.c86ff4cd.svg\";","export default __webpack_public_path__ + \"static/media/Strength_HIIT_Inactive.e52e712a.svg\";","export default __webpack_public_path__ + \"static/media/Yoga_Active.7de75d47.svg\";","export default __webpack_public_path__ + \"static/media/Yoga_Inactive.4e21c216.svg\";","export default __webpack_public_path__ + \"static/media/Availability Icon.0afc93d8.svg\";","export default __webpack_public_path__ + \"static/media/Shedule Icon.308099a7.svg\";","export default __webpack_public_path__ + \"static/media/ArrowSecondary.2dfb6299.svg\";","export default __webpack_public_path__ + \"static/media/weight.3f4f4e3a.svg\";"],"sourceRoot":""}