{"version":3,"sources":["component/TrainerOnBoard/TrainerAboutYou/index.js","assets/files/SVG/Insta Icon.svg","assets/files/SVG/Web Icon.svg"],"names":["locations","label","value","gender","AboutTrainer","connect","state","details","trainerReducer","trainerPersonalData","data","dispatch","bindActionCreators","updateTrainerDetails","getTrainerDetails","useForm","register","errors","handleSubmit","useState","location","dob","email","phone","websiteURL","instagram","firstName","aboutTrainerData","setAboutTrainerData","error","useEffect","Object","keys","length","tempData","websiteLink","instaHandle","headers","Authorization","localStorage","getItem","axios","get","then","console","log","className","placeholder","type","name","style","textTransform","onChange","e","target","title","list","ref","required","message","disableDropdown","disableAreaCodes","countryCodeEditable","inputProps","src","Web","alt","Instagram","onClick","storeData","history","push","WaterMark"],"mappings":"mTA2BMA,EAAY,CACd,CACIC,MAAO,gBACPC,MAAO,iBAEX,CACID,MAAO,QACPC,MAAO,SAEX,CACID,MAAO,WACPC,MAAO,YAEX,CACID,MAAO,aACPC,MAAO,eAITC,EAAS,CACX,CACIF,MAAO,OACPC,MAAO,QAEX,CACID,MAAO,SACPC,MAAO,WAsYTE,EAAeC,aAfG,SAACC,GAAD,MAAY,CAChCC,QAASD,EAAME,eAAeD,QAC9BE,oBAAqBH,EAAME,eAAeE,SAGnB,SAACC,GACxB,OAAOC,YACH,CACIC,4CACAC,uCAEJH,KAIaN,EAnYE,SAAC,GAKjB,IAJHQ,EAIE,EAJFA,qBACAN,EAGE,EAHFA,QAYA,GATE,EAFFE,oBAW2CM,eAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,aAQ1B,EAAgDC,mBAAS,CACrDC,SAAU,GACVC,IAAK,GACLC,MAAO,GACPnB,OAAQ,GACRoB,MAAO,GACPC,WAAY,GACZC,UAAW,GACXC,UAAW,KARf,mBAAOC,EAAP,KAAyBC,EAAzB,KAUA,EAA0BT,mBAAS,IAAnC,mBAAOU,EAAP,UA8DA,OAnCAC,qBAAU,WACN,GAAIC,OAAOC,KAAKzB,GAAS0B,OAAS,EAAG,CACjC,IAAIC,EAAW,CACXd,SAAUb,EAAQa,SAClBC,IAAKd,EAAQc,IACbC,MAAOf,EAAQe,MACfnB,OAAQI,EAAQJ,OAChBoB,MAAOhB,EAAQgB,MACfC,WAAYjB,EAAQ4B,YACpBV,UAAWlB,EAAQ6B,YACnBV,UAAWnB,EAAQmB,WAEvBE,EAAoBM,GAGxB,IAAMG,EAAU,CACZ,eAAgB,mBAChBC,cAAeC,aAAaC,QAAQ,UAGxCC,IACKC,IAAI,4CAA6C,CAAEL,YACnDM,MAAK,SAACjC,GACHkC,QAAQC,IAAInC,EAAI,KAAJ,kBAGZkB,EAAoB,2BACbD,GADY,IAEfJ,MAAOb,EAAI,KAAJ,iBACPY,MAAOZ,EAAI,KAAJ,WACPgB,UAAWhB,EAAI,KAAJ,uBAGxB,IAGC,mCACI,qBAAKoC,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,gEAMA,uBACA,qBAAKA,UAAU,cAAf,SACI,uBACIA,UAAU,iBADd,UAII,sBAAKA,UAAU,qBAAf,UACI,0CACA,mCACIC,YAAY,OACZC,KAAK,OACLC,KAAK,OACLC,MAAO,CAAEC,cAAe,cACxBC,SAAU,SAACC,GAAD,OACNzB,EAAoB,2BACbD,GADY,IAEfD,UAAW2B,EAAEC,OAAOpD,UAG5BA,MAAOyB,EAAiBD,WAX5B,OAmBS,cAERG,EAAMH,WACH,+BAAOG,EAAMH,eAIrB,sBAAKoB,UAAU,qBAAf,UACI,uBAAOA,UAAU,UAAjB,uBACA,qBAAKA,UAAU,cAAf,SACI,cAAC,WAAD,CACIA,UAAU,kBACVS,MAAM,kBACNC,KAAMxD,EACNE,MAAOyB,EAAiBP,SACxBgC,SAAU,SAACC,GACPzB,EAAoB,2BACbD,GADY,IAEfP,SAAUiC,EAAEnD,UAGpB+C,KAAK,kBAUjB,sBAAKH,UAAU,qBAAf,UACI,mDACA,uBACIC,YAAY,aACZC,KAAK,OACL9C,MAAOyB,EAAiBN,IACxB+B,SAAU,SAACC,GAAD,OACNzB,EAAoB,2BACbD,GADY,IAEfN,IAAKgC,EAAEC,OAAOpD,UAGtB+C,KAAK,MACLQ,IAAKzC,EAAS,CACV0C,SAAU,4BAGjBzC,EAAOI,KACJ,+BAAOJ,EAAOI,IAAIsC,aAG1B,sBAAKb,UAAU,qBAAf,UACI,4CACA,qBAAKA,UAAU,cAAf,SACI,cAAC,WAAD,CACIA,UAAU,kBACVS,MAAM,gBACNC,KAAMrD,EACND,MAAOyB,EAAiBxB,OACxBiD,SAAU,SAACC,GACPzB,EAAoB,2BACbD,GADY,IAEfxB,OAAQkD,EAAEnD,UAGlB+C,KAAK,gBAUjB,sBAAKH,UAAU,qBAAf,UACI,2CACA,uBACIC,YAAY,QACZC,KAAK,QACL9C,MAAOyB,EAAiBL,MACxB8B,SAAU,SAACC,GAAD,OACNzB,EAAoB,2BACbD,GADY,IAEfL,MAAO+B,EAAEC,OAAOpD,UAGxB+C,KAAK,aAyBb,sBAAKH,UAAU,qBAAf,UACI,2CAkBA,cAAC,IAAD,CACIE,KAAK,QACLY,iBAAe,EACfC,kBAAgB,EAChBC,qBAAqB,EACrB5D,MAAOyB,EAAiBJ,MACxBwB,YAAY,eAEZgB,WAAY,CACRd,KAAM,SAEVA,KAAK,cACLG,SAAU,SAACC,GAAD,OACNzB,EAAoB,2BACbD,GADY,IAEfJ,MAAO8B,QAOlB1B,EAAiBJ,OACdI,EAAiBJ,MAAMU,OAAS,IAC5B,4EAmBZ,sBAAKa,UAAU,qBAAf,UACI,4CACA,sBAAKA,UAAU,cAAf,UACI,uBACIC,YAAY,mBACZC,KAAK,OACL9C,MAAOyB,EAAiBH,WACxB4B,SAAU,SAACC,GAAD,OACNzB,EAAoB,2BACbD,GADY,IAEfH,WAAY6B,EAAEC,OAAOpD,YAIjC,qBAAK8D,IAAKC,UAAKC,IAAI,eAG3B,sBAAKpB,UAAU,qBAAf,UACI,8CACA,sBAAKA,UAAU,cAAf,UACI,uBACIC,YAAY,4BACZC,KAAK,OACL9C,MAAOyB,EAAiBF,UACxB2B,SAAU,SAACC,GAAD,OACNzB,EAAoB,2BACbD,GADY,IAEfF,UAAW4B,EAAEC,OAAOpD,YAIhC,qBAAK8D,IAAKG,UAAWD,IAAI,eAIjC,qBAAKpB,UAAU,gBAAf,SACI,yBACIE,KAAK,SAQLoB,QAASlD,GA3TT,WAI5B,IAAMmD,EAAY,CACd9D,QAAQ,2BACDA,GADA,IAEHmB,UAAWC,EAAiBD,UAC5BL,IAAKM,EAAiBN,IACtBC,MAAOK,EAAiBL,MACxBnB,OAAQwB,EAAiBxB,OACzBoB,MAAOI,EAAiBJ,MACxBH,SAAUO,EAAiBP,SAC3Be,YAAaR,EAAiBH,WAC9BY,YAAaT,EAAiBF,aAGtCmB,QAAQC,IAAIwB,GAEZC,UAAQC,KAAR,uBACA1D,EAAqBwD,MA8RG,qBAcI,cAAC,UAAD,cAKhB,qBACIL,IAAKQ,UACLN,IAAI,OACJpB,UAAU,8BA4BnB1C,a,iCChcf,OAAe,cAA0B,wC,iCCAzC,OAAe,cAA0B,sC","file":"static/js/46.fa303230.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Instagram from \"../../../assets/files/SVG/Insta Icon.svg\";\r\nimport Web from \"../../../assets/files/SVG/Web Icon.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ArrowHoverBlacked from \"../../common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import validation from \"../Validation/validation\";\r\n// import 'react-phone-number-input/style.css'\r\n// import PhoneInput from 'react-phone-number-input'\r\nimport WaterMark from \"../../../assets/files/SVG/M Watermark.svg\";\r\nimport { updateTrainerDetails, getTrainerDetails } from \"action/trainerAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"helpers\";\r\nimport axios from \"axios\";\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Dropdown } from \"reactjs-dropdown-component\";\r\nimport \"./dropdown.scss\";\r\n// import useForm from \"./useForm\";\r\n// import validateInfo from \"./validation\";\r\n\r\n// import { Multiselect } from \"multiselect-react-dropdown\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import Select from \"react-select\";\r\nconst locations = [\r\n    {\r\n        label: \"New York City\",\r\n        value: \"New York City\",\r\n    },\r\n    {\r\n        label: \"Miami\",\r\n        value: \"Miami\",\r\n    },\r\n    {\r\n        label: \"Hamptons\",\r\n        value: \"Hamptons\",\r\n    },\r\n    {\r\n        label: \"Palm Beach\",\r\n        value: \"Palm Beach\",\r\n    },\r\n];\r\n\r\nconst gender = [\r\n    {\r\n        label: \"Male\",\r\n        value: \"male\",\r\n    },\r\n    {\r\n        label: \"Female\",\r\n        value: \"female\",\r\n    },\r\n];\r\nconst AboutTrainerFC = ({\r\n    updateTrainerDetails,\r\n    details,\r\n    trainerPersonalData,\r\n    // submitForm,\r\n}) => {\r\n    //   const [location, setLocation] = useState(\"\");\r\n    //   const [dob, setDob] = useState(0 - 0 - 0);\r\n    //   const [email, setEmail] = useState(\"\");\r\n    //   const [gender, setGender] = useState(\"\");\r\n    //   const [phone, setPhone] = useState(\"\");\r\n    //   const [websiteURL, setWebsiteURL] = useState(\"\");\r\n    //   const [instagram, setInstagram] = useState(\"\");\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n    // const {\r\n    //     aboutTrainerData,\r\n    //     handleFormSubmit,\r\n    //     error,\r\n    //     setAboutTrainerData,\r\n    //     // dataSubmit,\r\n    // } = useForm(validateInfo, submitForm);\r\n    const [aboutTrainerData, setAboutTrainerData] = useState({\r\n        location: \"\",\r\n        dob: \"\",\r\n        email: \"\",\r\n        gender: \"\",\r\n        phone: \"\",\r\n        websiteURL: \"\",\r\n        instagram: \"\",\r\n        firstName: \"\",\r\n    });\r\n    const [error, setError] = useState({});\r\n\r\n    // const history = useHistory();\r\n\r\n    const handleTrainerBackground = () => {\r\n        // history.push(\"/trainer/background\");\r\n        // console.log(aboutTrainerData);\r\n\r\n        const storeData = {\r\n            details: {\r\n                ...details,\r\n                firstName: aboutTrainerData.firstName,\r\n                dob: aboutTrainerData.dob,\r\n                email: aboutTrainerData.email,\r\n                gender: aboutTrainerData.gender,\r\n                phone: aboutTrainerData.phone,\r\n                location: aboutTrainerData.location,\r\n                websiteLink: aboutTrainerData.websiteURL,\r\n                instaHandle: aboutTrainerData.instagram,\r\n            },\r\n        };\r\n        console.log(storeData);\r\n\r\n        history.push(`/trainer/background`);\r\n        updateTrainerDetails(storeData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(details).length > 3) {\r\n            let tempData = {\r\n                location: details.location,\r\n                dob: details.dob,\r\n                email: details.email,\r\n                gender: details.gender,\r\n                phone: details.phone,\r\n                websiteURL: details.websiteLink,\r\n                instagram: details.instaHandle,\r\n                firstName: details.firstName,\r\n            };\r\n            setAboutTrainerData(tempData);\r\n        }\r\n\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"token\"),\r\n        };\r\n\r\n        axios\r\n            .get(\"http://doodlebluelive.com:2307/v1/trainer\", { headers })\r\n            .then((data) => {\r\n                console.log(data[\"data\"][\"data\"][\"phoneNumber\"]);\r\n\r\n                // prepopulate\r\n                setAboutTrainerData({\r\n                    ...aboutTrainerData,\r\n                    phone: data[\"data\"][\"data\"][\"phoneNumber\"],\r\n                    email: data[\"data\"][\"data\"][\"email\"],\r\n                    firstName: data[\"data\"][\"data\"][\"firstName\"],\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container main\">\r\n                <div className=\"wrapper_about\">\r\n                    <h2>Tell us a little bit about you</h2>\r\n                    {/* <p>\r\n                        *Lorem Ipsum is simply dummy text of the printing and\r\n                        typesetting industry. Lorem ipsum has been the. *All\r\n                        these fields are mandatory.{\" \"}\r\n                    </p> */}\r\n                    <br></br>\r\n                    <div className=\"outter_form\">\r\n                        <form\r\n                            className=\"wrapper_inputs\"\r\n                            // onSubmit={handleFormSubmit}\r\n                        >\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Name*</label>\r\n                                <input\r\n                                    placeholder=\"Name\"\r\n                                    type=\"name\"\r\n                                    name=\"name\"\r\n                                    style={{ textTransform: \"capitalize\" }}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            firstName: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    value={aboutTrainerData.firstName}\r\n                                    // ref={register({\r\n                                    //     required: \"This filed is required\",\r\n                                    //     minLength: {\r\n                                    //         value: 2,\r\n                                    //         message: \"Enter a valid name\",\r\n                                    //     },\r\n                                    // })}\r\n                                    name=\"firstName\"\r\n                                />\r\n                                {error.firstName && (\r\n                                    <span>{error.firstName}</span>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label className=\"bg_down\">Location*</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <Dropdown\r\n                                        className=\"custom_dropdown\"\r\n                                        title=\"Select Location\"\r\n                                        list={locations}\r\n                                        value={aboutTrainerData.location}\r\n                                        onChange={(e) => {\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                location: e.value,\r\n                                            });\r\n                                        }}\r\n                                        name=\"location\"\r\n                                    />\r\n                                </div>\r\n                                {/* {errors.location && (\r\n                                    <span>{errors.location.message}</span>\r\n                                )} */}\r\n                                {/* {error.location && (\r\n                                    <span>{error.location}</span>\r\n                                )} */}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Date of Birth*</label>\r\n                                <input\r\n                                    placeholder=\"MM/DD/YYYY\"\r\n                                    type=\"date\"\r\n                                    value={aboutTrainerData.dob}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            dob: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"dob\"\r\n                                    ref={register({\r\n                                        required: \"Please select the DOB\",\r\n                                    })}\r\n                                />\r\n                                {errors.dob && (\r\n                                    <span>{errors.dob.message}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Gender*</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <Dropdown\r\n                                        className=\"custom_dropdown\"\r\n                                        title=\"Select Gender\"\r\n                                        list={gender}\r\n                                        value={aboutTrainerData.gender}\r\n                                        onChange={(e) => {\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                gender: e.value,\r\n                                            });\r\n                                        }}\r\n                                        name=\"gender\"\r\n                                        // name=\"gender\"\r\n                                        // ref={register({\r\n                                        //     required:\r\n                                        //         \"Please select the gender\",\r\n                                        // })}\r\n                                    />\r\n                                </div>\r\n                                {/* {error.gender && <span>{error.gender}</span>} */}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Email*</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    value={aboutTrainerData.email}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            email: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"email\"\r\n                                    // ref={register({\r\n                                    //     pattern:\r\n                                    //         /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i,\r\n                                    //     required: true,\r\n                                    //     minLength: 8,\r\n                                    // })}\r\n                                />\r\n                                {/* {error.email && (<span>{error.email}</span>)} */}\r\n\r\n                                {/* {errors.email?.type === \"required\" && (\r\n                                    <span>This input is required</span>\r\n                                )}\r\n                                {errors.email?.type === \"minLength\" && (\r\n                                    <span>\r\n                                        This field should contain greater then 8\r\n                                        charater\r\n                                    </span>\r\n                                )}\r\n                                {errors.email?.type === \"pattern\" && (\r\n                                    <span>\r\n                                        Please enter a valid email address\r\n                                    </span>\r\n                                )} */}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Phone*</label>\r\n                                {/* <input\r\n                                    placeholder=\"Phone Number\"\r\n                                    type=\"phone\"\r\n                                    value={aboutTrainerData.phone}\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            phone: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    name=\"phone\"\r\n                                    ref={register({\r\n                                        pattern: /^[0-9]*$/i,\r\n                                        required: true,\r\n                                        minLength: 10,\r\n                                    })}\r\n                                /> */}\r\n                                <ReactPhoneInput\r\n                                    type=\"phone\"\r\n                                    disableDropdown\r\n                                    disableAreaCodes\r\n                                    countryCodeEditable={false}\r\n                                    value={aboutTrainerData.phone}\r\n                                    placeholder=\"Phone Number\"\r\n                                    // country=\"us\"\r\n                                    inputProps={{\r\n                                        name: \"phone\",\r\n                                    }}\r\n                                    name=\"phoneNumber\"\r\n                                    onChange={(e) =>\r\n                                        setAboutTrainerData({\r\n                                            ...aboutTrainerData,\r\n                                            phone: e,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                {/* {!aboutTrainerData.phone && (\r\n                  <span>This input is required</span>\r\n                )} */}\r\n                                {aboutTrainerData.phone &&\r\n                                    aboutTrainerData.phone.length < 11 && (\r\n                                        <span>\r\n                                            Phone Number should contain 10\r\n                                            digits\r\n                                        </span>\r\n                                    )}\r\n                                {/* {errors.phone?.type === \"required\" && (\r\n                                    <span>This input is required</span>\r\n                                )}\r\n                                {errors.phone?.type === \"minLength\" && (\r\n                                    <span>\r\n                                        Phone Number should contain 10 digits\r\n                                    </span>\r\n                                )}\r\n                                {errors.phone?.type === \"pattern\" && (\r\n                                    <span>\r\n                                        Please enter a valid phone number\r\n                                    </span>\r\n                                )} */}\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Website</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <input\r\n                                        placeholder=\"Add your website\"\r\n                                        type=\"text\"\r\n                                        value={aboutTrainerData.websiteURL}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                websiteURL: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <img src={Web} alt=\"icon\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"wrapper_innerInput\">\r\n                                <label>Instagram</label>\r\n                                <div className=\"iconwrapper\">\r\n                                    <input\r\n                                        placeholder=\"Add your Instagram Handle\"\r\n                                        type=\"text\"\r\n                                        value={aboutTrainerData.instagram}\r\n                                        onChange={(e) =>\r\n                                            setAboutTrainerData({\r\n                                                ...aboutTrainerData,\r\n                                                instagram: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                    <img src={Instagram} alt=\"icon\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"submit_button\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    // to={{\r\n                                    //     pathname: \"/trainer/background\",\r\n                                    //     state: aboutTrainerData,\r\n                                    // }}\r\n                                    // onClick={handleTrainerBackground}\r\n\r\n                                    //react hook form\r\n                                    onClick={handleSubmit(\r\n                                        handleTrainerBackground\r\n                                    )}\r\n                                >\r\n                                    Continue\r\n                                    <ArrowHoverBlacked />\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <img\r\n                        src={WaterMark}\r\n                        alt=\"icon\"\r\n                        className=\"about_watermark\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    details: state.trainerReducer.details,\r\n    trainerPersonalData: state.trainerReducer.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            updateTrainerDetails,\r\n            getTrainerDetails,\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst AboutTrainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AboutTrainerFC);\r\n\r\nexport default AboutTrainer;\r\n","export default __webpack_public_path__ + \"static/media/Insta Icon.432b9d08.svg\";","export default __webpack_public_path__ + \"static/media/Web Icon.b0ff0aa9.svg\";"],"sourceRoot":""}