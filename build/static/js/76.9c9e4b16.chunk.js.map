{"version":3,"sources":["component/common/ErrorComponent/index.js","component/ForgotPassword/index.js","pages/ForgotPasswordPage/index.js"],"names":["ErrorComponent","message","className","style","fontSize","ForgotPassword","connect","dispatch","bindActionCreators","resetPassword","props","useState","email","setemail","e","a","preventDefault","validateFields","body","then","history","push","catch","err","console","log","error","setErrors","data","fieldInvalidList","validate","presence","allowEmpty","undefined","errors","onSubmit","type","placeholder","value","name","onChange","persist","target","tempErrors","ForgotPasswordPage"],"mappings":"2GAAA,sEAEaA,EAAiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC/B,OACE,sBAAMC,UAAU,cAAcC,MAAO,CAAEC,SAAU,QAAjD,SACGH,GAAoB,qB,oKCoFrBI,EAAiBC,YAAQ,MATJ,SAACC,GAC1B,OAAOC,YACL,CACEC,+BAEFF,KAImBD,EAhFK,SAACI,GAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KADqC,4CAGrC,WAA4BC,GAA5B,eAAAC,EAAA,yDACED,EAAEE,iBAIGC,EAHDC,EAAO,CACTN,UAHJ,iDAMEF,EACGD,cAAcS,GACdC,MAAK,WACJC,UAAQC,KAAK,sBAGdC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAZhC,4CAHqC,sBAiBrC,MAA2BZ,mBAAS,IAApC,mBAAOe,EAAP,KAAcC,EAAd,KAaMV,EAAiB,SAACW,GACtB,IAAIC,EAAmBC,kBAASF,EAZzB,CACLhB,MAAO,CACLmB,SAAU,CACRC,YAAY,EACZ/B,QAAS,sBAEXW,OAAO,KAQX,QAAyBqB,IAArBJ,EAAgC,CAClC,IAAIK,EAAM,eACLL,GAGLF,EAAU,2BAAKO,GAAWL,IAG5B,OAAQA,GAWV,OACE,sBAAK3B,UAAU,wBAAf,UACE,kDAA0B,IAC1B,uBAAMiC,SAvD2B,4CAuDjC,UACE,uBACEC,KAAK,QACLC,YAAY,2BACZC,MAAO1B,EACP2B,KAAK,QACLC,SAlBc,SAAC1B,GACrBA,EAAE2B,UACF,MAAwB3B,EAAE4B,QAAU,GAA5BH,EAAR,EAAQA,KAAMD,EAAd,EAAcA,MACVK,EAAU,eAAQjB,GACtBiB,EAAWJ,QAAQN,EACnBN,EAAU,2BAAKD,GAAUiB,IACzB9B,EAASyB,MAcJZ,EAAMd,OAAS,cAAC,iBAAD,CAAgBX,QAASyB,EAAMd,MAAM,KACrD,yBAAQwB,KAAK,SAASlC,UAAU,gBAAhC,oBACS,cAAC,UAAD,gBAiBFG,a,iCC3Ff,gCASeuC,UAPY,WACvB,OACI,mCACI,cAAC,UAAD,Q","file":"static/js/76.9c9e4b16.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ErrorComponent = ({ message }) => {\r\n  return (\r\n    <span className=\"text-danger\" style={{ fontSize: \"16px\" }}>\r\n      {message ? message : \"Error in field\"}\r\n    </span>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { resetPassword } from \"action/authAct\";\r\nimport { history } from \"helpers\";\r\nimport ArrowHoverBlacked from \"component/common/BlackCircleButton/ArrowHoverBlacked\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport validate from \"service/validation\";\r\nimport { ErrorComponent } from \"component/common/ErrorComponent\";\r\nconst ForgotPasswordClass = (props) => {\r\n  const [email, setemail] = useState(\"\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let body = {\r\n      email,\r\n    };\r\n    if (!validateFields(body)) return;\r\n    props\r\n      .resetPassword(body)\r\n      .then(() => {\r\n        history.push(\"/forgot/success\");\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  }\r\n  const [error, setErrors] = useState({});\r\n  const validationRules = () => {\r\n    return {\r\n      email: {\r\n        presence: {\r\n          allowEmpty: false,\r\n          message: \"^Email is required\",\r\n        },\r\n        email: true,\r\n      },\r\n    };\r\n  };\r\n\r\n  const validateFields = (data) => {\r\n    let fieldInvalidList = validate(data, validationRules());\r\n\r\n    if (fieldInvalidList !== undefined) {\r\n      let errors = {\r\n        ...fieldInvalidList,\r\n      };\r\n\r\n      setErrors({ ...errors, ...fieldInvalidList });\r\n    }\r\n\r\n    return !fieldInvalidList;\r\n  };\r\n  const onChangeValue = (e) => {\r\n    e.persist();\r\n    const { name, value } = e.target || {};\r\n    let tempErrors = { ...error };\r\n    tempErrors[name] = undefined;\r\n    setErrors({ ...error, ...tempErrors });\r\n    setemail(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container forgot_main\">\r\n      <h2>Forgot Password?</h2>{\" \"}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email address\"\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={onChangeValue}\r\n        />\r\n        {error.email && <ErrorComponent message={error.email[0]} />}\r\n        <button type=\"submit\" className=\"forgot_submit\">\r\n          Submit <ArrowHoverBlacked />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      resetPassword,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst ForgotPassword = connect(null, mapDispatchToProps)(ForgotPasswordClass);\r\n\r\nexport default ForgotPassword;\r\n","import React from \"react\";\r\nimport ForgotPassword from \"component/ForgotPassword\";\r\nconst ForgotPasswordPage = () => {\r\n    return (\r\n        <>\r\n            <ForgotPassword />\r\n        </>\r\n    );\r\n};\r\nexport default ForgotPasswordPage;\r\n"],"sourceRoot":""}